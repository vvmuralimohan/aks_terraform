{
    "kind": "NodeList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "3731"
    },
    "items": [
        {
            "metadata": {
                "name": "aks-default-20426481-vmss000000",
                "uid": "53367dc9-f890-4712-8d23-366af186481d",
                "resourceVersion": "3542",
                "creationTimestamp": "2023-12-26T14:13:32Z",
                "labels": {
                    "agentpool": "default",
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/instance-type": "Standard_D2_v2",
                    "beta.kubernetes.io/os": "linux",
                    "failure-domain.beta.kubernetes.io/region": "eastus",
                    "failure-domain.beta.kubernetes.io/zone": "0",
                    "kubernetes.azure.com/agentpool": "default",
                    "kubernetes.azure.com/cluster": "MC_Linux-RG_murali-aks_eastus",
                    "kubernetes.azure.com/consolidated-additional-properties": "9f70c7f9-a3f8-11ee-a9f7-ca392b116a58",
                    "kubernetes.azure.com/kubelet-identity-client-id": "02c18a8b-be51-44c8-8285-8b733b47112c",
                    "kubernetes.azure.com/mode": "system",
                    "kubernetes.azure.com/node-image-version": "AKSUbuntu-2204containerd-202312.06.0",
                    "kubernetes.azure.com/nodepool-type": "VirtualMachineScaleSets",
                    "kubernetes.azure.com/os-sku": "Ubuntu",
                    "kubernetes.azure.com/role": "agent",
                    "kubernetes.azure.com/storageprofile": "managed",
                    "kubernetes.azure.com/storagetier": "Standard_LRS",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "aks-default-20426481-vmss000000",
                    "kubernetes.io/os": "linux",
                    "kubernetes.io/role": "agent",
                    "node-role.kubernetes.io/agent": "",
                    "node.kubernetes.io/instance-type": "Standard_D2_v2",
                    "storageprofile": "managed",
                    "storagetier": "Standard_LRS",
                    "topology.disk.csi.azure.com/zone": "",
                    "topology.kubernetes.io/region": "eastus",
                    "topology.kubernetes.io/zone": "0"
                },
                "annotations": {
                    "csi.volume.kubernetes.io/nodeid": "{\"disk.csi.azure.com\":\"aks-default-20426481-vmss000000\",\"file.csi.azure.com\":\"aks-default-20426481-vmss000000\"}",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "podCIDR": "10.244.0.0/24",
                "podCIDRs": [
                    "10.244.0.0/24"
                ],
                "providerID": "azure:///subscriptions/85f0d4f2-4627-4b0d-82e5-357dbda3ef53/resourceGroups/mc_linux-rg_murali-aks_eastus/providers/Microsoft.Compute/virtualMachineScaleSets/aks-default-20426481-vmss/virtualMachines/0"
            },
            "status": {
                "capacity": {
                    "cpu": "2",
                    "ephemeral-storage": "129886128Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "7098384Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "1900m",
                    "ephemeral-storage": "119703055367",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "4653072Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "FrequentContainerdRestart",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-26T14:21:33Z",
                        "lastTransitionTime": "2023-12-26T14:16:02Z",
                        "reason": "NoFrequentContainerdRestart",
                        "message": "containerd is functioning properly"
                    },
                    {
                        "type": "FrequentUnregisterNetDevice",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-26T14:21:33Z",
                        "lastTransitionTime": "2023-12-26T14:16:02Z",
                        "reason": "NoFrequentUnregisterNetDevice",
                        "message": "node is functioning properly"
                    },
                    {
                        "type": "FrequentDockerRestart",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-26T14:21:33Z",
                        "lastTransitionTime": "2023-12-26T14:16:02Z",
                        "reason": "NoFrequentDockerRestart",
                        "message": "docker is functioning properly"
                    },
                    {
                        "type": "VMEventScheduled",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-26T14:21:33Z",
                        "lastTransitionTime": "2023-12-26T14:16:32Z",
                        "reason": "NoVMEventScheduled",
                        "message": "VM has no scheduled event"
                    },
                    {
                        "type": "KernelDeadlock",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-26T14:21:33Z",
                        "lastTransitionTime": "2023-12-26T14:16:02Z",
                        "reason": "KernelHasNoDeadlock",
                        "message": "kernel has no deadlock"
                    },
                    {
                        "type": "ReadonlyFilesystem",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-26T14:21:33Z",
                        "lastTransitionTime": "2023-12-26T14:16:02Z",
                        "reason": "FilesystemIsNotReadOnly",
                        "message": "Filesystem is not read-only"
                    },
                    {
                        "type": "FilesystemCorruptionProblem",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-26T14:21:33Z",
                        "lastTransitionTime": "2023-12-26T14:16:02Z",
                        "reason": "FilesystemIsOK",
                        "message": "Filesystem is healthy"
                    },
                    {
                        "type": "ContainerRuntimeProblem",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-26T14:21:33Z",
                        "lastTransitionTime": "2023-12-26T14:16:02Z",
                        "reason": "ContainerRuntimeIsUp",
                        "message": "container runtime service is up"
                    },
                    {
                        "type": "KubeletProblem",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-26T14:21:33Z",
                        "lastTransitionTime": "2023-12-26T14:16:02Z",
                        "reason": "KubeletIsUp",
                        "message": "kubelet service is up"
                    },
                    {
                        "type": "FrequentKubeletRestart",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-26T14:21:33Z",
                        "lastTransitionTime": "2023-12-26T14:16:02Z",
                        "reason": "NoFrequentKubeletRestart",
                        "message": "kubelet is functioning properly"
                    },
                    {
                        "type": "NetworkUnavailable",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-26T14:14:13Z",
                        "lastTransitionTime": "2023-12-26T14:14:13Z",
                        "reason": "RouteCreated",
                        "message": "RouteController created a route"
                    },
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-26T14:24:16Z",
                        "lastTransitionTime": "2023-12-26T14:13:32Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-26T14:24:16Z",
                        "lastTransitionTime": "2023-12-26T14:13:32Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-26T14:24:16Z",
                        "lastTransitionTime": "2023-12-26T14:13:32Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2023-12-26T14:24:16Z",
                        "lastTransitionTime": "2023-12-26T14:13:43Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status. AppArmor enabled"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "10.224.0.4"
                    },
                    {
                        "type": "Hostname",
                        "address": "aks-default-20426481-vmss000000"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "493615c4895141d5bbe1f3157ddc448a",
                    "systemUUID": "f2eaecac-55c7-af43-9154-e8e597fa0ff5",
                    "bootID": "1aa20d7a-8cfa-4a52-8fe7-5ffc8fad2d02",
                    "kernelVersion": "5.15.0-1052-azure",
                    "osImage": "Ubuntu 22.04.3 LTS",
                    "containerRuntimeVersion": "containerd://1.7.5-1",
                    "kubeletVersion": "v1.27.7",
                    "kubeProxyVersion": "v1.27.7",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.0-main-10-20-2023-182f67d4"
                        ],
                        "sizeBytes": 272833700
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.1-main-11-03-2023-c061beb4"
                        ],
                        "sizeBytes": 271641914
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/calico/node:v3.24.6"
                        ],
                        "sizeBytes": 248624860
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.15"
                        ],
                        "sizeBytes": 246808747
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/calico/cni:v3.24.6"
                        ],
                        "sizeBytes": 212217067
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/cilium/cilium:1.13.5-3"
                        ],
                        "sizeBytes": 184212164
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/cilium/cilium:1.13.5-1"
                        ],
                        "sizeBytes": 180870229
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/blob-csi:v1.23.2"
                        ],
                        "sizeBytes": 177883372
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/cilium/cilium:1.12.10-3"
                        ],
                        "sizeBytes": 173133071
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/cilium/cilium:1.12.10-2"
                        ],
                        "sizeBytes": 173132943
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/azure-cns:v1.5.15"
                        ],
                        "sizeBytes": 166503494
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/azure-cns:v1.4.51"
                        ],
                        "sizeBytes": 164106094
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/blob-csi:v1.22.4"
                        ],
                        "sizeBytes": 147411178
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/blob-csi:v1.23.1"
                        ],
                        "sizeBytes": 134841073
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/blob-csi:v1.22.3"
                        ],
                        "sizeBytes": 134539228
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/blob-csi:v1.21.6"
                        ],
                        "sizeBytes": 124854725
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.29.2"
                        ],
                        "sizeBytes": 116899405
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.28.7"
                        ],
                        "sizeBytes": 116886323
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.29.1"
                        ],
                        "sizeBytes": 116276867
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.28.6"
                        ],
                        "sizeBytes": 116239784
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/blob-csi:v1.21.5"
                        ],
                        "sizeBytes": 113428738
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/blob-csi:v1.19.6"
                        ],
                        "sizeBytes": 113411371
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/azure-npm:v1.4.45.3"
                        ],
                        "sizeBytes": 96349348
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.26.10"
                        ],
                        "sizeBytes": 85898337
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.0-main-10-20-2023-182f67d4-cfg"
                        ],
                        "sizeBytes": 85512295
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.26.9"
                        ],
                        "sizeBytes": 84580147
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.1-main-11-03-2023-c061beb4-cfg"
                        ],
                        "sizeBytes": 84322029
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.24.11"
                        ],
                        "sizeBytes": 83891704
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.27.7-1"
                        ],
                        "sizeBytes": 80751822
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/nvidia/k8s-device-plugin:v0.13.0.7"
                        ],
                        "sizeBytes": 80468007
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/calico/kube-controllers:v3.24.6"
                        ],
                        "sizeBytes": 77561377
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/cni-dropgz:v0.1.1"
                        ],
                        "sizeBytes": 77107240
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/cni-dropgz:v0.0.4.2"
                        ],
                        "sizeBytes": 72963520
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.27.7-hotfix.20231103"
                        ],
                        "sizeBytes": 72728494
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/secrets-store/driver:v1.3.4-1"
                        ],
                        "sizeBytes": 72233730
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/tigera/operator:v1.28.13"
                        ],
                        "sizeBytes": 71516386
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/calico/typha:v3.24.6"
                        ],
                        "sizeBytes": 70494500
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/secrets-store/driver:v1.4.0"
                        ],
                        "sizeBytes": 63089145
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.2"
                        ],
                        "sizeBytes": 59083981
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.1"
                        ],
                        "sizeBytes": 58900385
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.28.5"
                        ],
                        "sizeBytes": 58074362
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.28.4"
                        ],
                        "sizeBytes": 58008952
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.1-main-11-03-2023-c061beb4-targetallocator"
                        ],
                        "sizeBytes": 57932058
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.0-main-10-20-2023-182f67d4-targetallocator"
                        ],
                        "sizeBytes": 57932058
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.26.8"
                        ],
                        "sizeBytes": 57752430
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.26.7"
                        ],
                        "sizeBytes": 57632639
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes/kube-state-metrics:v2.9.2"
                        ],
                        "sizeBytes": 43520704
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.8"
                        ],
                        "sizeBytes": 39451057
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/open-policy-agent/gatekeeper:v3.13.4"
                        ],
                        "sizeBytes": 39188081
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/open-policy-agent/gatekeeper:v3.13.3"
                        ],
                        "sizeBytes": 38595393
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "aks-default-20426481-vmss000001",
                "uid": "e79d6219-bfb3-4392-90aa-7f6a954e3e5e",
                "resourceVersion": "2770",
                "creationTimestamp": "2023-12-26T14:13:37Z",
                "labels": {
                    "agentpool": "default",
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/instance-type": "Standard_D2_v2",
                    "beta.kubernetes.io/os": "linux",
                    "failure-domain.beta.kubernetes.io/region": "eastus",
                    "failure-domain.beta.kubernetes.io/zone": "0",
                    "kubernetes.azure.com/agentpool": "default",
                    "kubernetes.azure.com/cluster": "MC_Linux-RG_murali-aks_eastus",
                    "kubernetes.azure.com/consolidated-additional-properties": "9f70c7f9-a3f8-11ee-a9f7-ca392b116a58",
                    "kubernetes.azure.com/kubelet-identity-client-id": "02c18a8b-be51-44c8-8285-8b733b47112c",
                    "kubernetes.azure.com/mode": "system",
                    "kubernetes.azure.com/node-image-version": "AKSUbuntu-2204containerd-202312.06.0",
                    "kubernetes.azure.com/nodepool-type": "VirtualMachineScaleSets",
                    "kubernetes.azure.com/os-sku": "Ubuntu",
                    "kubernetes.azure.com/role": "agent",
                    "kubernetes.azure.com/storageprofile": "managed",
                    "kubernetes.azure.com/storagetier": "Standard_LRS",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "aks-default-20426481-vmss000001",
                    "kubernetes.io/os": "linux",
                    "kubernetes.io/role": "agent",
                    "node-role.kubernetes.io/agent": "",
                    "node.kubernetes.io/instance-type": "Standard_D2_v2",
                    "storageprofile": "managed",
                    "storagetier": "Standard_LRS",
                    "topology.disk.csi.azure.com/zone": "",
                    "topology.kubernetes.io/region": "eastus",
                    "topology.kubernetes.io/zone": "0"
                },
                "annotations": {
                    "csi.volume.kubernetes.io/nodeid": "{\"disk.csi.azure.com\":\"aks-default-20426481-vmss000001\",\"file.csi.azure.com\":\"aks-default-20426481-vmss000001\"}",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "podCIDR": "10.244.1.0/24",
                "podCIDRs": [
                    "10.244.1.0/24"
                ],
                "providerID": "azure:///subscriptions/85f0d4f2-4627-4b0d-82e5-357dbda3ef53/resourceGroups/mc_linux-rg_murali-aks_eastus/providers/Microsoft.Compute/virtualMachineScaleSets/aks-default-20426481-vmss/virtualMachines/1"
            },
            "status": {
                "capacity": {
                    "cpu": "2",
                    "ephemeral-storage": "129886128Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "7098376Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "1900m",
                    "ephemeral-storage": "119703055367",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "4653064Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "FrequentKubeletRestart",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-26T14:21:07Z",
                        "lastTransitionTime": "2023-12-26T14:16:05Z",
                        "reason": "NoFrequentKubeletRestart",
                        "message": "kubelet is functioning properly"
                    },
                    {
                        "type": "FrequentUnregisterNetDevice",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-26T14:21:07Z",
                        "lastTransitionTime": "2023-12-26T14:16:05Z",
                        "reason": "NoFrequentUnregisterNetDevice",
                        "message": "node is functioning properly"
                    },
                    {
                        "type": "KernelDeadlock",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-26T14:21:07Z",
                        "lastTransitionTime": "2023-12-26T14:16:05Z",
                        "reason": "KernelHasNoDeadlock",
                        "message": "kernel has no deadlock"
                    },
                    {
                        "type": "ContainerRuntimeProblem",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-26T14:21:07Z",
                        "lastTransitionTime": "2023-12-26T14:16:05Z",
                        "reason": "ContainerRuntimeIsUp",
                        "message": "container runtime service is up"
                    },
                    {
                        "type": "ReadonlyFilesystem",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-26T14:21:07Z",
                        "lastTransitionTime": "2023-12-26T14:16:05Z",
                        "reason": "FilesystemIsNotReadOnly",
                        "message": "Filesystem is not read-only"
                    },
                    {
                        "type": "FrequentDockerRestart",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-26T14:21:07Z",
                        "lastTransitionTime": "2023-12-26T14:16:05Z",
                        "reason": "NoFrequentDockerRestart",
                        "message": "docker is functioning properly"
                    },
                    {
                        "type": "KubeletProblem",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-26T14:21:07Z",
                        "lastTransitionTime": "2023-12-26T14:16:05Z",
                        "reason": "KubeletIsUp",
                        "message": "kubelet service is up"
                    },
                    {
                        "type": "VMEventScheduled",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-26T14:21:07Z",
                        "lastTransitionTime": "2023-12-26T14:16:05Z",
                        "reason": "NoVMEventScheduled",
                        "message": "VM has no scheduled event"
                    },
                    {
                        "type": "FrequentContainerdRestart",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-26T14:21:07Z",
                        "lastTransitionTime": "2023-12-26T14:16:05Z",
                        "reason": "NoFrequentContainerdRestart",
                        "message": "containerd is functioning properly"
                    },
                    {
                        "type": "FilesystemCorruptionProblem",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-26T14:21:07Z",
                        "lastTransitionTime": "2023-12-26T14:16:05Z",
                        "reason": "FilesystemIsOK",
                        "message": "Filesystem is healthy"
                    },
                    {
                        "type": "NetworkUnavailable",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-26T14:15:12Z",
                        "lastTransitionTime": "2023-12-26T14:15:12Z",
                        "reason": "RouteCreated",
                        "message": "RouteController created a route"
                    },
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-26T14:20:25Z",
                        "lastTransitionTime": "2023-12-26T14:13:37Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-26T14:20:25Z",
                        "lastTransitionTime": "2023-12-26T14:13:37Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-26T14:20:25Z",
                        "lastTransitionTime": "2023-12-26T14:13:37Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2023-12-26T14:20:25Z",
                        "lastTransitionTime": "2023-12-26T14:13:37Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status. AppArmor enabled"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "10.224.0.5"
                    },
                    {
                        "type": "Hostname",
                        "address": "aks-default-20426481-vmss000001"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "561c6973bba34c8c9c3d0e7aaca389eb",
                    "systemUUID": "faddb64a-9d20-bb42-b3f2-0ce9f94804f7",
                    "bootID": "d5304522-ded1-4305-b214-b4cc85f77898",
                    "kernelVersion": "5.15.0-1052-azure",
                    "osImage": "Ubuntu 22.04.3 LTS",
                    "containerRuntimeVersion": "containerd://1.7.5-1",
                    "kubeletVersion": "v1.27.7",
                    "kubeProxyVersion": "v1.27.7",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.0-main-10-20-2023-182f67d4"
                        ],
                        "sizeBytes": 272833700
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.1-main-11-03-2023-c061beb4"
                        ],
                        "sizeBytes": 271641914
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/calico/node:v3.24.6"
                        ],
                        "sizeBytes": 248624860
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.15"
                        ],
                        "sizeBytes": 246808747
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/calico/cni:v3.24.6"
                        ],
                        "sizeBytes": 212217067
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/cilium/cilium:1.13.5-3"
                        ],
                        "sizeBytes": 184212164
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/cilium/cilium:1.13.5-1"
                        ],
                        "sizeBytes": 180870229
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/blob-csi:v1.23.2"
                        ],
                        "sizeBytes": 177883372
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/cilium/cilium:1.12.10-3"
                        ],
                        "sizeBytes": 173133071
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/cilium/cilium:1.12.10-2"
                        ],
                        "sizeBytes": 173132943
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/azure-cns:v1.5.15"
                        ],
                        "sizeBytes": 166503494
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/azure-cns:v1.4.51"
                        ],
                        "sizeBytes": 164106094
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/blob-csi:v1.22.4"
                        ],
                        "sizeBytes": 147411178
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/blob-csi:v1.23.1"
                        ],
                        "sizeBytes": 134841073
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/blob-csi:v1.22.3"
                        ],
                        "sizeBytes": 134539228
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/blob-csi:v1.21.6"
                        ],
                        "sizeBytes": 124854725
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.29.2"
                        ],
                        "sizeBytes": 116899405
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.28.7"
                        ],
                        "sizeBytes": 116886323
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.29.1"
                        ],
                        "sizeBytes": 116276867
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.28.6"
                        ],
                        "sizeBytes": 116239784
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/blob-csi:v1.21.5"
                        ],
                        "sizeBytes": 113428738
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/blob-csi:v1.19.6"
                        ],
                        "sizeBytes": 113411371
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/azure-npm:v1.4.45.3"
                        ],
                        "sizeBytes": 96349348
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.26.10"
                        ],
                        "sizeBytes": 85898337
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.0-main-10-20-2023-182f67d4-cfg"
                        ],
                        "sizeBytes": 85512295
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.26.9"
                        ],
                        "sizeBytes": 84580147
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.1-main-11-03-2023-c061beb4-cfg"
                        ],
                        "sizeBytes": 84322029
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.24.11"
                        ],
                        "sizeBytes": 83891704
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.27.7-1"
                        ],
                        "sizeBytes": 80751822
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/nvidia/k8s-device-plugin:v0.13.0.7"
                        ],
                        "sizeBytes": 80468007
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/calico/kube-controllers:v3.24.6"
                        ],
                        "sizeBytes": 77561377
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/cni-dropgz:v0.1.1"
                        ],
                        "sizeBytes": 77107240
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/cni-dropgz:v0.0.4.2"
                        ],
                        "sizeBytes": 72963520
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.27.7-hotfix.20231103"
                        ],
                        "sizeBytes": 72728494
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/secrets-store/driver:v1.3.4-1"
                        ],
                        "sizeBytes": 72233730
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/tigera/operator:v1.28.13"
                        ],
                        "sizeBytes": 71516386
                    },
                    {
                        "names": [
                            "docker.io/library/nginx@sha256:2bdc49f2f8ae8d8dc50ed00f2ee56d00385c6f8bc8a8b320d0a294d9e3b49026",
                            "docker.io/library/nginx:latest"
                        ],
                        "sizeBytes": 70519830
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/calico/typha:v3.24.6"
                        ],
                        "sizeBytes": 70494500
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/secrets-store/driver:v1.4.0"
                        ],
                        "sizeBytes": 63089145
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.2"
                        ],
                        "sizeBytes": 59083981
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.1"
                        ],
                        "sizeBytes": 58900385
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.28.5"
                        ],
                        "sizeBytes": 58074362
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.28.4"
                        ],
                        "sizeBytes": 58008952
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.1-main-11-03-2023-c061beb4-targetallocator"
                        ],
                        "sizeBytes": 57932058
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.8.0-main-10-20-2023-182f67d4-targetallocator"
                        ],
                        "sizeBytes": 57932058
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.26.8"
                        ],
                        "sizeBytes": 57752430
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.26.7"
                        ],
                        "sizeBytes": 57632639
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes/kube-state-metrics:v2.9.2"
                        ],
                        "sizeBytes": 43520704
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.8"
                        ],
                        "sizeBytes": 39451057
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/open-policy-agent/gatekeeper:v3.13.4"
                        ],
                        "sizeBytes": 39188081
                    }
                ]
            }
        }
    ]
}
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "3732"
    },
    "items": [
        {
            "metadata": {
                "name": "azure-ip-masq-agent-5nhnv.17a4672f8115715c",
                "namespace": "kube-system",
                "uid": "d5b05956-1c28-4094-ae5c-c157d29f26e9",
                "resourceVersion": "609",
                "creationTimestamp": "2023-12-26T14:13:32Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-ip-masq-agent-5nhnv",
                "uid": "fd546dfd-262e-475b-9558-28effbf27969",
                "apiVersion": "v1",
                "resourceVersion": "601"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/azure-ip-masq-agent-5nhnv to aks-default-20426481-vmss000000",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:13:32Z",
            "lastTimestamp": "2023-12-26T14:13:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "azure-ip-masq-agent-5nhnv.17a46732381965ff",
                "namespace": "kube-system",
                "uid": "c92d177b-b984-4e37-a463-1abc41e60457",
                "resourceVersion": "772",
                "creationTimestamp": "2023-12-26T14:13:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-ip-masq-agent-5nhnv",
                "uid": "fd546dfd-262e-475b-9558-28effbf27969",
                "apiVersion": "v1",
                "resourceVersion": "604",
                "fieldPath": "spec.containers{azure-ip-masq-agent}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/aks/ip-masq-agent-v2:v0.1.8\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:44Z",
            "lastTimestamp": "2023-12-26T14:13:44Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "azure-ip-masq-agent-5nhnv.17a467324c211151",
                "namespace": "kube-system",
                "uid": "b84d05f3-8487-4f1c-9309-3d4c44437a3d",
                "resourceVersion": "777",
                "creationTimestamp": "2023-12-26T14:13:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-ip-masq-agent-5nhnv",
                "uid": "fd546dfd-262e-475b-9558-28effbf27969",
                "apiVersion": "v1",
                "resourceVersion": "604",
                "fieldPath": "spec.containers{azure-ip-masq-agent}"
            },
            "reason": "Created",
            "message": "Created container azure-ip-masq-agent",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:44Z",
            "lastTimestamp": "2023-12-26T14:13:44Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "azure-ip-masq-agent-5nhnv.17a4673257939e15",
                "namespace": "kube-system",
                "uid": "8a95a525-63ab-42b0-84b5-8ec559198100",
                "resourceVersion": "781",
                "creationTimestamp": "2023-12-26T14:13:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-ip-masq-agent-5nhnv",
                "uid": "fd546dfd-262e-475b-9558-28effbf27969",
                "apiVersion": "v1",
                "resourceVersion": "604",
                "fieldPath": "spec.containers{azure-ip-masq-agent}"
            },
            "reason": "Started",
            "message": "Started container azure-ip-masq-agent",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:44Z",
            "lastTimestamp": "2023-12-26T14:13:44Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "azure-ip-masq-agent-cnmb4.17a46730a6acd528",
                "namespace": "kube-system",
                "uid": "407f2e41-cd38-4a7c-94f8-50f8a22f4b05",
                "resourceVersion": "680",
                "creationTimestamp": "2023-12-26T14:13:37Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-ip-masq-agent-cnmb4",
                "uid": "e1e50ca0-a1c1-400e-8852-6fc82f6f52c0",
                "apiVersion": "v1",
                "resourceVersion": "673"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/azure-ip-masq-agent-cnmb4 to aks-default-20426481-vmss000001",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:13:37Z",
            "lastTimestamp": "2023-12-26T14:13:37Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "azure-ip-masq-agent-cnmb4.17a46730e90432b9",
                "namespace": "kube-system",
                "uid": "ca9f844b-b054-4cc7-80fb-e1b39d457b47",
                "resourceVersion": "694",
                "creationTimestamp": "2023-12-26T14:13:38Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-ip-masq-agent-cnmb4",
                "uid": "e1e50ca0-a1c1-400e-8852-6fc82f6f52c0",
                "apiVersion": "v1",
                "resourceVersion": "677",
                "fieldPath": "spec.containers{azure-ip-masq-agent}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/aks/ip-masq-agent-v2:v0.1.8\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:38Z",
            "lastTimestamp": "2023-12-26T14:13:38Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "azure-ip-masq-agent-cnmb4.17a46730feb562dd",
                "namespace": "kube-system",
                "uid": "f25f5076-8de5-44e4-af91-3e67b08d2d97",
                "resourceVersion": "702",
                "creationTimestamp": "2023-12-26T14:13:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-ip-masq-agent-cnmb4",
                "uid": "e1e50ca0-a1c1-400e-8852-6fc82f6f52c0",
                "apiVersion": "v1",
                "resourceVersion": "677",
                "fieldPath": "spec.containers{azure-ip-masq-agent}"
            },
            "reason": "Created",
            "message": "Created container azure-ip-masq-agent",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:39Z",
            "lastTimestamp": "2023-12-26T14:13:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "azure-ip-masq-agent-cnmb4.17a4673108b9ed68",
                "namespace": "kube-system",
                "uid": "02f24448-4993-4972-aaa7-807f42050143",
                "resourceVersion": "707",
                "creationTimestamp": "2023-12-26T14:13:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-ip-masq-agent-cnmb4",
                "uid": "e1e50ca0-a1c1-400e-8852-6fc82f6f52c0",
                "apiVersion": "v1",
                "resourceVersion": "677",
                "fieldPath": "spec.containers{azure-ip-masq-agent}"
            },
            "reason": "Started",
            "message": "Started container azure-ip-masq-agent",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:39Z",
            "lastTimestamp": "2023-12-26T14:13:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "azure-ip-masq-agent.17a4672f7fa832a8",
                "namespace": "kube-system",
                "uid": "22a7279c-bccf-43b8-879c-b5c169e232dd",
                "resourceVersion": "605",
                "creationTimestamp": "2023-12-26T14:13:32Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "azure-ip-masq-agent",
                "uid": "5cd5884d-2818-4763-b117-754e9ab3be97",
                "apiVersion": "apps/v1",
                "resourceVersion": "408"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: azure-ip-masq-agent-5nhnv",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2023-12-26T14:13:32Z",
            "lastTimestamp": "2023-12-26T14:13:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "azure-ip-masq-agent.17a46730a61eac32",
                "namespace": "kube-system",
                "uid": "2c26fcd1-67ed-4432-ae27-b7a8cefdb99f",
                "resourceVersion": "676",
                "creationTimestamp": "2023-12-26T14:13:37Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "azure-ip-masq-agent",
                "uid": "5cd5884d-2818-4763-b117-754e9ab3be97",
                "apiVersion": "apps/v1",
                "resourceVersion": "613"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: azure-ip-masq-agent-cnmb4",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2023-12-26T14:13:37Z",
            "lastTimestamp": "2023-12-26T14:13:37Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "cloud-controller-manager.17a4672a2ce279f9",
                "namespace": "kube-system",
                "uid": "aa9154bd-fe44-4d3f-a26a-b142bcca1a80",
                "resourceVersion": "281",
                "creationTimestamp": "2023-12-26T14:13:09Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "cloud-controller-manager",
                "uid": "2b9be702-e5c5-4f33-9e67-48369986199b",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "280"
            },
            "reason": "LeaderElection",
            "message": "cloud-controller-manager-7c7c94dc9c-4dw65_2c8f72ae-dd2e-48d7-9712-cba95af51b36 became leader",
            "source": {
                "component": "cloud-controller-manager"
            },
            "firstTimestamp": "2023-12-26T14:13:09Z",
            "lastTimestamp": "2023-12-26T14:13:09Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "cloud-controller-manager",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "cloud-node-manager-sqvfd.17a46730a0c722e9",
                "namespace": "kube-system",
                "uid": "12485eb7-6eb8-4fda-8ce7-d2daefd3a060",
                "resourceVersion": "657",
                "creationTimestamp": "2023-12-26T14:13:37Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "cloud-node-manager-sqvfd",
                "uid": "89ba9e67-38bc-4ecc-ba23-990e54172469",
                "apiVersion": "v1",
                "resourceVersion": "650"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/cloud-node-manager-sqvfd to aks-default-20426481-vmss000001",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:13:37Z",
            "lastTimestamp": "2023-12-26T14:13:37Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "cloud-node-manager-sqvfd.17a46730eac43a89",
                "namespace": "kube-system",
                "uid": "3f4f046a-8cac-489b-85c1-14e9b81eedd4",
                "resourceVersion": "696",
                "creationTimestamp": "2023-12-26T14:13:38Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "cloud-node-manager-sqvfd",
                "uid": "89ba9e67-38bc-4ecc-ba23-990e54172469",
                "apiVersion": "v1",
                "resourceVersion": "654",
                "fieldPath": "spec.containers{cloud-node-manager}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.27.8\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:38Z",
            "lastTimestamp": "2023-12-26T14:13:38Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "cloud-node-manager-sqvfd.17a46730fdcbbf39",
                "namespace": "kube-system",
                "uid": "cb3df20d-ae67-4262-a537-c51b1cff24ee",
                "resourceVersion": "701",
                "creationTimestamp": "2023-12-26T14:13:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "cloud-node-manager-sqvfd",
                "uid": "89ba9e67-38bc-4ecc-ba23-990e54172469",
                "apiVersion": "v1",
                "resourceVersion": "654",
                "fieldPath": "spec.containers{cloud-node-manager}"
            },
            "reason": "Created",
            "message": "Created container cloud-node-manager",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:39Z",
            "lastTimestamp": "2023-12-26T14:13:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "cloud-node-manager-sqvfd.17a467310b51dbbc",
                "namespace": "kube-system",
                "uid": "78fc3b15-669f-4c51-81e1-0868aa6b33c6",
                "resourceVersion": "710",
                "creationTimestamp": "2023-12-26T14:13:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "cloud-node-manager-sqvfd",
                "uid": "89ba9e67-38bc-4ecc-ba23-990e54172469",
                "apiVersion": "v1",
                "resourceVersion": "654",
                "fieldPath": "spec.containers{cloud-node-manager}"
            },
            "reason": "Started",
            "message": "Started container cloud-node-manager",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:39Z",
            "lastTimestamp": "2023-12-26T14:13:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "cloud-node-manager-tcdkd.17a4672f8334ddb8",
                "namespace": "kube-system",
                "uid": "c74054a3-7cf9-40bd-9616-ba6eed2b9c67",
                "resourceVersion": "618",
                "creationTimestamp": "2023-12-26T14:13:32Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "cloud-node-manager-tcdkd",
                "uid": "27ce4068-f165-403c-9f22-2c70dd12cc28",
                "apiVersion": "v1",
                "resourceVersion": "612"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/cloud-node-manager-tcdkd to aks-default-20426481-vmss000000",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:13:32Z",
            "lastTimestamp": "2023-12-26T14:13:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "cloud-node-manager-tcdkd.17a467323866e7fb",
                "namespace": "kube-system",
                "uid": "7aa61f5b-ac33-4bc4-81dc-e96aa8763a2b",
                "resourceVersion": "773",
                "creationTimestamp": "2023-12-26T14:13:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "cloud-node-manager-tcdkd",
                "uid": "27ce4068-f165-403c-9f22-2c70dd12cc28",
                "apiVersion": "v1",
                "resourceVersion": "615",
                "fieldPath": "spec.containers{cloud-node-manager}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.27.8\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:44Z",
            "lastTimestamp": "2023-12-26T14:13:44Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "cloud-node-manager-tcdkd.17a467324f16957c",
                "namespace": "kube-system",
                "uid": "9f7f508d-e3db-4c69-a07b-74b4c6f9bca0",
                "resourceVersion": "779",
                "creationTimestamp": "2023-12-26T14:13:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "cloud-node-manager-tcdkd",
                "uid": "27ce4068-f165-403c-9f22-2c70dd12cc28",
                "apiVersion": "v1",
                "resourceVersion": "615",
                "fieldPath": "spec.containers{cloud-node-manager}"
            },
            "reason": "Created",
            "message": "Created container cloud-node-manager",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:44Z",
            "lastTimestamp": "2023-12-26T14:13:44Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "cloud-node-manager-tcdkd.17a467325e2c33a6",
                "namespace": "kube-system",
                "uid": "0a7e8418-da41-4b75-82f2-d8245f1cef3b",
                "resourceVersion": "786",
                "creationTimestamp": "2023-12-26T14:13:45Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "cloud-node-manager-tcdkd",
                "uid": "27ce4068-f165-403c-9f22-2c70dd12cc28",
                "apiVersion": "v1",
                "resourceVersion": "615",
                "fieldPath": "spec.containers{cloud-node-manager}"
            },
            "reason": "Started",
            "message": "Started container cloud-node-manager",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:45Z",
            "lastTimestamp": "2023-12-26T14:13:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "cloud-node-manager.17a4672f82812a69",
                "namespace": "kube-system",
                "uid": "49806c84-2a69-4006-8891-e129f7c10bc3",
                "resourceVersion": "614",
                "creationTimestamp": "2023-12-26T14:13:32Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "cloud-node-manager",
                "uid": "28294b37-4b1f-4b66-99c7-d3448025fcec",
                "apiVersion": "apps/v1",
                "resourceVersion": "409"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: cloud-node-manager-tcdkd",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2023-12-26T14:13:32Z",
            "lastTimestamp": "2023-12-26T14:13:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "cloud-node-manager.17a46730a03059a5",
                "namespace": "kube-system",
                "uid": "464f5a32-8c24-415f-ab50-b91627ac6560",
                "resourceVersion": "653",
                "creationTimestamp": "2023-12-26T14:13:37Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "cloud-node-manager",
                "uid": "28294b37-4b1f-4b66-99c7-d3448025fcec",
                "apiVersion": "apps/v1",
                "resourceVersion": "616"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: cloud-node-manager-sqvfd",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2023-12-26T14:13:37Z",
            "lastTimestamp": "2023-12-26T14:13:37Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-789789675-5bh4q.17a46739fdb5fb37",
                "namespace": "kube-system",
                "uid": "f5b4be28-d644-4e07-8f25-4072e2c79ea6",
                "resourceVersion": "1034",
                "creationTimestamp": "2023-12-26T14:14:17Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-789789675-5bh4q",
                "uid": "f7813eaf-9ffc-4a8b-8ef4-e8843b19e1a4",
                "apiVersion": "v1",
                "resourceVersion": "1029"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/coredns-789789675-5bh4q to aks-default-20426481-vmss000000",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:14:17Z",
            "lastTimestamp": "2023-12-26T14:14:17Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-789789675-5bh4q.17a4673a274e6a4d",
                "namespace": "kube-system",
                "uid": "960c7595-acb5-428d-8e73-914de14b0963",
                "resourceVersion": "1043",
                "creationTimestamp": "2023-12-26T14:14:18Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-789789675-5bh4q",
                "uid": "f7813eaf-9ffc-4a8b-8ef4-e8843b19e1a4",
                "apiVersion": "v1",
                "resourceVersion": "1032",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes/coredns:v1.9.4\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:18Z",
            "lastTimestamp": "2023-12-26T14:14:18Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "coredns-789789675-5bh4q.17a4673a2c50f694",
                "namespace": "kube-system",
                "uid": "d67905cd-5ac6-46b8-9c9d-e1a3ef40a2a7",
                "resourceVersion": "1046",
                "creationTimestamp": "2023-12-26T14:14:18Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-789789675-5bh4q",
                "uid": "f7813eaf-9ffc-4a8b-8ef4-e8843b19e1a4",
                "apiVersion": "v1",
                "resourceVersion": "1032",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Created",
            "message": "Created container coredns",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:18Z",
            "lastTimestamp": "2023-12-26T14:14:18Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "coredns-789789675-5bh4q.17a4673a39084c24",
                "namespace": "kube-system",
                "uid": "eaf2f25e-8f42-44c6-a69f-5e5393a558ef",
                "resourceVersion": "1048",
                "creationTimestamp": "2023-12-26T14:14:18Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-789789675-5bh4q",
                "uid": "f7813eaf-9ffc-4a8b-8ef4-e8843b19e1a4",
                "apiVersion": "v1",
                "resourceVersion": "1032",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Started",
            "message": "Started container coredns",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:18Z",
            "lastTimestamp": "2023-12-26T14:14:18Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "coredns-789789675-lnrr5.17a4672e64ee7fe1",
                "namespace": "kube-system",
                "uid": "11658654-40a6-4ac0-89b3-7deefff96755",
                "resourceVersion": "562",
                "creationTimestamp": "2023-12-26T14:13:28Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-789789675-lnrr5",
                "uid": "e01ff47b-eafd-4f93-b8ca-c2d93bc55e17",
                "apiVersion": "v1",
                "resourceVersion": "448"
            },
            "reason": "FailedScheduling",
            "message": "no nodes available to schedule pods",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:13:28Z",
            "lastTimestamp": "2023-12-26T14:13:29Z",
            "count": 2,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-789789675-lnrr5.17a4672fa9170d87",
                "namespace": "kube-system",
                "uid": "24f7d88f-e975-4549-a32c-db2650eaf510",
                "resourceVersion": "631",
                "creationTimestamp": "2023-12-26T14:13:33Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-789789675-lnrr5",
                "uid": "e01ff47b-eafd-4f93-b8ca-c2d93bc55e17",
                "apiVersion": "v1",
                "resourceVersion": "464"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.cloudprovider.kubernetes.io/uninitialized: true}. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling..",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:13:33Z",
            "lastTimestamp": "2023-12-26T14:13:33Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-789789675-lnrr5.17a46738e2d9b415",
                "namespace": "kube-system",
                "uid": "a8df19ae-1479-4bbb-b8f1-800a7c415e3e",
                "resourceVersion": "952",
                "creationTimestamp": "2023-12-26T14:14:13Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-789789675-lnrr5",
                "uid": "e01ff47b-eafd-4f93-b8ca-c2d93bc55e17",
                "apiVersion": "v1",
                "resourceVersion": "632"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/coredns-789789675-lnrr5 to aks-default-20426481-vmss000000",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:14:13Z",
            "lastTimestamp": "2023-12-26T14:14:13Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-789789675-lnrr5.17a467393789132a",
                "namespace": "kube-system",
                "uid": "cd4fe8c3-325f-4f08-8d8e-15e874e1915f",
                "resourceVersion": "963",
                "creationTimestamp": "2023-12-26T14:14:14Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-789789675-lnrr5",
                "uid": "e01ff47b-eafd-4f93-b8ca-c2d93bc55e17",
                "apiVersion": "v1",
                "resourceVersion": "944",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes/coredns:v1.9.4\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:14Z",
            "lastTimestamp": "2023-12-26T14:14:14Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "coredns-789789675-lnrr5.17a46739404694f6",
                "namespace": "kube-system",
                "uid": "e73096b9-840b-4f2e-ac0d-cf6becd5e9ef",
                "resourceVersion": "970",
                "creationTimestamp": "2023-12-26T14:14:14Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-789789675-lnrr5",
                "uid": "e01ff47b-eafd-4f93-b8ca-c2d93bc55e17",
                "apiVersion": "v1",
                "resourceVersion": "944",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Created",
            "message": "Created container coredns",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:14Z",
            "lastTimestamp": "2023-12-26T14:14:14Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "coredns-789789675-lnrr5.17a467394bb76ada",
                "namespace": "kube-system",
                "uid": "fc5233e1-aff8-4152-a558-d6e7c1082061",
                "resourceVersion": "976",
                "creationTimestamp": "2023-12-26T14:14:14Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-789789675-lnrr5",
                "uid": "e01ff47b-eafd-4f93-b8ca-c2d93bc55e17",
                "apiVersion": "v1",
                "resourceVersion": "944",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Started",
            "message": "Started container coredns",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:14Z",
            "lastTimestamp": "2023-12-26T14:14:14Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "coredns-789789675-lnrr5.17a46739719382fc",
                "namespace": "kube-system",
                "uid": "9047c009-5f02-4d07-a4d1-abda7c9dd2c2",
                "resourceVersion": "1019",
                "creationTimestamp": "2023-12-26T14:14:15Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-789789675-lnrr5",
                "uid": "e01ff47b-eafd-4f93-b8ca-c2d93bc55e17",
                "apiVersion": "v1",
                "resourceVersion": "944",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Unhealthy",
            "message": "Readiness probe failed: Get \"http://10.244.0.3:8181/ready\": dial tcp 10.244.0.3:8181: connect: connection refused",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:15Z",
            "lastTimestamp": "2023-12-26T14:14:17Z",
            "count": 3,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "coredns-789789675.17a4672e62fa3892",
                "namespace": "kube-system",
                "uid": "7c0ab289-4b6d-4ae1-8a40-aceceb0931c4",
                "resourceVersion": "454",
                "creationTimestamp": "2023-12-26T14:13:27Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "coredns-789789675",
                "uid": "1c206b61-56b2-48f8-859b-c11303d633cc",
                "apiVersion": "apps/v1",
                "resourceVersion": "440"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: coredns-789789675-lnrr5",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-12-26T14:13:27Z",
            "lastTimestamp": "2023-12-26T14:13:27Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "replicaset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-789789675.17a46739fd160563",
                "namespace": "kube-system",
                "uid": "3f185664-9719-4bfb-bd4d-e53689fa7e24",
                "resourceVersion": "1030",
                "creationTimestamp": "2023-12-26T14:14:17Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "coredns-789789675",
                "uid": "1c206b61-56b2-48f8-859b-c11303d633cc",
                "apiVersion": "apps/v1",
                "resourceVersion": "1025"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: coredns-789789675-5bh4q",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-12-26T14:14:17Z",
            "lastTimestamp": "2023-12-26T14:14:17Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "replicaset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-autoscaler-649b947bbd-wxhp6.17a4672e62f74701",
                "namespace": "kube-system",
                "uid": "05c0cddd-8fe4-4668-b39e-b2d7fd7ad4a9",
                "resourceVersion": "561",
                "creationTimestamp": "2023-12-26T14:13:27Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-autoscaler-649b947bbd-wxhp6",
                "uid": "7b29f971-4940-40fe-b007-419029bb9e67",
                "apiVersion": "v1",
                "resourceVersion": "446"
            },
            "reason": "FailedScheduling",
            "message": "no nodes available to schedule pods",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:13:27Z",
            "lastTimestamp": "2023-12-26T14:13:29Z",
            "count": 2,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-autoscaler-649b947bbd-wxhp6.17a4672fa85389d7",
                "namespace": "kube-system",
                "uid": "a7329f82-3d5c-436f-a5cb-a9a98d7f2238",
                "resourceVersion": "629",
                "creationTimestamp": "2023-12-26T14:13:33Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-autoscaler-649b947bbd-wxhp6",
                "uid": "7b29f971-4940-40fe-b007-419029bb9e67",
                "apiVersion": "v1",
                "resourceVersion": "455"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.cloudprovider.kubernetes.io/uninitialized: true}. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling..",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:13:33Z",
            "lastTimestamp": "2023-12-26T14:13:33Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-autoscaler-649b947bbd-wxhp6.17a46738e2c7a2ae",
                "namespace": "kube-system",
                "uid": "29b7963f-c802-455c-b39f-8bb825227f91",
                "resourceVersion": "949",
                "creationTimestamp": "2023-12-26T14:14:13Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-autoscaler-649b947bbd-wxhp6",
                "uid": "7b29f971-4940-40fe-b007-419029bb9e67",
                "apiVersion": "v1",
                "resourceVersion": "630"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/coredns-autoscaler-649b947bbd-wxhp6 to aks-default-20426481-vmss000000",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:14:13Z",
            "lastTimestamp": "2023-12-26T14:14:13Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-autoscaler-649b947bbd-wxhp6.17a467392f9108c9",
                "namespace": "kube-system",
                "uid": "9336b0bc-f09e-4501-8332-41a64b5d2111",
                "resourceVersion": "962",
                "creationTimestamp": "2023-12-26T14:14:14Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-autoscaler-649b947bbd-wxhp6",
                "uid": "7b29f971-4940-40fe-b007-419029bb9e67",
                "apiVersion": "v1",
                "resourceVersion": "943",
                "fieldPath": "spec.containers{autoscaler}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.8\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:14Z",
            "lastTimestamp": "2023-12-26T14:14:14Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "coredns-autoscaler-649b947bbd-wxhp6.17a467393a077dc6",
                "namespace": "kube-system",
                "uid": "67319e96-e979-4923-b3d8-6e88348563b1",
                "resourceVersion": "966",
                "creationTimestamp": "2023-12-26T14:14:14Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-autoscaler-649b947bbd-wxhp6",
                "uid": "7b29f971-4940-40fe-b007-419029bb9e67",
                "apiVersion": "v1",
                "resourceVersion": "943",
                "fieldPath": "spec.containers{autoscaler}"
            },
            "reason": "Created",
            "message": "Created container autoscaler",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:14Z",
            "lastTimestamp": "2023-12-26T14:14:14Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "coredns-autoscaler-649b947bbd-wxhp6.17a467394ba432f8",
                "namespace": "kube-system",
                "uid": "90803034-66af-4d0b-b7a0-04ce26db0bed",
                "resourceVersion": "975",
                "creationTimestamp": "2023-12-26T14:14:14Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-autoscaler-649b947bbd-wxhp6",
                "uid": "7b29f971-4940-40fe-b007-419029bb9e67",
                "apiVersion": "v1",
                "resourceVersion": "943",
                "fieldPath": "spec.containers{autoscaler}"
            },
            "reason": "Started",
            "message": "Started container autoscaler",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:14Z",
            "lastTimestamp": "2023-12-26T14:14:14Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "coredns-autoscaler-649b947bbd.17a4672e62e7ed55",
                "namespace": "kube-system",
                "uid": "e6e3eb8c-8f9d-46e9-b3f1-3c4424accf39",
                "resourceVersion": "449",
                "creationTimestamp": "2023-12-26T14:13:27Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "coredns-autoscaler-649b947bbd",
                "uid": "8ddd4239-61b5-4839-ad0a-c5f28deb21a8",
                "apiVersion": "apps/v1",
                "resourceVersion": "433"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: coredns-autoscaler-649b947bbd-wxhp6",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-12-26T14:13:27Z",
            "lastTimestamp": "2023-12-26T14:13:27Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "replicaset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-autoscaler.17a4672e5c584695",
                "namespace": "kube-system",
                "uid": "b1055c9c-6c24-44a4-8702-2fe04872ccb1",
                "resourceVersion": "434",
                "creationTimestamp": "2023-12-26T14:13:27Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "kube-system",
                "name": "coredns-autoscaler",
                "uid": "99382bf0-1d5c-4c77-8903-456c9ef6332a",
                "apiVersion": "apps/v1",
                "resourceVersion": "429"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled up replica set coredns-autoscaler-649b947bbd to 1",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2023-12-26T14:13:27Z",
            "lastTimestamp": "2023-12-26T14:13:27Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "deployment-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-pdb.17a4672e62df02e5",
                "namespace": "kube-system",
                "uid": "5c374ed1-430e-4b92-989b-ff0a78cc4a6d",
                "resourceVersion": "466",
                "creationTimestamp": "2023-12-26T14:13:28Z"
            },
            "involvedObject": {
                "kind": "PodDisruptionBudget",
                "namespace": "kube-system",
                "name": "coredns-pdb",
                "uid": "11ba8b60-ef2c-4c8d-a2e1-d87f55831d5a",
                "apiVersion": "policy/v1",
                "resourceVersion": "447"
            },
            "reason": "NoPods",
            "message": "No matching pods found",
            "source": {
                "component": "controllermanager"
            },
            "firstTimestamp": "2023-12-26T14:13:27Z",
            "lastTimestamp": "2023-12-26T14:13:27Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "controllermanager",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns.17a4672e5f89287a",
                "namespace": "kube-system",
                "uid": "1789927d-c2c8-456f-bd9b-d210dfc20155",
                "resourceVersion": "441",
                "creationTimestamp": "2023-12-26T14:13:27Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "kube-system",
                "name": "coredns",
                "uid": "f313a776-7ff5-4664-a4ac-e229334fe797",
                "apiVersion": "apps/v1",
                "resourceVersion": "439"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled up replica set coredns-789789675 to 1",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2023-12-26T14:13:27Z",
            "lastTimestamp": "2023-12-26T14:13:27Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "deployment-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns.17a46739fb44760a",
                "namespace": "kube-system",
                "uid": "aa38ddf6-fe7f-410f-a53b-a63c62d02109",
                "resourceVersion": "1026",
                "creationTimestamp": "2023-12-26T14:14:17Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "kube-system",
                "name": "coredns",
                "uid": "f313a776-7ff5-4664-a4ac-e229334fe797",
                "apiVersion": "apps/v1",
                "resourceVersion": "1023"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled up replica set coredns-789789675 to 2 from 1",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2023-12-26T14:14:17Z",
            "lastTimestamp": "2023-12-26T14:14:17Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "deployment-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-824fw.17a4672f7e32d22d",
                "namespace": "kube-system",
                "uid": "b294f144-5e16-4870-be92-0053adcf381b",
                "resourceVersion": "598",
                "creationTimestamp": "2023-12-26T14:13:32Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-824fw",
                "uid": "f9caf01c-9896-4feb-94a7-2483843150f2",
                "apiVersion": "v1",
                "resourceVersion": "590"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/csi-azuredisk-node-824fw to aks-default-20426481-vmss000000",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:13:32Z",
            "lastTimestamp": "2023-12-26T14:13:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-824fw.17a46732372b2cb1",
                "namespace": "kube-system",
                "uid": "ed745764-1b3a-44ba-9420-3595114eaa4b",
                "resourceVersion": "771",
                "creationTimestamp": "2023-12-26T14:13:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-824fw",
                "uid": "f9caf01c-9896-4feb-94a7-2483843150f2",
                "apiVersion": "v1",
                "resourceVersion": "593",
                "fieldPath": "spec.containers{liveness-probe}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.10.0\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:44Z",
            "lastTimestamp": "2023-12-26T14:13:44Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-824fw.17a4673249bad410",
                "namespace": "kube-system",
                "uid": "67bc4f2b-9983-443d-82c1-c3b61876b0bf",
                "resourceVersion": "776",
                "creationTimestamp": "2023-12-26T14:13:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-824fw",
                "uid": "f9caf01c-9896-4feb-94a7-2483843150f2",
                "apiVersion": "v1",
                "resourceVersion": "593",
                "fieldPath": "spec.containers{liveness-probe}"
            },
            "reason": "Created",
            "message": "Created container liveness-probe",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:44Z",
            "lastTimestamp": "2023-12-26T14:13:44Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-824fw.17a467325798fdda",
                "namespace": "kube-system",
                "uid": "900feab5-a093-4956-99a4-97c025835266",
                "resourceVersion": "782",
                "creationTimestamp": "2023-12-26T14:13:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-824fw",
                "uid": "f9caf01c-9896-4feb-94a7-2483843150f2",
                "apiVersion": "v1",
                "resourceVersion": "593",
                "fieldPath": "spec.containers{liveness-probe}"
            },
            "reason": "Started",
            "message": "Started container liveness-probe",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:44Z",
            "lastTimestamp": "2023-12-26T14:13:44Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-824fw.17a467325803287a",
                "namespace": "kube-system",
                "uid": "48f593c4-18a4-4e0b-9187-1b99ae0e41bd",
                "resourceVersion": "783",
                "creationTimestamp": "2023-12-26T14:13:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-824fw",
                "uid": "f9caf01c-9896-4feb-94a7-2483843150f2",
                "apiVersion": "v1",
                "resourceVersion": "593",
                "fieldPath": "spec.containers{node-driver-registrar}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.8.0\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:44Z",
            "lastTimestamp": "2023-12-26T14:13:44Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-824fw.17a4673289e84068",
                "namespace": "kube-system",
                "uid": "368b792e-9ada-4ca4-b261-9b1851b4c35c",
                "resourceVersion": "795",
                "creationTimestamp": "2023-12-26T14:13:45Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-824fw",
                "uid": "f9caf01c-9896-4feb-94a7-2483843150f2",
                "apiVersion": "v1",
                "resourceVersion": "593",
                "fieldPath": "spec.containers{node-driver-registrar}"
            },
            "reason": "Created",
            "message": "Created container node-driver-registrar",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:45Z",
            "lastTimestamp": "2023-12-26T14:13:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-824fw.17a46732917a0711",
                "namespace": "kube-system",
                "uid": "4c16ea14-eca3-483d-b593-1fb4e101e673",
                "resourceVersion": "802",
                "creationTimestamp": "2023-12-26T14:13:45Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-824fw",
                "uid": "f9caf01c-9896-4feb-94a7-2483843150f2",
                "apiVersion": "v1",
                "resourceVersion": "593",
                "fieldPath": "spec.containers{node-driver-registrar}"
            },
            "reason": "Started",
            "message": "Started container node-driver-registrar",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:45Z",
            "lastTimestamp": "2023-12-26T14:13:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-824fw.17a46732919980cc",
                "namespace": "kube-system",
                "uid": "f7479a16-6815-4d16-866a-8971130927a7",
                "resourceVersion": "803",
                "creationTimestamp": "2023-12-26T14:13:45Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-824fw",
                "uid": "f9caf01c-9896-4feb-94a7-2483843150f2",
                "apiVersion": "v1",
                "resourceVersion": "593",
                "fieldPath": "spec.containers{azuredisk}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.28.4\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:45Z",
            "lastTimestamp": "2023-12-26T14:13:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-824fw.17a46732a2933f2e",
                "namespace": "kube-system",
                "uid": "05a421f1-0f30-4c85-9dc4-44b84a122f2c",
                "resourceVersion": "806",
                "creationTimestamp": "2023-12-26T14:13:46Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-824fw",
                "uid": "f9caf01c-9896-4feb-94a7-2483843150f2",
                "apiVersion": "v1",
                "resourceVersion": "593",
                "fieldPath": "spec.containers{azuredisk}"
            },
            "reason": "Created",
            "message": "Created container azuredisk",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:46Z",
            "lastTimestamp": "2023-12-26T14:13:46Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-824fw.17a46732b21a53ec",
                "namespace": "kube-system",
                "uid": "b6493f7f-3987-4afd-ba0b-95918e04f0eb",
                "resourceVersion": "812",
                "creationTimestamp": "2023-12-26T14:13:46Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-824fw",
                "uid": "f9caf01c-9896-4feb-94a7-2483843150f2",
                "apiVersion": "v1",
                "resourceVersion": "593",
                "fieldPath": "spec.containers{azuredisk}"
            },
            "reason": "Started",
            "message": "Started container azuredisk",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:46Z",
            "lastTimestamp": "2023-12-26T14:13:46Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-qnmgb.17a46730a176e142",
                "namespace": "kube-system",
                "uid": "5d81b8ef-d173-4246-b753-b66ad7a36785",
                "resourceVersion": "661",
                "creationTimestamp": "2023-12-26T14:13:37Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-qnmgb",
                "uid": "85146e0f-d403-4fd7-a06b-fd4f5519a2b2",
                "apiVersion": "v1",
                "resourceVersion": "652"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/csi-azuredisk-node-qnmgb to aks-default-20426481-vmss000001",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:13:37Z",
            "lastTimestamp": "2023-12-26T14:13:37Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-qnmgb.17a46730ea6d1cd0",
                "namespace": "kube-system",
                "uid": "36eb9728-eb64-4924-8cd3-73b60aee84ce",
                "resourceVersion": "695",
                "creationTimestamp": "2023-12-26T14:13:38Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-qnmgb",
                "uid": "85146e0f-d403-4fd7-a06b-fd4f5519a2b2",
                "apiVersion": "v1",
                "resourceVersion": "656",
                "fieldPath": "spec.containers{liveness-probe}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.10.0\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:38Z",
            "lastTimestamp": "2023-12-26T14:13:38Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-qnmgb.17a46730fc74b057",
                "namespace": "kube-system",
                "uid": "761134c6-977f-428f-aa49-38ae3b71e44d",
                "resourceVersion": "700",
                "creationTimestamp": "2023-12-26T14:13:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-qnmgb",
                "uid": "85146e0f-d403-4fd7-a06b-fd4f5519a2b2",
                "apiVersion": "v1",
                "resourceVersion": "656",
                "fieldPath": "spec.containers{liveness-probe}"
            },
            "reason": "Created",
            "message": "Created container liveness-probe",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:39Z",
            "lastTimestamp": "2023-12-26T14:13:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-qnmgb.17a4673108bfdb05",
                "namespace": "kube-system",
                "uid": "996ca7ed-f854-4524-aba2-49a5a6f906c6",
                "resourceVersion": "708",
                "creationTimestamp": "2023-12-26T14:13:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-qnmgb",
                "uid": "85146e0f-d403-4fd7-a06b-fd4f5519a2b2",
                "apiVersion": "v1",
                "resourceVersion": "656",
                "fieldPath": "spec.containers{liveness-probe}"
            },
            "reason": "Started",
            "message": "Started container liveness-probe",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:39Z",
            "lastTimestamp": "2023-12-26T14:13:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-qnmgb.17a4673108ee4045",
                "namespace": "kube-system",
                "uid": "db347766-c6d4-46c5-b3a4-e2167615a168",
                "resourceVersion": "709",
                "creationTimestamp": "2023-12-26T14:13:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-qnmgb",
                "uid": "85146e0f-d403-4fd7-a06b-fd4f5519a2b2",
                "apiVersion": "v1",
                "resourceVersion": "656",
                "fieldPath": "spec.containers{node-driver-registrar}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.8.0\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:39Z",
            "lastTimestamp": "2023-12-26T14:13:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-qnmgb.17a467313a4ad732",
                "namespace": "kube-system",
                "uid": "f24e61c5-81f9-4e9d-82ca-c45ed10cd2bd",
                "resourceVersion": "721",
                "creationTimestamp": "2023-12-26T14:13:40Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-qnmgb",
                "uid": "85146e0f-d403-4fd7-a06b-fd4f5519a2b2",
                "apiVersion": "v1",
                "resourceVersion": "656",
                "fieldPath": "spec.containers{node-driver-registrar}"
            },
            "reason": "Created",
            "message": "Created container node-driver-registrar",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:40Z",
            "lastTimestamp": "2023-12-26T14:13:40Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-qnmgb.17a4673142ea832c",
                "namespace": "kube-system",
                "uid": "5ef78cc1-dae8-4ea7-9d09-a5eb400b9876",
                "resourceVersion": "723",
                "creationTimestamp": "2023-12-26T14:13:40Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-qnmgb",
                "uid": "85146e0f-d403-4fd7-a06b-fd4f5519a2b2",
                "apiVersion": "v1",
                "resourceVersion": "656",
                "fieldPath": "spec.containers{node-driver-registrar}"
            },
            "reason": "Started",
            "message": "Started container node-driver-registrar",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:40Z",
            "lastTimestamp": "2023-12-26T14:13:40Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-qnmgb.17a467314313d971",
                "namespace": "kube-system",
                "uid": "bc960ec8-9164-47a3-bd0c-eeb42829afef",
                "resourceVersion": "726",
                "creationTimestamp": "2023-12-26T14:13:40Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-qnmgb",
                "uid": "85146e0f-d403-4fd7-a06b-fd4f5519a2b2",
                "apiVersion": "v1",
                "resourceVersion": "656",
                "fieldPath": "spec.containers{azuredisk}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.28.4\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:40Z",
            "lastTimestamp": "2023-12-26T14:13:40Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-qnmgb.17a4673159443bf6",
                "namespace": "kube-system",
                "uid": "af90e0ba-b023-4df6-a6b6-1f30b9efa9c7",
                "resourceVersion": "729",
                "creationTimestamp": "2023-12-26T14:13:40Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-qnmgb",
                "uid": "85146e0f-d403-4fd7-a06b-fd4f5519a2b2",
                "apiVersion": "v1",
                "resourceVersion": "656",
                "fieldPath": "spec.containers{azuredisk}"
            },
            "reason": "Created",
            "message": "Created container azuredisk",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:40Z",
            "lastTimestamp": "2023-12-26T14:13:40Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-qnmgb.17a4673163bea3b1",
                "namespace": "kube-system",
                "uid": "64a1aac4-6b77-4e69-b85f-6be035c488f6",
                "resourceVersion": "732",
                "creationTimestamp": "2023-12-26T14:13:40Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-qnmgb",
                "uid": "85146e0f-d403-4fd7-a06b-fd4f5519a2b2",
                "apiVersion": "v1",
                "resourceVersion": "656",
                "fieldPath": "spec.containers{azuredisk}"
            },
            "reason": "Started",
            "message": "Started container azuredisk",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:40Z",
            "lastTimestamp": "2023-12-26T14:13:40Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node.17a4672f7d7f1de1",
                "namespace": "kube-system",
                "uid": "5c2da382-4c20-4676-9cd5-815f7ccc0f09",
                "resourceVersion": "592",
                "creationTimestamp": "2023-12-26T14:13:32Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node",
                "uid": "42a9f65b-f9db-45d5-83b6-c9c10f2b2089",
                "apiVersion": "apps/v1",
                "resourceVersion": "471"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: csi-azuredisk-node-824fw",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2023-12-26T14:13:32Z",
            "lastTimestamp": "2023-12-26T14:13:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node.17a46730a0c9dff2",
                "namespace": "kube-system",
                "uid": "003a8367-cc3d-466d-adaa-2e2d3b514619",
                "resourceVersion": "658",
                "creationTimestamp": "2023-12-26T14:13:37Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node",
                "uid": "42a9f65b-f9db-45d5-83b6-c9c10f2b2089",
                "apiVersion": "apps/v1",
                "resourceVersion": "597"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: csi-azuredisk-node-qnmgb",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2023-12-26T14:13:37Z",
            "lastTimestamp": "2023-12-26T14:13:37Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-lnlt2.17a4672f7e924f28",
                "namespace": "kube-system",
                "uid": "d938c66f-b66a-4c2b-821c-1db3cd437ee7",
                "resourceVersion": "599",
                "creationTimestamp": "2023-12-26T14:13:32Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-lnlt2",
                "uid": "196e9b8a-a289-4322-af86-92dce5b46b78",
                "apiVersion": "v1",
                "resourceVersion": "591"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/csi-azurefile-node-lnlt2 to aks-default-20426481-vmss000000",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:13:32Z",
            "lastTimestamp": "2023-12-26T14:13:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-lnlt2.17a4673236590e9f",
                "namespace": "kube-system",
                "uid": "005cf317-1afc-4096-a4d0-2003390a1340",
                "resourceVersion": "770",
                "creationTimestamp": "2023-12-26T14:13:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-lnlt2",
                "uid": "196e9b8a-a289-4322-af86-92dce5b46b78",
                "apiVersion": "v1",
                "resourceVersion": "594",
                "fieldPath": "spec.containers{liveness-probe}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.10.0\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:44Z",
            "lastTimestamp": "2023-12-26T14:13:44Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-lnlt2.17a467324cc53d02",
                "namespace": "kube-system",
                "uid": "d8875cf2-1057-4b93-8766-cc190410db38",
                "resourceVersion": "778",
                "creationTimestamp": "2023-12-26T14:13:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-lnlt2",
                "uid": "196e9b8a-a289-4322-af86-92dce5b46b78",
                "apiVersion": "v1",
                "resourceVersion": "594",
                "fieldPath": "spec.containers{liveness-probe}"
            },
            "reason": "Created",
            "message": "Created container liveness-probe",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:44Z",
            "lastTimestamp": "2023-12-26T14:13:44Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-lnlt2.17a467325aad5170",
                "namespace": "kube-system",
                "uid": "668e2ade-0283-464c-a508-92478578f6fb",
                "resourceVersion": "784",
                "creationTimestamp": "2023-12-26T14:13:45Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-lnlt2",
                "uid": "196e9b8a-a289-4322-af86-92dce5b46b78",
                "apiVersion": "v1",
                "resourceVersion": "594",
                "fieldPath": "spec.containers{liveness-probe}"
            },
            "reason": "Started",
            "message": "Started container liveness-probe",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:45Z",
            "lastTimestamp": "2023-12-26T14:13:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-lnlt2.17a467325ad5bcfd",
                "namespace": "kube-system",
                "uid": "478f5ffc-ca9d-433c-a625-7013f5782302",
                "resourceVersion": "785",
                "creationTimestamp": "2023-12-26T14:13:45Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-lnlt2",
                "uid": "196e9b8a-a289-4322-af86-92dce5b46b78",
                "apiVersion": "v1",
                "resourceVersion": "594",
                "fieldPath": "spec.containers{node-driver-registrar}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.8.0\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:45Z",
            "lastTimestamp": "2023-12-26T14:13:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-lnlt2.17a4673281e83717",
                "namespace": "kube-system",
                "uid": "e4fc6272-0ed5-498e-b5f6-0b2901e3fc20",
                "resourceVersion": "794",
                "creationTimestamp": "2023-12-26T14:13:45Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-lnlt2",
                "uid": "196e9b8a-a289-4322-af86-92dce5b46b78",
                "apiVersion": "v1",
                "resourceVersion": "594",
                "fieldPath": "spec.containers{node-driver-registrar}"
            },
            "reason": "Created",
            "message": "Created container node-driver-registrar",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:45Z",
            "lastTimestamp": "2023-12-26T14:13:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-lnlt2.17a467328b453b54",
                "namespace": "kube-system",
                "uid": "d94bcd47-57b3-4b41-a088-0f78e8ea06e0",
                "resourceVersion": "797",
                "creationTimestamp": "2023-12-26T14:13:45Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-lnlt2",
                "uid": "196e9b8a-a289-4322-af86-92dce5b46b78",
                "apiVersion": "v1",
                "resourceVersion": "594",
                "fieldPath": "spec.containers{node-driver-registrar}"
            },
            "reason": "Started",
            "message": "Started container node-driver-registrar",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:45Z",
            "lastTimestamp": "2023-12-26T14:13:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-lnlt2.17a467328b7831ae",
                "namespace": "kube-system",
                "uid": "be275f0f-7c35-44b4-b605-d40a5f09e34f",
                "resourceVersion": "799",
                "creationTimestamp": "2023-12-26T14:13:45Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-lnlt2",
                "uid": "196e9b8a-a289-4322-af86-92dce5b46b78",
                "apiVersion": "v1",
                "resourceVersion": "594",
                "fieldPath": "spec.containers{azurefile}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.28.6\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:45Z",
            "lastTimestamp": "2023-12-26T14:13:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-lnlt2.17a46732a3b1d8bc",
                "namespace": "kube-system",
                "uid": "326cc812-8af6-4a19-b5f9-6ad537ff2356",
                "resourceVersion": "808",
                "creationTimestamp": "2023-12-26T14:13:46Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-lnlt2",
                "uid": "196e9b8a-a289-4322-af86-92dce5b46b78",
                "apiVersion": "v1",
                "resourceVersion": "594",
                "fieldPath": "spec.containers{azurefile}"
            },
            "reason": "Created",
            "message": "Created container azurefile",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:46Z",
            "lastTimestamp": "2023-12-26T14:13:46Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-lnlt2.17a46732b2144780",
                "namespace": "kube-system",
                "uid": "779109bd-2f53-4ebf-a6f4-6052204385e6",
                "resourceVersion": "811",
                "creationTimestamp": "2023-12-26T14:13:46Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-lnlt2",
                "uid": "196e9b8a-a289-4322-af86-92dce5b46b78",
                "apiVersion": "v1",
                "resourceVersion": "594",
                "fieldPath": "spec.containers{azurefile}"
            },
            "reason": "Started",
            "message": "Started container azurefile",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:46Z",
            "lastTimestamp": "2023-12-26T14:13:46Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-w9z7h.17a46730a2d50e06",
                "namespace": "kube-system",
                "uid": "ddb4b8f4-5dba-4124-9719-8a6c14c43726",
                "resourceVersion": "669",
                "creationTimestamp": "2023-12-26T14:13:37Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-w9z7h",
                "uid": "4cd2d92f-45c0-4780-80ce-dba5d16181ea",
                "apiVersion": "v1",
                "resourceVersion": "662"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/csi-azurefile-node-w9z7h to aks-default-20426481-vmss000001",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:13:37Z",
            "lastTimestamp": "2023-12-26T14:13:37Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-w9z7h.17a46730e78e3805",
                "namespace": "kube-system",
                "uid": "3280d794-6a82-4b3e-b57c-f653409afa1e",
                "resourceVersion": "692",
                "creationTimestamp": "2023-12-26T14:13:38Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-w9z7h",
                "uid": "4cd2d92f-45c0-4780-80ce-dba5d16181ea",
                "apiVersion": "v1",
                "resourceVersion": "665",
                "fieldPath": "spec.containers{liveness-probe}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.10.0\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:38Z",
            "lastTimestamp": "2023-12-26T14:13:38Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-w9z7h.17a46730f95ec66e",
                "namespace": "kube-system",
                "uid": "d070814c-5622-4be5-90e0-bdb4a189f80a",
                "resourceVersion": "699",
                "creationTimestamp": "2023-12-26T14:13:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-w9z7h",
                "uid": "4cd2d92f-45c0-4780-80ce-dba5d16181ea",
                "apiVersion": "v1",
                "resourceVersion": "665",
                "fieldPath": "spec.containers{liveness-probe}"
            },
            "reason": "Created",
            "message": "Created container liveness-probe",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:39Z",
            "lastTimestamp": "2023-12-26T14:13:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-w9z7h.17a467310562ce81",
                "namespace": "kube-system",
                "uid": "6c2da5c4-8102-4b04-a273-88eb072baa66",
                "resourceVersion": "704",
                "creationTimestamp": "2023-12-26T14:13:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-w9z7h",
                "uid": "4cd2d92f-45c0-4780-80ce-dba5d16181ea",
                "apiVersion": "v1",
                "resourceVersion": "665",
                "fieldPath": "spec.containers{liveness-probe}"
            },
            "reason": "Started",
            "message": "Started container liveness-probe",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:39Z",
            "lastTimestamp": "2023-12-26T14:13:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-w9z7h.17a4673105994762",
                "namespace": "kube-system",
                "uid": "c43a065b-453a-41b5-a80d-3943d883f45a",
                "resourceVersion": "705",
                "creationTimestamp": "2023-12-26T14:13:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-w9z7h",
                "uid": "4cd2d92f-45c0-4780-80ce-dba5d16181ea",
                "apiVersion": "v1",
                "resourceVersion": "665",
                "fieldPath": "spec.containers{node-driver-registrar}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.8.0\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:39Z",
            "lastTimestamp": "2023-12-26T14:13:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-w9z7h.17a4673136bf7e10",
                "namespace": "kube-system",
                "uid": "9f67dc78-3d44-4408-8f1d-01d946f438a6",
                "resourceVersion": "719",
                "creationTimestamp": "2023-12-26T14:13:40Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-w9z7h",
                "uid": "4cd2d92f-45c0-4780-80ce-dba5d16181ea",
                "apiVersion": "v1",
                "resourceVersion": "665",
                "fieldPath": "spec.containers{node-driver-registrar}"
            },
            "reason": "Created",
            "message": "Created container node-driver-registrar",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:40Z",
            "lastTimestamp": "2023-12-26T14:13:40Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-w9z7h.17a4673142ee7c7b",
                "namespace": "kube-system",
                "uid": "3af4c13d-40ac-470d-9e11-d826677d63d2",
                "resourceVersion": "724",
                "creationTimestamp": "2023-12-26T14:13:40Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-w9z7h",
                "uid": "4cd2d92f-45c0-4780-80ce-dba5d16181ea",
                "apiVersion": "v1",
                "resourceVersion": "665",
                "fieldPath": "spec.containers{node-driver-registrar}"
            },
            "reason": "Started",
            "message": "Started container node-driver-registrar",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:40Z",
            "lastTimestamp": "2023-12-26T14:13:40Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-w9z7h.17a4673143039c46",
                "namespace": "kube-system",
                "uid": "5e0201e8-9a9c-45ca-b928-66046f776fd4",
                "resourceVersion": "725",
                "creationTimestamp": "2023-12-26T14:13:40Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-w9z7h",
                "uid": "4cd2d92f-45c0-4780-80ce-dba5d16181ea",
                "apiVersion": "v1",
                "resourceVersion": "665",
                "fieldPath": "spec.containers{azurefile}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.28.6\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:40Z",
            "lastTimestamp": "2023-12-26T14:13:40Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-w9z7h.17a467315ba70169",
                "namespace": "kube-system",
                "uid": "82d5b198-4777-4e8d-967f-2a8ae132a256",
                "resourceVersion": "731",
                "creationTimestamp": "2023-12-26T14:13:40Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-w9z7h",
                "uid": "4cd2d92f-45c0-4780-80ce-dba5d16181ea",
                "apiVersion": "v1",
                "resourceVersion": "665",
                "fieldPath": "spec.containers{azurefile}"
            },
            "reason": "Created",
            "message": "Created container azurefile",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:40Z",
            "lastTimestamp": "2023-12-26T14:13:40Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-w9z7h.17a467316bdadac3",
                "namespace": "kube-system",
                "uid": "cd5cd489-f103-43eb-9154-31b1a5a7fb11",
                "resourceVersion": "734",
                "creationTimestamp": "2023-12-26T14:13:41Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-w9z7h",
                "uid": "4cd2d92f-45c0-4780-80ce-dba5d16181ea",
                "apiVersion": "v1",
                "resourceVersion": "665",
                "fieldPath": "spec.containers{azurefile}"
            },
            "reason": "Started",
            "message": "Started container azurefile",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:41Z",
            "lastTimestamp": "2023-12-26T14:13:41Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node.17a4672f7dad4790",
                "namespace": "kube-system",
                "uid": "fce68e92-070d-4c42-81b4-ac3cadfe9218",
                "resourceVersion": "596",
                "creationTimestamp": "2023-12-26T14:13:32Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "csi-azurefile-node",
                "uid": "d928ec23-9d46-4f22-ad5b-f0d24bb5451e",
                "apiVersion": "apps/v1",
                "resourceVersion": "480"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: csi-azurefile-node-lnlt2",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2023-12-26T14:13:32Z",
            "lastTimestamp": "2023-12-26T14:13:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "csi-azurefile-node.17a46730a23dc322",
                "namespace": "kube-system",
                "uid": "af728fd5-c606-4fbc-aa54-05e15f608c9e",
                "resourceVersion": "664",
                "creationTimestamp": "2023-12-26T14:13:37Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "csi-azurefile-node",
                "uid": "d928ec23-9d46-4f22-ad5b-f0d24bb5451e",
                "apiVersion": "apps/v1",
                "resourceVersion": "595"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: csi-azurefile-node-w9z7h",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2023-12-26T14:13:37Z",
            "lastTimestamp": "2023-12-26T14:13:37Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "disk-csi-azure-com.17a46726eeee0108",
                "namespace": "kube-system",
                "uid": "8be528af-97cc-4358-8b49-abf38c069ed4",
                "resourceVersion": "226",
                "creationTimestamp": "2023-12-26T14:12:55Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "disk-csi-azure-com",
                "uid": "57cbef29-2e1c-49ac-aab6-2d825316332c",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "225"
            },
            "reason": "LeaderElection",
            "message": "1703599945890-792-disk-csi-azure-com became leader",
            "source": {
                "component": "disk.csi.azure.com/1703599945890-792-disk.csi.azure.com"
            },
            "firstTimestamp": "2023-12-26T14:12:55Z",
            "lastTimestamp": "2023-12-26T14:12:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "external-attacher-leader-disk-csi-azure-com.17a46725f09008c1",
                "namespace": "kube-system",
                "uid": "36ac67e9-34f3-45cc-a358-438f1bed2477",
                "resourceVersion": "201",
                "creationTimestamp": "2023-12-26T14:12:51Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "external-attacher-leader-disk-csi-azure-com",
                "uid": "fefc32ad-2ca4-4edd-9526-c7ef2f83e548",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "200"
            },
            "reason": "LeaderElection",
            "message": "csi-azuredisk-controller-84b88c8445-csx8z became leader",
            "source": {
                "component": "external-attacher-leader-disk.csi.azure.com/csi-azuredisk-controller-84b88c8445-csx8z"
            },
            "firstTimestamp": "2023-12-26T14:12:51Z",
            "lastTimestamp": "2023-12-26T14:12:51Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "external-attacher-leader-file-csi-azure-com.17a4672613531004",
                "namespace": "kube-system",
                "uid": "f603e6df-e141-49c9-9127-986060e94518",
                "resourceVersion": "207",
                "creationTimestamp": "2023-12-26T14:12:52Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "external-attacher-leader-file-csi-azure-com",
                "uid": "a2f83a96-a9f2-4f1b-8f79-ce35fac0fa2c",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "206"
            },
            "reason": "LeaderElection",
            "message": "csi-azurefile-controller-84bbb75d65-nb99c became leader",
            "source": {
                "component": "external-attacher-leader-file.csi.azure.com/csi-azurefile-controller-84bbb75d65-nb99c"
            },
            "firstTimestamp": "2023-12-26T14:12:52Z",
            "lastTimestamp": "2023-12-26T14:12:52Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "external-resizer-disk-csi-azure-com.17a467261dfd9382",
                "namespace": "kube-system",
                "uid": "4dadef2b-6925-4b17-a51d-f06dd8dcd65b",
                "resourceVersion": "210",
                "creationTimestamp": "2023-12-26T14:12:52Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "external-resizer-disk-csi-azure-com",
                "uid": "503ff720-5d72-48aa-ba8a-636c24da745a",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "209"
            },
            "reason": "LeaderElection",
            "message": "csi-azuredisk-controller-84b88c8445-csx8z became leader",
            "source": {
                "component": "external-resizer-disk-csi-azure-com/csi-azuredisk-controller-84b88c8445-csx8z"
            },
            "firstTimestamp": "2023-12-26T14:12:52Z",
            "lastTimestamp": "2023-12-26T14:12:52Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "external-resizer-file-csi-azure-com.17a46726694d0e52",
                "namespace": "kube-system",
                "uid": "2f5c9a38-af88-4b36-865f-837a3bb8713f",
                "resourceVersion": "219",
                "creationTimestamp": "2023-12-26T14:12:53Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "external-resizer-file-csi-azure-com",
                "uid": "d4fbdab1-2e5b-473c-bedc-d8222d87c6ce",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "218"
            },
            "reason": "LeaderElection",
            "message": "csi-azurefile-controller-84bbb75d65-x7qm5 became leader",
            "source": {
                "component": "external-resizer-file-csi-azure-com/csi-azurefile-controller-84bbb75d65-x7qm5"
            },
            "firstTimestamp": "2023-12-26T14:12:53Z",
            "lastTimestamp": "2023-12-26T14:12:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "external-snapshotter-leader-disk-csi-azure-com.17a467260ddcfb2c",
                "namespace": "kube-system",
                "uid": "e4f9dcb4-3615-4b74-9ccf-58d775128a40",
                "resourceVersion": "204",
                "creationTimestamp": "2023-12-26T14:12:52Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "external-snapshotter-leader-disk-csi-azure-com",
                "uid": "7c3b5471-0592-4827-b725-98984f611e36",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "203"
            },
            "reason": "LeaderElection",
            "message": "csi-azuredisk-controller-84b88c8445-629sg became leader",
            "source": {
                "component": "external-snapshotter-leader-disk.csi.azure.com/csi-azuredisk-controller-84b88c8445-629sg"
            },
            "firstTimestamp": "2023-12-26T14:12:52Z",
            "lastTimestamp": "2023-12-26T14:12:52Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "external-snapshotter-leader-file-csi-azure-com.17a46726203244e8",
                "namespace": "kube-system",
                "uid": "b356c2ce-2807-4a1d-a74f-0373a53c4ede",
                "resourceVersion": "213",
                "creationTimestamp": "2023-12-26T14:12:52Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "external-snapshotter-leader-file-csi-azure-com",
                "uid": "8ad1030a-0ea9-47c0-80a6-2f32103144be",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "212"
            },
            "reason": "LeaderElection",
            "message": "csi-azurefile-controller-84bbb75d65-nb99c became leader",
            "source": {
                "component": "external-snapshotter-leader-file.csi.azure.com/csi-azurefile-controller-84bbb75d65-nb99c"
            },
            "firstTimestamp": "2023-12-26T14:12:52Z",
            "lastTimestamp": "2023-12-26T14:12:52Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "file-csi-azure-com.17a46726c3aabf7e",
                "namespace": "kube-system",
                "uid": "da0973ae-56a3-4a8b-8388-4514be2f08fb",
                "resourceVersion": "222",
                "creationTimestamp": "2023-12-26T14:12:55Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "file-csi-azure-com",
                "uid": "ff26fd89-8d4e-4a0d-bc1b-81d685c8d5c0",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "221"
            },
            "reason": "LeaderElection",
            "message": "1703599951295-1216-file-csi-azure-com became leader",
            "source": {
                "component": "file.csi.azure.com/1703599951295-1216-file.csi.azure.com"
            },
            "firstTimestamp": "2023-12-26T14:12:55Z",
            "lastTimestamp": "2023-12-26T14:12:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "konnectivity-agent-b95494c76-rx82r.17a4672e7eb0cff3",
                "namespace": "kube-system",
                "uid": "9823b4c6-5aeb-4086-894e-ada0c8267246",
                "resourceVersion": "499",
                "creationTimestamp": "2023-12-26T14:13:28Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-b95494c76-rx82r",
                "uid": "5aea78b5-98f8-4e90-9c1f-f88caab6d4b4",
                "apiVersion": "v1",
                "resourceVersion": "495"
            },
            "reason": "FailedScheduling",
            "message": "no nodes available to schedule pods",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:13:28Z",
            "lastTimestamp": "2023-12-26T14:13:28Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "konnectivity-agent-b95494c76-rx82r.17a4672fa5286f24",
                "namespace": "kube-system",
                "uid": "d5a53a02-b9ed-48a8-a2d1-dad6d2a3e5b7",
                "resourceVersion": "621",
                "creationTimestamp": "2023-12-26T14:13:33Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-b95494c76-rx82r",
                "uid": "5aea78b5-98f8-4e90-9c1f-f88caab6d4b4",
                "apiVersion": "v1",
                "resourceVersion": "502"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.cloudprovider.kubernetes.io/uninitialized: true}. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling..",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:13:33Z",
            "lastTimestamp": "2023-12-26T14:13:33Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "konnectivity-agent-b95494c76-rx82r.17a46738e29b8290",
                "namespace": "kube-system",
                "uid": "3cb20d84-0fb2-43db-bd52-12533a78faca",
                "resourceVersion": "945",
                "creationTimestamp": "2023-12-26T14:14:13Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-b95494c76-rx82r",
                "uid": "5aea78b5-98f8-4e90-9c1f-f88caab6d4b4",
                "apiVersion": "v1",
                "resourceVersion": "622"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/konnectivity-agent-b95494c76-rx82r to aks-default-20426481-vmss000000",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:14:13Z",
            "lastTimestamp": "2023-12-26T14:14:13Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "konnectivity-agent-b95494c76-rx82r.17a467393b657f2d",
                "namespace": "kube-system",
                "uid": "c6c6a259-f99f-4f64-a1ed-49f01f5cf71a",
                "resourceVersion": "967",
                "creationTimestamp": "2023-12-26T14:14:14Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-b95494c76-rx82r",
                "uid": "5aea78b5-98f8-4e90-9c1f-f88caab6d4b4",
                "apiVersion": "v1",
                "resourceVersion": "939",
                "fieldPath": "spec.containers{konnectivity-agent}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.0.33-hotfix.20221110\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:14Z",
            "lastTimestamp": "2023-12-26T14:14:14Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "konnectivity-agent-b95494c76-rx82r.17a4673943e6f15b",
                "namespace": "kube-system",
                "uid": "ee19bece-eeba-40ac-a49e-21238570e25a",
                "resourceVersion": "971",
                "creationTimestamp": "2023-12-26T14:14:14Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-b95494c76-rx82r",
                "uid": "5aea78b5-98f8-4e90-9c1f-f88caab6d4b4",
                "apiVersion": "v1",
                "resourceVersion": "939",
                "fieldPath": "spec.containers{konnectivity-agent}"
            },
            "reason": "Created",
            "message": "Created container konnectivity-agent",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:14Z",
            "lastTimestamp": "2023-12-26T14:14:14Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "konnectivity-agent-b95494c76-rx82r.17a467395229be5f",
                "namespace": "kube-system",
                "uid": "4d73f7c0-5a6b-44bb-b666-d4aa0d55f8b9",
                "resourceVersion": "978",
                "creationTimestamp": "2023-12-26T14:14:14Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-b95494c76-rx82r",
                "uid": "5aea78b5-98f8-4e90-9c1f-f88caab6d4b4",
                "apiVersion": "v1",
                "resourceVersion": "939",
                "fieldPath": "spec.containers{konnectivity-agent}"
            },
            "reason": "Started",
            "message": "Started container konnectivity-agent",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:14Z",
            "lastTimestamp": "2023-12-26T14:14:14Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "konnectivity-agent-b95494c76-rx82r.17a4673971c4cecf",
                "namespace": "kube-system",
                "uid": "dd43db71-31a6-4303-b6d5-032ecf5e19f5",
                "resourceVersion": "986",
                "creationTimestamp": "2023-12-26T14:14:15Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-b95494c76-rx82r",
                "uid": "5aea78b5-98f8-4e90-9c1f-f88caab6d4b4",
                "apiVersion": "v1",
                "resourceVersion": "939",
                "fieldPath": "spec.containers{konnectivity-agent}"
            },
            "reason": "Unhealthy",
            "message": "Readiness probe failed: Get \"http://10.244.0.5:8082/ready\": dial tcp 10.244.0.5:8082: connect: connection refused",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:15Z",
            "lastTimestamp": "2023-12-26T14:14:15Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "konnectivity-agent-b95494c76-zfrzk.17a4672e8123cb9b",
                "namespace": "kube-system",
                "uid": "d861100a-acd8-4615-96be-68e2d6e784f1",
                "resourceVersion": "509",
                "creationTimestamp": "2023-12-26T14:13:28Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-b95494c76-zfrzk",
                "uid": "18ccca4a-d1a6-43e4-8851-6188b96a02cb",
                "apiVersion": "v1",
                "resourceVersion": "504"
            },
            "reason": "FailedScheduling",
            "message": "no nodes available to schedule pods",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:13:28Z",
            "lastTimestamp": "2023-12-26T14:13:28Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "konnectivity-agent-b95494c76-zfrzk.17a4672fa5ff10fb",
                "namespace": "kube-system",
                "uid": "1f51d12f-99e0-4972-8373-d972ea1b6010",
                "resourceVersion": "624",
                "creationTimestamp": "2023-12-26T14:13:33Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-b95494c76-zfrzk",
                "uid": "18ccca4a-d1a6-43e4-8851-6188b96a02cb",
                "apiVersion": "v1",
                "resourceVersion": "511"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.cloudprovider.kubernetes.io/uninitialized: true}. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling..",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:13:33Z",
            "lastTimestamp": "2023-12-26T14:13:33Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "konnectivity-agent-b95494c76-zfrzk.17a46738e2c8640a",
                "namespace": "kube-system",
                "uid": "5db1e692-d89f-4db6-82fb-d9ead2fdb0db",
                "resourceVersion": "950",
                "creationTimestamp": "2023-12-26T14:14:13Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-b95494c76-zfrzk",
                "uid": "18ccca4a-d1a6-43e4-8851-6188b96a02cb",
                "apiVersion": "v1",
                "resourceVersion": "623"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/konnectivity-agent-b95494c76-zfrzk to aks-default-20426481-vmss000000",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:14:13Z",
            "lastTimestamp": "2023-12-26T14:14:13Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "konnectivity-agent-b95494c76-zfrzk.17a4673938d4ecf5",
                "namespace": "kube-system",
                "uid": "90c0a9ac-cea4-4951-97ab-415e1292406c",
                "resourceVersion": "965",
                "creationTimestamp": "2023-12-26T14:14:14Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-b95494c76-zfrzk",
                "uid": "18ccca4a-d1a6-43e4-8851-6188b96a02cb",
                "apiVersion": "v1",
                "resourceVersion": "942",
                "fieldPath": "spec.containers{konnectivity-agent}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.0.33-hotfix.20221110\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:14Z",
            "lastTimestamp": "2023-12-26T14:14:14Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "konnectivity-agent-b95494c76-zfrzk.17a4673944db0f3b",
                "namespace": "kube-system",
                "uid": "c6a01abb-ae66-4c6c-b0a3-3e424067001b",
                "resourceVersion": "972",
                "creationTimestamp": "2023-12-26T14:14:14Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-b95494c76-zfrzk",
                "uid": "18ccca4a-d1a6-43e4-8851-6188b96a02cb",
                "apiVersion": "v1",
                "resourceVersion": "942",
                "fieldPath": "spec.containers{konnectivity-agent}"
            },
            "reason": "Created",
            "message": "Created container konnectivity-agent",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:14Z",
            "lastTimestamp": "2023-12-26T14:14:14Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "konnectivity-agent-b95494c76-zfrzk.17a467395222ce9b",
                "namespace": "kube-system",
                "uid": "31d0cfec-1d3a-4852-b32a-f8b795bd1665",
                "resourceVersion": "977",
                "creationTimestamp": "2023-12-26T14:14:14Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-b95494c76-zfrzk",
                "uid": "18ccca4a-d1a6-43e4-8851-6188b96a02cb",
                "apiVersion": "v1",
                "resourceVersion": "942",
                "fieldPath": "spec.containers{konnectivity-agent}"
            },
            "reason": "Started",
            "message": "Started container konnectivity-agent",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:14Z",
            "lastTimestamp": "2023-12-26T14:14:14Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "konnectivity-agent-b95494c76-zfrzk.17a4673971667066",
                "namespace": "kube-system",
                "uid": "70d8c2c8-ff37-4238-986d-895ccaac3289",
                "resourceVersion": "983",
                "creationTimestamp": "2023-12-26T14:14:15Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-b95494c76-zfrzk",
                "uid": "18ccca4a-d1a6-43e4-8851-6188b96a02cb",
                "apiVersion": "v1",
                "resourceVersion": "942",
                "fieldPath": "spec.containers{konnectivity-agent}"
            },
            "reason": "Unhealthy",
            "message": "Readiness probe failed: Get \"http://10.244.0.6:8082/ready\": dial tcp 10.244.0.6:8082: connect: connection refused",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:15Z",
            "lastTimestamp": "2023-12-26T14:14:15Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "konnectivity-agent-b95494c76.17a4672e7eb328fc",
                "namespace": "kube-system",
                "uid": "7ec0b03b-78fb-4a6e-97fc-669b2142d820",
                "resourceVersion": "498",
                "creationTimestamp": "2023-12-26T14:13:28Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "konnectivity-agent-b95494c76",
                "uid": "344d2c11-bda6-4083-ad8d-48b003fb6dfb",
                "apiVersion": "apps/v1",
                "resourceVersion": "492"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: konnectivity-agent-b95494c76-rx82r",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-12-26T14:13:28Z",
            "lastTimestamp": "2023-12-26T14:13:28Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "replicaset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "konnectivity-agent-b95494c76.17a4672e810727cd",
                "namespace": "kube-system",
                "uid": "8b1ac2d0-3b23-4832-9137-41e9e7ebd248",
                "resourceVersion": "507",
                "creationTimestamp": "2023-12-26T14:13:28Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "konnectivity-agent-b95494c76",
                "uid": "344d2c11-bda6-4083-ad8d-48b003fb6dfb",
                "apiVersion": "apps/v1",
                "resourceVersion": "492"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: konnectivity-agent-b95494c76-zfrzk",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-12-26T14:13:28Z",
            "lastTimestamp": "2023-12-26T14:13:28Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "replicaset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "konnectivity-agent.17a4672e7dbbdaa5",
                "namespace": "kube-system",
                "uid": "e3e483f7-4cbd-4f75-8f58-2568150521f5",
                "resourceVersion": "493",
                "creationTimestamp": "2023-12-26T14:13:28Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "kube-system",
                "name": "konnectivity-agent",
                "uid": "f8930f51-3c9c-414e-9ffe-9146d90e5674",
                "apiVersion": "apps/v1",
                "resourceVersion": "491"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled up replica set konnectivity-agent-b95494c76 to 2",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2023-12-26T14:13:28Z",
            "lastTimestamp": "2023-12-26T14:13:28Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "deployment-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "konnectivity-agent.17a4672e7eb03262",
                "namespace": "kube-system",
                "uid": "cb1ffc52-1d73-42b5-9af2-6d408d171e59",
                "resourceVersion": "500",
                "creationTimestamp": "2023-12-26T14:13:28Z"
            },
            "involvedObject": {
                "kind": "PodDisruptionBudget",
                "namespace": "kube-system",
                "name": "konnectivity-agent",
                "uid": "b99203c8-4bee-4fb3-972b-6a03cc289ca1",
                "apiVersion": "policy/v1",
                "resourceVersion": "496"
            },
            "reason": "NoPods",
            "message": "No matching pods found",
            "source": {
                "component": "controllermanager"
            },
            "firstTimestamp": "2023-12-26T14:13:28Z",
            "lastTimestamp": "2023-12-26T14:13:28Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "controllermanager",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-controller-manager.17a4672b72dfcc5c",
                "namespace": "kube-system",
                "uid": "2c76717a-3b55-4441-ab87-68bc415cd91c",
                "resourceVersion": "299",
                "creationTimestamp": "2023-12-26T14:13:15Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "kube-controller-manager",
                "uid": "e9dabd51-1704-422f-8d56-e86ce8b943af",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "298"
            },
            "reason": "LeaderElection",
            "message": "kube-controller-manager-v2-78f6bd6f7c-msm7m_b4ef2dbb-5f5f-40c7-8d77-294c140a21dd became leader",
            "source": {
                "component": "kube-controller-manager"
            },
            "firstTimestamp": "2023-12-26T14:13:15Z",
            "lastTimestamp": "2023-12-26T14:13:15Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kube-controller-manager",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-64gzd.17a46730a5af7489",
                "namespace": "kube-system",
                "uid": "9fcf693d-1232-43da-8c8d-d1e92b2c524f",
                "resourceVersion": "674",
                "creationTimestamp": "2023-12-26T14:13:37Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-64gzd",
                "uid": "71d58931-d197-4119-9fb0-353994a7188b",
                "apiVersion": "v1",
                "resourceVersion": "667"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kube-proxy-64gzd to aks-default-20426481-vmss000001",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:13:37Z",
            "lastTimestamp": "2023-12-26T14:13:37Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-64gzd.17a46730e88449c5",
                "namespace": "kube-system",
                "uid": "52282c99-96d5-4392-ac15-8db6b5f40bde",
                "resourceVersion": "693",
                "creationTimestamp": "2023-12-26T14:13:38Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-64gzd",
                "uid": "71d58931-d197-4119-9fb0-353994a7188b",
                "apiVersion": "v1",
                "resourceVersion": "670",
                "fieldPath": "spec.initContainers{kube-proxy-bootstrap}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/mirror/docker/library/busybox:1.35\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:38Z",
            "lastTimestamp": "2023-12-26T14:13:38Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "kube-proxy-64gzd.17a46730f7b8390b",
                "namespace": "kube-system",
                "uid": "a5e3a5b6-b8ef-4de7-beab-a3aa282834f3",
                "resourceVersion": "698",
                "creationTimestamp": "2023-12-26T14:13:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-64gzd",
                "uid": "71d58931-d197-4119-9fb0-353994a7188b",
                "apiVersion": "v1",
                "resourceVersion": "670",
                "fieldPath": "spec.initContainers{kube-proxy-bootstrap}"
            },
            "reason": "Created",
            "message": "Created container kube-proxy-bootstrap",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:39Z",
            "lastTimestamp": "2023-12-26T14:13:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "kube-proxy-64gzd.17a46731008cf370",
                "namespace": "kube-system",
                "uid": "838e1709-4f9f-415b-b6a1-6b5e2046e6d6",
                "resourceVersion": "703",
                "creationTimestamp": "2023-12-26T14:13:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-64gzd",
                "uid": "71d58931-d197-4119-9fb0-353994a7188b",
                "apiVersion": "v1",
                "resourceVersion": "670",
                "fieldPath": "spec.initContainers{kube-proxy-bootstrap}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy-bootstrap",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:39Z",
            "lastTimestamp": "2023-12-26T14:13:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "kube-proxy-64gzd.17a4673158844487",
                "namespace": "kube-system",
                "uid": "d5d0487b-330b-4f36-8ec2-469d22566b0c",
                "resourceVersion": "728",
                "creationTimestamp": "2023-12-26T14:13:40Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-64gzd",
                "uid": "71d58931-d197-4119-9fb0-353994a7188b",
                "apiVersion": "v1",
                "resourceVersion": "670",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.27.7-1\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:40Z",
            "lastTimestamp": "2023-12-26T14:13:40Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "kube-proxy-64gzd.17a4673164a4b412",
                "namespace": "kube-system",
                "uid": "ff5a871e-0cb9-4d38-8d77-f2848d8b85fa",
                "resourceVersion": "733",
                "creationTimestamp": "2023-12-26T14:13:40Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-64gzd",
                "uid": "71d58931-d197-4119-9fb0-353994a7188b",
                "apiVersion": "v1",
                "resourceVersion": "670",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Created",
            "message": "Created container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:40Z",
            "lastTimestamp": "2023-12-26T14:13:40Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "kube-proxy-64gzd.17a4673172fd03c6",
                "namespace": "kube-system",
                "uid": "8eec0759-5f65-4f8d-a358-22f038c5a1ca",
                "resourceVersion": "735",
                "creationTimestamp": "2023-12-26T14:13:41Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-64gzd",
                "uid": "71d58931-d197-4119-9fb0-353994a7188b",
                "apiVersion": "v1",
                "resourceVersion": "670",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:13:41Z",
            "lastTimestamp": "2023-12-26T14:13:41Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "kube-proxy-jn5rp.17a4672f81c499b4",
                "namespace": "kube-system",
                "uid": "5554b6aa-323a-4bf6-b01e-2a22192025a2",
                "resourceVersion": "611",
                "creationTimestamp": "2023-12-26T14:13:32Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-jn5rp",
                "uid": "cb414ca1-affe-46ea-9705-ffb195c71c1d",
                "apiVersion": "v1",
                "resourceVersion": "602"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kube-proxy-jn5rp to aks-default-20426481-vmss000000",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:13:32Z",
            "lastTimestamp": "2023-12-26T14:13:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-jn5rp.17a467323552f030",
                "namespace": "kube-system",
                "uid": "ee4922f1-6fac-474a-8d40-57a082409ec5",
                "resourceVersion": "769",
                "creationTimestamp": "2023-12-26T14:13:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-jn5rp",
                "uid": "cb414ca1-affe-46ea-9705-ffb195c71c1d",
                "apiVersion": "v1",
                "resourceVersion": "608",
                "fieldPath": "spec.initContainers{kube-proxy-bootstrap}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/mirror/docker/library/busybox:1.35\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:44Z",
            "lastTimestamp": "2023-12-26T14:13:44Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "kube-proxy-jn5rp.17a467324350d3c4",
                "namespace": "kube-system",
                "uid": "92837b8b-6d85-43b2-b37d-b4cd44c60f46",
                "resourceVersion": "775",
                "creationTimestamp": "2023-12-26T14:13:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-jn5rp",
                "uid": "cb414ca1-affe-46ea-9705-ffb195c71c1d",
                "apiVersion": "v1",
                "resourceVersion": "608",
                "fieldPath": "spec.initContainers{kube-proxy-bootstrap}"
            },
            "reason": "Created",
            "message": "Created container kube-proxy-bootstrap",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:44Z",
            "lastTimestamp": "2023-12-26T14:13:44Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "kube-proxy-jn5rp.17a467325118ef20",
                "namespace": "kube-system",
                "uid": "e168d2de-fbf9-4c87-b4fd-d20809d9ae76",
                "resourceVersion": "780",
                "creationTimestamp": "2023-12-26T14:13:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-jn5rp",
                "uid": "cb414ca1-affe-46ea-9705-ffb195c71c1d",
                "apiVersion": "v1",
                "resourceVersion": "608",
                "fieldPath": "spec.initContainers{kube-proxy-bootstrap}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy-bootstrap",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:44Z",
            "lastTimestamp": "2023-12-26T14:13:44Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "kube-proxy-jn5rp.17a46732ac0c0d69",
                "namespace": "kube-system",
                "uid": "f0e666dc-7d1f-480a-bdee-c9ffe0615d5f",
                "resourceVersion": "809",
                "creationTimestamp": "2023-12-26T14:13:46Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-jn5rp",
                "uid": "cb414ca1-affe-46ea-9705-ffb195c71c1d",
                "apiVersion": "v1",
                "resourceVersion": "608",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.27.7-1\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:46Z",
            "lastTimestamp": "2023-12-26T14:13:46Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "kube-proxy-jn5rp.17a46732bab2cf66",
                "namespace": "kube-system",
                "uid": "7fbb455c-fb36-4f44-8779-ba8554e50a24",
                "resourceVersion": "813",
                "creationTimestamp": "2023-12-26T14:13:46Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-jn5rp",
                "uid": "cb414ca1-affe-46ea-9705-ffb195c71c1d",
                "apiVersion": "v1",
                "resourceVersion": "608",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Created",
            "message": "Created container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:46Z",
            "lastTimestamp": "2023-12-26T14:13:46Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "kube-proxy-jn5rp.17a46732c5819b1e",
                "namespace": "kube-system",
                "uid": "6d60f845-3dab-42a4-a306-c067e60c4ee4",
                "resourceVersion": "814",
                "creationTimestamp": "2023-12-26T14:13:46Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-jn5rp",
                "uid": "cb414ca1-affe-46ea-9705-ffb195c71c1d",
                "apiVersion": "v1",
                "resourceVersion": "608",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:46Z",
            "lastTimestamp": "2023-12-26T14:13:46Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "kube-proxy.17a4672f81044873",
                "namespace": "kube-system",
                "uid": "679a0163-a8ad-49bc-96e0-ef6807155dae",
                "resourceVersion": "610",
                "creationTimestamp": "2023-12-26T14:13:32Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kube-proxy",
                "uid": "be5cef7f-12c4-48dd-ab13-d69cf12f6d4b",
                "apiVersion": "apps/v1",
                "resourceVersion": "551"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kube-proxy-jn5rp",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2023-12-26T14:13:32Z",
            "lastTimestamp": "2023-12-26T14:13:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy.17a46730a529481c",
                "namespace": "kube-system",
                "uid": "f92bc450-d444-4dd0-add3-4f416174e9d0",
                "resourceVersion": "671",
                "creationTimestamp": "2023-12-26T14:13:37Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kube-proxy",
                "uid": "be5cef7f-12c4-48dd-ab13-d69cf12f6d4b",
                "apiVersion": "apps/v1",
                "resourceVersion": "607"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kube-proxy-64gzd",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2023-12-26T14:13:37Z",
            "lastTimestamp": "2023-12-26T14:13:37Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-scheduler.17a467265f46121a",
                "namespace": "kube-system",
                "uid": "5ebbc1e2-192d-498b-97bd-138d5957e3b9",
                "resourceVersion": "216",
                "creationTimestamp": "2023-12-26T14:12:53Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "kube-scheduler",
                "uid": "0613b942-436a-46cb-af2f-430e19081524",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "215"
            },
            "reason": "LeaderElection",
            "message": "kube-scheduler-v2-7b4b8c7c5d-ztllb_fbf5c7e8-a45f-4272-abec-e564a1d2ed03 became leader",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:12:53Z",
            "lastTimestamp": "2023-12-26T14:12:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server-5955767688-jbkcx.17a4673b2830d2ff",
                "namespace": "kube-system",
                "uid": "5f5fa8ae-6c18-4757-9e6e-08790a3bdd73",
                "resourceVersion": "1105",
                "creationTimestamp": "2023-12-26T14:14:22Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-5955767688-jbkcx",
                "uid": "6e3af4ad-3eb9-40ae-aa5b-be2f5e7ceb40",
                "apiVersion": "v1",
                "resourceVersion": "1096"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/metrics-server-5955767688-jbkcx to aks-default-20426481-vmss000000",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:14:22Z",
            "lastTimestamp": "2023-12-26T14:14:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server-5955767688-jbkcx.17a4673b648800cb",
                "namespace": "kube-system",
                "uid": "98d55161-1f04-4ba5-a638-de702cbb1356",
                "resourceVersion": "1123",
                "creationTimestamp": "2023-12-26T14:14:23Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-5955767688-jbkcx",
                "uid": "6e3af4ad-3eb9-40ae-aa5b-be2f5e7ceb40",
                "apiVersion": "v1",
                "resourceVersion": "1101",
                "fieldPath": "spec.containers{metrics-server-vpa}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.19\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:23Z",
            "lastTimestamp": "2023-12-26T14:14:23Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "metrics-server-5955767688-jbkcx.17a4673b69458307",
                "namespace": "kube-system",
                "uid": "b9c0790a-cad3-4077-afa5-4203d0952b69",
                "resourceVersion": "1127",
                "creationTimestamp": "2023-12-26T14:14:23Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-5955767688-jbkcx",
                "uid": "6e3af4ad-3eb9-40ae-aa5b-be2f5e7ceb40",
                "apiVersion": "v1",
                "resourceVersion": "1101",
                "fieldPath": "spec.containers{metrics-server-vpa}"
            },
            "reason": "Created",
            "message": "Created container metrics-server-vpa",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:23Z",
            "lastTimestamp": "2023-12-26T14:14:23Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "metrics-server-5955767688-jbkcx.17a4673b76b89054",
                "namespace": "kube-system",
                "uid": "28303db6-36c9-4cb4-b8b2-1d9c484f2bb3",
                "resourceVersion": "1133",
                "creationTimestamp": "2023-12-26T14:14:24Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-5955767688-jbkcx",
                "uid": "6e3af4ad-3eb9-40ae-aa5b-be2f5e7ceb40",
                "apiVersion": "v1",
                "resourceVersion": "1101",
                "fieldPath": "spec.containers{metrics-server-vpa}"
            },
            "reason": "Started",
            "message": "Started container metrics-server-vpa",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:24Z",
            "lastTimestamp": "2023-12-26T14:14:24Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "metrics-server-5955767688-jbkcx.17a4673b770cabc1",
                "namespace": "kube-system",
                "uid": "7c89c8c0-2dd7-49ce-9b78-238be5833361",
                "resourceVersion": "1134",
                "creationTimestamp": "2023-12-26T14:14:24Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-5955767688-jbkcx",
                "uid": "6e3af4ad-3eb9-40ae-aa5b-be2f5e7ceb40",
                "apiVersion": "v1",
                "resourceVersion": "1101",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:24Z",
            "lastTimestamp": "2023-12-26T14:14:24Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "metrics-server-5955767688-jbkcx.17a4673b7b5b7f1d",
                "namespace": "kube-system",
                "uid": "001289a9-1cee-4d44-90a8-7cf1079a94d1",
                "resourceVersion": "1135",
                "creationTimestamp": "2023-12-26T14:14:24Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-5955767688-jbkcx",
                "uid": "6e3af4ad-3eb9-40ae-aa5b-be2f5e7ceb40",
                "apiVersion": "v1",
                "resourceVersion": "1101",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Created",
            "message": "Created container metrics-server",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:24Z",
            "lastTimestamp": "2023-12-26T14:14:24Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "metrics-server-5955767688-jbkcx.17a4673ba62e21aa",
                "namespace": "kube-system",
                "uid": "43ed7a42-35df-485f-bc41-681436c9a757",
                "resourceVersion": "1139",
                "creationTimestamp": "2023-12-26T14:14:24Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-5955767688-jbkcx",
                "uid": "6e3af4ad-3eb9-40ae-aa5b-be2f5e7ceb40",
                "apiVersion": "v1",
                "resourceVersion": "1101",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Started",
            "message": "Started container metrics-server",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:24Z",
            "lastTimestamp": "2023-12-26T14:14:24Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "metrics-server-5955767688-z8xcm.17a4673b216976ce",
                "namespace": "kube-system",
                "uid": "cfb86930-d411-4f6d-a70b-7e7573277de4",
                "resourceVersion": "1082",
                "creationTimestamp": "2023-12-26T14:14:22Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-5955767688-z8xcm",
                "uid": "5a5006f7-1c71-43c2-afe7-df0f68568704",
                "apiVersion": "v1",
                "resourceVersion": "1076"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/metrics-server-5955767688-z8xcm to aks-default-20426481-vmss000000",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:14:22Z",
            "lastTimestamp": "2023-12-26T14:14:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server-5955767688-z8xcm.17a4673b58ec38c6",
                "namespace": "kube-system",
                "uid": "2745dbe4-1f43-46ba-b549-c022554648ee",
                "resourceVersion": "1121",
                "creationTimestamp": "2023-12-26T14:14:23Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-5955767688-z8xcm",
                "uid": "5a5006f7-1c71-43c2-afe7-df0f68568704",
                "apiVersion": "v1",
                "resourceVersion": "1081",
                "fieldPath": "spec.containers{metrics-server-vpa}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.19\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:23Z",
            "lastTimestamp": "2023-12-26T14:14:23Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "metrics-server-5955767688-z8xcm.17a4673b5cbe745c",
                "namespace": "kube-system",
                "uid": "e7f879e8-85be-4a93-9bfc-f9c88bed8e22",
                "resourceVersion": "1122",
                "creationTimestamp": "2023-12-26T14:14:23Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-5955767688-z8xcm",
                "uid": "5a5006f7-1c71-43c2-afe7-df0f68568704",
                "apiVersion": "v1",
                "resourceVersion": "1081",
                "fieldPath": "spec.containers{metrics-server-vpa}"
            },
            "reason": "Created",
            "message": "Created container metrics-server-vpa",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:23Z",
            "lastTimestamp": "2023-12-26T14:14:23Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "metrics-server-5955767688-z8xcm.17a4673b7076d1a1",
                "namespace": "kube-system",
                "uid": "a20ef3ce-2b6a-469d-8ea9-c8ec3100564a",
                "resourceVersion": "1129",
                "creationTimestamp": "2023-12-26T14:14:24Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-5955767688-z8xcm",
                "uid": "5a5006f7-1c71-43c2-afe7-df0f68568704",
                "apiVersion": "v1",
                "resourceVersion": "1081",
                "fieldPath": "spec.containers{metrics-server-vpa}"
            },
            "reason": "Started",
            "message": "Started container metrics-server-vpa",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:24Z",
            "lastTimestamp": "2023-12-26T14:14:24Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "metrics-server-5955767688-z8xcm.17a4673b708d4792",
                "namespace": "kube-system",
                "uid": "749f683b-12dd-472a-934d-fd31963ac9bc",
                "resourceVersion": "1130",
                "creationTimestamp": "2023-12-26T14:14:24Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-5955767688-z8xcm",
                "uid": "5a5006f7-1c71-43c2-afe7-df0f68568704",
                "apiVersion": "v1",
                "resourceVersion": "1081",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:24Z",
            "lastTimestamp": "2023-12-26T14:14:24Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "metrics-server-5955767688-z8xcm.17a4673b741cc2a8",
                "namespace": "kube-system",
                "uid": "eeed96ba-d128-4695-9802-9881ed162e6e",
                "resourceVersion": "1132",
                "creationTimestamp": "2023-12-26T14:14:24Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-5955767688-z8xcm",
                "uid": "5a5006f7-1c71-43c2-afe7-df0f68568704",
                "apiVersion": "v1",
                "resourceVersion": "1081",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Created",
            "message": "Created container metrics-server",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:24Z",
            "lastTimestamp": "2023-12-26T14:14:24Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "metrics-server-5955767688-z8xcm.17a4673b9c4145bc",
                "namespace": "kube-system",
                "uid": "81fdbf31-3f21-4152-9dd4-a0200952ceb0",
                "resourceVersion": "1138",
                "creationTimestamp": "2023-12-26T14:14:24Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-5955767688-z8xcm",
                "uid": "5a5006f7-1c71-43c2-afe7-df0f68568704",
                "apiVersion": "v1",
                "resourceVersion": "1081",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Started",
            "message": "Started container metrics-server",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:24Z",
            "lastTimestamp": "2023-12-26T14:14:24Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "metrics-server-5955767688.17a4673b20706eec",
                "namespace": "kube-system",
                "uid": "39141cc7-3a26-4860-b1cf-90657bf0374d",
                "resourceVersion": "1077",
                "creationTimestamp": "2023-12-26T14:14:22Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "metrics-server-5955767688",
                "uid": "3276b0d5-32d1-4dd5-bb43-7d835715430f",
                "apiVersion": "apps/v1",
                "resourceVersion": "1073"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: metrics-server-5955767688-z8xcm",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-12-26T14:14:22Z",
            "lastTimestamp": "2023-12-26T14:14:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "replicaset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server-5955767688.17a4673b27791e54",
                "namespace": "kube-system",
                "uid": "48b4d3ce-708f-4404-8d52-75657c0da8da",
                "resourceVersion": "1098",
                "creationTimestamp": "2023-12-26T14:14:22Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "metrics-server-5955767688",
                "uid": "3276b0d5-32d1-4dd5-bb43-7d835715430f",
                "apiVersion": "apps/v1",
                "resourceVersion": "1094"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: metrics-server-5955767688-jbkcx",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-12-26T14:14:22Z",
            "lastTimestamp": "2023-12-26T14:14:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "replicaset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server-7557c5798-57b7j.17a4672e8f785403",
                "namespace": "kube-system",
                "uid": "f72c5989-2024-49f4-802e-46bd5202ef26",
                "resourceVersion": "542",
                "creationTimestamp": "2023-12-26T14:13:28Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7557c5798-57b7j",
                "uid": "dcecd09c-152a-45f4-b0ed-36e7150124be",
                "apiVersion": "v1",
                "resourceVersion": "537"
            },
            "reason": "FailedScheduling",
            "message": "no nodes available to schedule pods",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:13:28Z",
            "lastTimestamp": "2023-12-26T14:13:28Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server-7557c5798-57b7j.17a4672fa78a2aef",
                "namespace": "kube-system",
                "uid": "a789fe26-7366-4148-aec0-691cb418a410",
                "resourceVersion": "627",
                "creationTimestamp": "2023-12-26T14:13:33Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7557c5798-57b7j",
                "uid": "dcecd09c-152a-45f4-b0ed-36e7150124be",
                "apiVersion": "v1",
                "resourceVersion": "545"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.cloudprovider.kubernetes.io/uninitialized: true}. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling..",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:13:33Z",
            "lastTimestamp": "2023-12-26T14:13:33Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server-7557c5798-57b7j.17a46738e2b66f8c",
                "namespace": "kube-system",
                "uid": "c8f449a0-0098-4cd2-9758-5d3952ba0602",
                "resourceVersion": "948",
                "creationTimestamp": "2023-12-26T14:14:13Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7557c5798-57b7j",
                "uid": "dcecd09c-152a-45f4-b0ed-36e7150124be",
                "apiVersion": "v1",
                "resourceVersion": "628"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/metrics-server-7557c5798-57b7j to aks-default-20426481-vmss000000",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:14:13Z",
            "lastTimestamp": "2023-12-26T14:14:13Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server-7557c5798-57b7j.17a467393e43961c",
                "namespace": "kube-system",
                "uid": "fcc21294-87d7-4f4d-9473-86ad1333acdd",
                "resourceVersion": "969",
                "creationTimestamp": "2023-12-26T14:14:14Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7557c5798-57b7j",
                "uid": "dcecd09c-152a-45f4-b0ed-36e7150124be",
                "apiVersion": "v1",
                "resourceVersion": "941",
                "fieldPath": "spec.containers{metrics-server-vpa}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.19\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:14Z",
            "lastTimestamp": "2023-12-26T14:14:14Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "metrics-server-7557c5798-57b7j.17a4673948592b6a",
                "namespace": "kube-system",
                "uid": "ad33af82-dda7-4f70-963b-15ac3b6a815a",
                "resourceVersion": "974",
                "creationTimestamp": "2023-12-26T14:14:14Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7557c5798-57b7j",
                "uid": "dcecd09c-152a-45f4-b0ed-36e7150124be",
                "apiVersion": "v1",
                "resourceVersion": "941",
                "fieldPath": "spec.containers{metrics-server-vpa}"
            },
            "reason": "Created",
            "message": "Created container metrics-server-vpa",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:14Z",
            "lastTimestamp": "2023-12-26T14:14:14Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "metrics-server-7557c5798-57b7j.17a4673960496e69",
                "namespace": "kube-system",
                "uid": "8a3fe115-0fbb-44e3-a246-398506075608",
                "resourceVersion": "979",
                "creationTimestamp": "2023-12-26T14:14:15Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7557c5798-57b7j",
                "uid": "dcecd09c-152a-45f4-b0ed-36e7150124be",
                "apiVersion": "v1",
                "resourceVersion": "941",
                "fieldPath": "spec.containers{metrics-server-vpa}"
            },
            "reason": "Started",
            "message": "Started container metrics-server-vpa",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:15Z",
            "lastTimestamp": "2023-12-26T14:14:15Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "metrics-server-7557c5798-57b7j.17a46739605aedac",
                "namespace": "kube-system",
                "uid": "3d9144bf-685f-4936-bce8-c19adc2c6d30",
                "resourceVersion": "980",
                "creationTimestamp": "2023-12-26T14:14:15Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7557c5798-57b7j",
                "uid": "dcecd09c-152a-45f4-b0ed-36e7150124be",
                "apiVersion": "v1",
                "resourceVersion": "941",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:15Z",
            "lastTimestamp": "2023-12-26T14:14:15Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "metrics-server-7557c5798-57b7j.17a46739780bc2e6",
                "namespace": "kube-system",
                "uid": "efccfba3-02f0-43df-aa9a-36df06d09194",
                "resourceVersion": "996",
                "creationTimestamp": "2023-12-26T14:14:15Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7557c5798-57b7j",
                "uid": "dcecd09c-152a-45f4-b0ed-36e7150124be",
                "apiVersion": "v1",
                "resourceVersion": "941",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Created",
            "message": "Created container metrics-server",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:15Z",
            "lastTimestamp": "2023-12-26T14:14:15Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "metrics-server-7557c5798-57b7j.17a4673980ca21e7",
                "namespace": "kube-system",
                "uid": "427aa0fb-60fe-4c46-9635-b01f869080b4",
                "resourceVersion": "998",
                "creationTimestamp": "2023-12-26T14:14:15Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7557c5798-57b7j",
                "uid": "dcecd09c-152a-45f4-b0ed-36e7150124be",
                "apiVersion": "v1",
                "resourceVersion": "941",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Started",
            "message": "Started container metrics-server",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:15Z",
            "lastTimestamp": "2023-12-26T14:14:15Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "metrics-server-7557c5798-57b7j.17a4674b87ffc4e2",
                "namespace": "kube-system",
                "uid": "2b237974-2732-4e7d-8fe1-ba1574409646",
                "resourceVersion": "1435",
                "creationTimestamp": "2023-12-26T14:15:33Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7557c5798-57b7j",
                "uid": "dcecd09c-152a-45f4-b0ed-36e7150124be",
                "apiVersion": "v1",
                "resourceVersion": "941",
                "fieldPath": "spec.containers{metrics-server-vpa}"
            },
            "reason": "Killing",
            "message": "Stopping container metrics-server-vpa",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:15:33Z",
            "lastTimestamp": "2023-12-26T14:15:33Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "metrics-server-7557c5798-57b7j.17a4674b8800e1a5",
                "namespace": "kube-system",
                "uid": "bf6cd104-59b5-44e7-8c40-9aa3568513dd",
                "resourceVersion": "1440",
                "creationTimestamp": "2023-12-26T14:15:33Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7557c5798-57b7j",
                "uid": "dcecd09c-152a-45f4-b0ed-36e7150124be",
                "apiVersion": "v1",
                "resourceVersion": "941",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Killing",
            "message": "Stopping container metrics-server",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:15:33Z",
            "lastTimestamp": "2023-12-26T14:15:33Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "metrics-server-7557c5798-57b7j.17a4674b970fcd1c",
                "namespace": "kube-system",
                "uid": "9b05c834-5c86-4621-b0db-824c8a83e0d0",
                "resourceVersion": "1450",
                "creationTimestamp": "2023-12-26T14:15:33Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7557c5798-57b7j",
                "uid": "dcecd09c-152a-45f4-b0ed-36e7150124be",
                "apiVersion": "v1",
                "resourceVersion": "941",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Unhealthy",
            "message": "Readiness probe failed: Get \"https://10.244.0.4:4443/readyz\": dial tcp 10.244.0.4:4443: connect: connection refused",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:15:33Z",
            "lastTimestamp": "2023-12-26T14:15:33Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "metrics-server-7557c5798-j77sp.17a4672e8e66f094",
                "namespace": "kube-system",
                "uid": "9431e3d0-57b7-46ec-8e41-76e1cbae9f5d",
                "resourceVersion": "535",
                "creationTimestamp": "2023-12-26T14:13:28Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7557c5798-j77sp",
                "uid": "50348272-f1ae-44e6-b091-bd85deb71746",
                "apiVersion": "v1",
                "resourceVersion": "531"
            },
            "reason": "FailedScheduling",
            "message": "no nodes available to schedule pods",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:13:28Z",
            "lastTimestamp": "2023-12-26T14:13:28Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server-7557c5798-j77sp.17a4672fa6c7c5f7",
                "namespace": "kube-system",
                "uid": "6dc2e99d-7159-45d1-b2c6-79d9c938e8c0",
                "resourceVersion": "625",
                "creationTimestamp": "2023-12-26T14:13:33Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7557c5798-j77sp",
                "uid": "50348272-f1ae-44e6-b091-bd85deb71746",
                "apiVersion": "v1",
                "resourceVersion": "536"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.cloudprovider.kubernetes.io/uninitialized: true}. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling..",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:13:33Z",
            "lastTimestamp": "2023-12-26T14:13:33Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server-7557c5798-j77sp.17a46738e2b0c4c3",
                "namespace": "kube-system",
                "uid": "9632bb8a-c73b-4ee6-a580-ce0180c66056",
                "resourceVersion": "946",
                "creationTimestamp": "2023-12-26T14:14:13Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7557c5798-j77sp",
                "uid": "50348272-f1ae-44e6-b091-bd85deb71746",
                "apiVersion": "v1",
                "resourceVersion": "626"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/metrics-server-7557c5798-j77sp to aks-default-20426481-vmss000000",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:14:13Z",
            "lastTimestamp": "2023-12-26T14:14:13Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server-7557c5798-j77sp.17a467393cc0c87e",
                "namespace": "kube-system",
                "uid": "bd6ee401-d837-49db-b248-8d11648640af",
                "resourceVersion": "968",
                "creationTimestamp": "2023-12-26T14:14:14Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7557c5798-j77sp",
                "uid": "50348272-f1ae-44e6-b091-bd85deb71746",
                "apiVersion": "v1",
                "resourceVersion": "940",
                "fieldPath": "spec.containers{metrics-server-vpa}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.19\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:14Z",
            "lastTimestamp": "2023-12-26T14:14:14Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "metrics-server-7557c5798-j77sp.17a4673947642f18",
                "namespace": "kube-system",
                "uid": "a9614ac5-de75-4c49-b3f1-3ab2dcb8ea82",
                "resourceVersion": "973",
                "creationTimestamp": "2023-12-26T14:14:14Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7557c5798-j77sp",
                "uid": "50348272-f1ae-44e6-b091-bd85deb71746",
                "apiVersion": "v1",
                "resourceVersion": "940",
                "fieldPath": "spec.containers{metrics-server-vpa}"
            },
            "reason": "Created",
            "message": "Created container metrics-server-vpa",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:14Z",
            "lastTimestamp": "2023-12-26T14:14:14Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "metrics-server-7557c5798-j77sp.17a4673960647c87",
                "namespace": "kube-system",
                "uid": "1503730b-df5f-4758-8e2b-99942a1701f2",
                "resourceVersion": "981",
                "creationTimestamp": "2023-12-26T14:14:15Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7557c5798-j77sp",
                "uid": "50348272-f1ae-44e6-b091-bd85deb71746",
                "apiVersion": "v1",
                "resourceVersion": "940",
                "fieldPath": "spec.containers{metrics-server-vpa}"
            },
            "reason": "Started",
            "message": "Started container metrics-server-vpa",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:15Z",
            "lastTimestamp": "2023-12-26T14:14:15Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "metrics-server-7557c5798-j77sp.17a46739606c0c0f",
                "namespace": "kube-system",
                "uid": "41fa5545-619c-4328-9780-8109a0c092f3",
                "resourceVersion": "982",
                "creationTimestamp": "2023-12-26T14:14:15Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7557c5798-j77sp",
                "uid": "50348272-f1ae-44e6-b091-bd85deb71746",
                "apiVersion": "v1",
                "resourceVersion": "940",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:15Z",
            "lastTimestamp": "2023-12-26T14:14:15Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "metrics-server-7557c5798-j77sp.17a46739750d4f7e",
                "namespace": "kube-system",
                "uid": "6a395a7f-b337-44a9-b11e-fa765621cff7",
                "resourceVersion": "992",
                "creationTimestamp": "2023-12-26T14:14:15Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7557c5798-j77sp",
                "uid": "50348272-f1ae-44e6-b091-bd85deb71746",
                "apiVersion": "v1",
                "resourceVersion": "940",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Created",
            "message": "Created container metrics-server",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:15Z",
            "lastTimestamp": "2023-12-26T14:14:15Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "metrics-server-7557c5798-j77sp.17a467397de039d5",
                "namespace": "kube-system",
                "uid": "5fc7d245-3b53-4f19-9254-fa1bad6a6aa2",
                "resourceVersion": "997",
                "creationTimestamp": "2023-12-26T14:14:15Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7557c5798-j77sp",
                "uid": "50348272-f1ae-44e6-b091-bd85deb71746",
                "apiVersion": "v1",
                "resourceVersion": "940",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Started",
            "message": "Started container metrics-server",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:15Z",
            "lastTimestamp": "2023-12-26T14:14:15Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "metrics-server-7557c5798-j77sp.17a4673b22796fe0",
                "namespace": "kube-system",
                "uid": "c5a2530b-3ada-47c7-845d-e7eec047ccdc",
                "resourceVersion": "1087",
                "creationTimestamp": "2023-12-26T14:14:22Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7557c5798-j77sp",
                "uid": "50348272-f1ae-44e6-b091-bd85deb71746",
                "apiVersion": "v1",
                "resourceVersion": "940",
                "fieldPath": "spec.containers{metrics-server-vpa}"
            },
            "reason": "Killing",
            "message": "Stopping container metrics-server-vpa",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:22Z",
            "lastTimestamp": "2023-12-26T14:14:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "metrics-server-7557c5798-j77sp.17a4673b227ca686",
                "namespace": "kube-system",
                "uid": "4663c844-5ba0-4804-b49e-e709c9a4ef74",
                "resourceVersion": "1091",
                "creationTimestamp": "2023-12-26T14:14:22Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-7557c5798-j77sp",
                "uid": "50348272-f1ae-44e6-b091-bd85deb71746",
                "apiVersion": "v1",
                "resourceVersion": "940",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Killing",
            "message": "Stopping container metrics-server",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:14:22Z",
            "lastTimestamp": "2023-12-26T14:14:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "metrics-server-7557c5798.17a4672e8e6a4eb5",
                "namespace": "kube-system",
                "uid": "f9968573-66ab-47de-bc2a-254958fa60d0",
                "resourceVersion": "533",
                "creationTimestamp": "2023-12-26T14:13:28Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "metrics-server-7557c5798",
                "uid": "7cad96d5-3ad1-4fdf-a2df-c8139da764d8",
                "apiVersion": "apps/v1",
                "resourceVersion": "526"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: metrics-server-7557c5798-j77sp",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-12-26T14:13:28Z",
            "lastTimestamp": "2023-12-26T14:13:28Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "replicaset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server-7557c5798.17a4672e8f95d8a6",
                "namespace": "kube-system",
                "uid": "b2b296ad-7d5f-4eab-9942-b8bb4968a19a",
                "resourceVersion": "540",
                "creationTimestamp": "2023-12-26T14:13:28Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "metrics-server-7557c5798",
                "uid": "7cad96d5-3ad1-4fdf-a2df-c8139da764d8",
                "apiVersion": "apps/v1",
                "resourceVersion": "526"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: metrics-server-7557c5798-57b7j",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-12-26T14:13:28Z",
            "lastTimestamp": "2023-12-26T14:13:28Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "replicaset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server-7557c5798.17a4673b2274b602",
                "namespace": "kube-system",
                "uid": "107d356e-ef52-4da5-af4c-98612ffcc1c6",
                "resourceVersion": "1089",
                "creationTimestamp": "2023-12-26T14:14:22Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "metrics-server-7557c5798",
                "uid": "7cad96d5-3ad1-4fdf-a2df-c8139da764d8",
                "apiVersion": "apps/v1",
                "resourceVersion": "1079"
            },
            "reason": "SuccessfulDelete",
            "message": "Deleted pod: metrics-server-7557c5798-j77sp",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-12-26T14:14:22Z",
            "lastTimestamp": "2023-12-26T14:14:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "replicaset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server-7557c5798.17a4674b87adb670",
                "namespace": "kube-system",
                "uid": "93bc754b-7cff-4365-9bf6-259b6d2ddf3d",
                "resourceVersion": "1433",
                "creationTimestamp": "2023-12-26T14:15:33Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "metrics-server-7557c5798",
                "uid": "7cad96d5-3ad1-4fdf-a2df-c8139da764d8",
                "apiVersion": "apps/v1",
                "resourceVersion": "1428"
            },
            "reason": "SuccessfulDelete",
            "message": "Deleted pod: metrics-server-7557c5798-57b7j",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-12-26T14:15:33Z",
            "lastTimestamp": "2023-12-26T14:15:33Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "replicaset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server.17a4672e8d59815b",
                "namespace": "kube-system",
                "uid": "62fa74bf-5f6c-4695-9821-43ee6ba950c5",
                "resourceVersion": "529",
                "creationTimestamp": "2023-12-26T14:13:28Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "kube-system",
                "name": "metrics-server",
                "uid": "67d9d0b7-16c1-4f6c-8ed2-580f188848b6",
                "apiVersion": "apps/v1",
                "resourceVersion": "525"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled up replica set metrics-server-7557c5798 to 2",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2023-12-26T14:13:28Z",
            "lastTimestamp": "2023-12-26T14:13:28Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "deployment-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server.17a4673b1f73d3cd",
                "namespace": "kube-system",
                "uid": "60448fb9-211b-4231-9e8e-696eb6185a58",
                "resourceVersion": "1074",
                "creationTimestamp": "2023-12-26T14:14:22Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "kube-system",
                "name": "metrics-server",
                "uid": "67d9d0b7-16c1-4f6c-8ed2-580f188848b6",
                "apiVersion": "apps/v1",
                "resourceVersion": "1072"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled up replica set metrics-server-5955767688 to 1",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2023-12-26T14:14:22Z",
            "lastTimestamp": "2023-12-26T14:14:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "deployment-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server.17a4673b215646a2",
                "namespace": "kube-system",
                "uid": "109e1bf3-dc66-4a50-af2b-fe2f6514596a",
                "resourceVersion": "1083",
                "creationTimestamp": "2023-12-26T14:14:22Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "kube-system",
                "name": "metrics-server",
                "uid": "67d9d0b7-16c1-4f6c-8ed2-580f188848b6",
                "apiVersion": "apps/v1",
                "resourceVersion": "1072"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled down replica set metrics-server-7557c5798 to 1 from 2",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2023-12-26T14:14:22Z",
            "lastTimestamp": "2023-12-26T14:14:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "deployment-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server.17a4673b263f2419",
                "namespace": "kube-system",
                "uid": "68fe3874-b0df-42f3-aeea-8e94ac8047c3",
                "resourceVersion": "1095",
                "creationTimestamp": "2023-12-26T14:14:22Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "kube-system",
                "name": "metrics-server",
                "uid": "67d9d0b7-16c1-4f6c-8ed2-580f188848b6",
                "apiVersion": "apps/v1",
                "resourceVersion": "1075"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled up replica set metrics-server-5955767688 to 2 from 1",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2023-12-26T14:14:22Z",
            "lastTimestamp": "2023-12-26T14:14:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "deployment-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server.17a4674b86cd402a",
                "namespace": "kube-system",
                "uid": "f8bf93a7-4263-460f-9bae-ea5fdcb30a35",
                "resourceVersion": "1430",
                "creationTimestamp": "2023-12-26T14:15:33Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "kube-system",
                "name": "metrics-server",
                "uid": "67d9d0b7-16c1-4f6c-8ed2-580f188848b6",
                "apiVersion": "apps/v1",
                "resourceVersion": "1382"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled down replica set metrics-server-7557c5798 to 0 from 1",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2023-12-26T14:15:33Z",
            "lastTimestamp": "2023-12-26T14:15:33Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "deployment-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "snapshot-controller-leader.17a46729c8cbbf3d",
                "namespace": "kube-system",
                "uid": "0c2c5bb2-78ae-4faa-b017-5a42a9dd8ede",
                "resourceVersion": "274",
                "creationTimestamp": "2023-12-26T14:13:08Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "snapshot-controller-leader",
                "uid": "d433ce58-24a8-460f-a943-1fa44bfa1657",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "273"
            },
            "reason": "LeaderElection",
            "message": "csi-snapshot-controller-68474f8476-rpnmv became leader",
            "source": {
                "component": "snapshot-controller-leader/csi-snapshot-controller-68474f8476-rpnmv"
            },
            "firstTimestamp": "2023-12-26T14:13:08Z",
            "lastTimestamp": "2023-12-26T14:13:08Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "3734"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "3736"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-dns",
                "namespace": "kube-system",
                "uid": "b95846dd-9430-422e-93cd-1f4701a57a63",
                "resourceVersion": "444",
                "creationTimestamp": "2023-12-26T14:13:27Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"kube-dns\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"CoreDNS\"},\"name\":\"kube-dns\",\"namespace\":\"kube-system\"},\"spec\":{\"clusterIP\":\"10.0.0.10\",\"ports\":[{\"name\":\"dns\",\"port\":53,\"protocol\":\"UDP\"},{\"name\":\"dns-tcp\",\"port\":53,\"protocol\":\"TCP\"}],\"selector\":{\"k8s-app\":\"kube-dns\"}}}\n"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "dns",
                        "protocol": "UDP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "dns-tcp",
                        "protocol": "TCP",
                        "port": 53,
                        "targetPort": 53
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "clusterIP": "10.0.0.10",
                "clusterIPs": [
                    "10.0.0.10"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "metrics-server",
                "namespace": "kube-system",
                "uid": "7fbb321d-9453-49a3-bc27-ae6595db514c",
                "resourceVersion": "522",
                "creationTimestamp": "2023-12-26T14:13:28Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "Metrics-server"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"Metrics-server\"},\"name\":\"metrics-server\",\"namespace\":\"kube-system\"},\"spec\":{\"ports\":[{\"port\":443,\"protocol\":\"TCP\",\"targetPort\":\"ms-https\"}],\"selector\":{\"k8s-app\":\"metrics-server\"}}}\n"
                }
            },
            "spec": {
                "ports": [
                    {
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": "ms-https"
                    }
                ],
                "selector": {
                    "k8s-app": "metrics-server"
                },
                "clusterIP": "10.0.159.48",
                "clusterIPs": [
                    "10.0.159.48"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "3739"
    },
    "items": [
        {
            "metadata": {
                "name": "azure-ip-masq-agent",
                "namespace": "kube-system",
                "uid": "5cd5884d-2818-4763-b117-754e9ab3be97",
                "resourceVersion": "1480",
                "generation": 1,
                "creationTimestamp": "2023-12-26T14:13:27Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "component": "azure-ip-masq-agent",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true",
                    "tier": "node"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"component\":\"azure-ip-masq-agent\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\",\"tier\":\"node\"},\"name\":\"azure-ip-masq-agent\",\"namespace\":\"kube-system\"},\"spec\":{\"minReadySeconds\":60,\"selector\":{\"matchLabels\":{\"k8s-app\":\"azure-ip-masq-agent\",\"tier\":\"node\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"azure-ip-masq-agent\",\"kubernetes.azure.com/managedby\":\"aks\",\"tier\":\"node\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}}},\"automountServiceAccountToken\":false,\"containers\":[{\"args\":[\"--v=2\",\"--resync-interval=60\"],\"image\":\"mcr.microsoft.com/aks/ip-masq-agent-v2:v0.1.8\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"azure-ip-masq-agent\",\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"250Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"}},\"securityContext\":{\"capabilities\":{\"add\":[\"NET_ADMIN\",\"NET_RAW\"]}},\"volumeMounts\":[{\"mountPath\":\"/etc/config\",\"name\":\"azure-ip-masq-agent-config-volume\"},{\"mountPath\":\"/run/xtables.lock\",\"name\":\"iptableslock\"}]}],\"hostNetwork\":true,\"priorityClassName\":\"system-node-critical\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}],\"volumes\":[{\"name\":\"azure-ip-masq-agent-config-volume\",\"projected\":{\"sources\":[{\"configMap\":{\"items\":[{\"key\":\"ip-masq-agent\",\"mode\":444,\"path\":\"ip-masq-agent\"}],\"name\":\"azure-ip-masq-agent-config\",\"optional\":true}},{\"configMap\":{\"items\":[{\"key\":\"ip-masq-agent-reconciled\",\"mode\":444,\"path\":\"ip-masq-agent-reconciled\"}],\"name\":\"azure-ip-masq-agent-config-reconciled\",\"optional\":true}}]}},{\"hostPath\":{\"path\":\"/run/xtables.lock\",\"type\":\"FileOrCreate\"},\"name\":\"iptableslock\"}]}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":\"25%\"},\"type\":\"RollingUpdate\"}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "azure-ip-masq-agent",
                        "tier": "node"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "azure-ip-masq-agent",
                            "kubernetes.azure.com/managedby": "aks",
                            "tier": "node"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "azure-ip-masq-agent-config-volume",
                                "projected": {
                                    "sources": [
                                        {
                                            "configMap": {
                                                "name": "azure-ip-masq-agent-config",
                                                "items": [
                                                    {
                                                        "key": "ip-masq-agent",
                                                        "path": "ip-masq-agent",
                                                        "mode": 444
                                                    }
                                                ],
                                                "optional": true
                                            }
                                        },
                                        {
                                            "configMap": {
                                                "name": "azure-ip-masq-agent-config-reconciled",
                                                "items": [
                                                    {
                                                        "key": "ip-masq-agent-reconciled",
                                                        "path": "ip-masq-agent-reconciled",
                                                        "mode": 444
                                                    }
                                                ],
                                                "optional": true
                                            }
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "iptableslock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "azure-ip-masq-agent",
                                "image": "mcr.microsoft.com/aks/ip-masq-agent-v2:v0.1.8",
                                "args": [
                                    "--v=2",
                                    "--resync-interval=60"
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "500m",
                                        "memory": "250Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "50Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "azure-ip-masq-agent-config-volume",
                                        "mountPath": "/etc/config"
                                    },
                                    {
                                        "name": "iptableslock",
                                        "mountPath": "/run/xtables.lock"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_ADMIN",
                                            "NET_RAW"
                                        ]
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "automountServiceAccountToken": false,
                        "hostNetwork": true,
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": 0
                    }
                },
                "minReadySeconds": 60,
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 2,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 2,
                "numberReady": 2,
                "observedGeneration": 1,
                "updatedNumberScheduled": 2,
                "numberAvailable": 2
            }
        },
        {
            "metadata": {
                "name": "cloud-node-manager",
                "namespace": "kube-system",
                "uid": "28294b37-4b1f-4b66-99c7-d3448025fcec",
                "resourceVersion": "788",
                "generation": 1,
                "creationTimestamp": "2023-12-26T14:13:27Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "cloud-node-manager",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"cloud-node-manager\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"cloud-node-manager\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"cloud-node-manager\"}},\"template\":{\"metadata\":{\"annotations\":{\"cluster-autoscaler.kubernetes.io/daemonset-pod\":\"true\"},\"labels\":{\"k8s-app\":\"cloud-node-manager\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}}},\"containers\":[{\"command\":[\"cloud-node-manager\",\"--node-name=$(NODE_NAME)\",\"--wait-routes\",\"--enable-deprecated-beta-topology-labels=true\"],\"env\":[{\"name\":\"NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.27.8\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"cloud-node-manager\",\"resources\":{\"limits\":{\"memory\":\"512Mi\"},\"requests\":{\"cpu\":\"50m\",\"memory\":\"50Mi\"}}}],\"hostNetwork\":true,\"priorityClassName\":\"system-node-critical\",\"securityContext\":{\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"cloud-node-manager\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\",\"operator\":\"Equal\",\"value\":\"true\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}]}}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "cloud-node-manager"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "cloud-node-manager",
                            "kubernetes.azure.com/managedby": "aks"
                        },
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/daemonset-pod": "true"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "cloud-node-manager",
                                "image": "mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.27.8",
                                "command": [
                                    "cloud-node-manager",
                                    "--node-name=$(NODE_NAME)",
                                    "--wait-routes",
                                    "--enable-deprecated-beta-topology-labels=true"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "512Mi"
                                    },
                                    "requests": {
                                        "cpu": "50m",
                                        "memory": "50Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "cloud-node-manager",
                        "serviceAccount": "cloud-node-manager",
                        "hostNetwork": true,
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "operator": "Equal",
                                "value": "true",
                                "effect": "NoSchedule"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 2,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 2,
                "numberReady": 2,
                "observedGeneration": 1,
                "updatedNumberScheduled": 2,
                "numberAvailable": 2
            }
        },
        {
            "metadata": {
                "name": "cloud-node-manager-windows",
                "namespace": "kube-system",
                "uid": "d55d328b-2ce6-4ddd-bedb-26f55da05222",
                "resourceVersion": "412",
                "generation": 1,
                "creationTimestamp": "2023-12-26T14:13:27Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "cloud-node-manager",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"cloud-node-manager\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"cloud-node-manager-windows\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"cloud-node-manager-windows\"}},\"template\":{\"metadata\":{\"annotations\":{\"cluster-autoscaler.kubernetes.io/daemonset-pod\":\"true\"},\"labels\":{\"k8s-app\":\"cloud-node-manager-windows\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"windows\"]}]}]}}},\"containers\":[{\"command\":[\"/cloud-node-manager.exe\",\"--node-name=$(NODE_NAME)\"],\"env\":[{\"name\":\"NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.27.8\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"cloud-node-manager\",\"resources\":{\"limits\":{\"memory\":\"512Mi\"},\"requests\":{\"cpu\":\"50m\",\"memory\":\"50Mi\"}}}],\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"cloud-node-manager\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\",\"operator\":\"Equal\",\"value\":\"true\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}]}}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "cloud-node-manager-windows"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "cloud-node-manager-windows",
                            "kubernetes.azure.com/managedby": "aks"
                        },
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/daemonset-pod": "true"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "cloud-node-manager",
                                "image": "mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.27.8",
                                "command": [
                                    "/cloud-node-manager.exe",
                                    "--node-name=$(NODE_NAME)"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "512Mi"
                                    },
                                    "requests": {
                                        "cpu": "50m",
                                        "memory": "50Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "cloud-node-manager",
                        "serviceAccount": "cloud-node-manager",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "windows"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "operator": "Equal",
                                "value": "true",
                                "effect": "NoSchedule"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 0,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 0,
                "numberReady": 0,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node",
                "namespace": "kube-system",
                "uid": "42a9f65b-f9db-45d5-83b6-c9c10f2b2089",
                "resourceVersion": "820",
                "generation": 1,
                "creationTimestamp": "2023-12-26T14:13:28Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"csi-azuredisk-node\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"csi-azuredisk-node\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"csi-azuredisk-node\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}}},\"containers\":[{\"args\":[\"--csi-address=/csi/csi.sock\",\"--probe-timeout=3s\",\"--health-port=29603\",\"--v=2\"],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.10.0\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"liveness-probe\",\"resources\":{\"limits\":{\"memory\":\"100Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"20Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/csi\",\"name\":\"socket-dir\"}]},{\"args\":[\"--csi-address=$(ADDRESS)\",\"--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)\",\"--v=2\"],\"env\":[{\"name\":\"ADDRESS\",\"value\":\"/csi/csi.sock\"},{\"name\":\"DRIVER_REG_SOCK_PATH\",\"value\":\"/var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock\"}],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.8.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"exec\":{\"command\":[\"/csi-node-driver-registrar\",\"--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)\",\"--mode=kubelet-registration-probe\"]},\"initialDelaySeconds\":60,\"timeoutSeconds\":30},\"name\":\"node-driver-registrar\",\"resources\":{\"limits\":{\"memory\":\"100Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"20Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/csi\",\"name\":\"socket-dir\"},{\"mountPath\":\"/registration\",\"name\":\"registration-dir\"}]},{\"args\":[\"--v=5\",\"--endpoint=$(CSI_ENDPOINT)\",\"--nodeid=$(KUBE_NODE_NAME)\",\"--enable-perf-optimization=true\"],\"env\":[{\"name\":\"AZURE_CREDENTIAL_FILE\",\"value\":\"/etc/kubernetes/azure.json\"},{\"name\":\"CSI_ENDPOINT\",\"value\":\"unix:///csi/csi.sock\"},{\"name\":\"KUBE_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.28.4\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/healthz\",\"port\":\"healthz\"},\"initialDelaySeconds\":30,\"periodSeconds\":30,\"timeoutSeconds\":10},\"name\":\"azuredisk\",\"ports\":[{\"containerPort\":29603,\"name\":\"healthz\",\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"20Mi\"}},\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/csi\",\"name\":\"socket-dir\"},{\"mountPath\":\"/var/lib/kubelet/\",\"mountPropagation\":\"Bidirectional\",\"name\":\"mountpoint-dir\"},{\"mountPath\":\"/etc/kubernetes/\",\"name\":\"azure-cred\"},{\"mountPath\":\"/dev\",\"name\":\"device-dir\"},{\"mountPath\":\"/sys/bus/scsi/devices\",\"name\":\"sys-devices-dir\"},{\"mountPath\":\"/sys/class/scsi_host/\",\"name\":\"scsi-host-dir\"}]}],\"dnsPolicy\":\"Default\",\"hostNetwork\":true,\"priorityClassName\":\"system-node-critical\",\"securityContext\":{\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"csi-azuredisk-node-sa\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/var/lib/kubelet/plugins/disk.csi.azure.com\",\"type\":\"DirectoryOrCreate\"},\"name\":\"socket-dir\"},{\"hostPath\":{\"path\":\"/var/lib/kubelet/\",\"type\":\"DirectoryOrCreate\"},\"name\":\"mountpoint-dir\"},{\"hostPath\":{\"path\":\"/var/lib/kubelet/plugins_registry/\",\"type\":\"DirectoryOrCreate\"},\"name\":\"registration-dir\"},{\"hostPath\":{\"path\":\"/etc/kubernetes/\",\"type\":\"DirectoryOrCreate\"},\"name\":\"azure-cred\"},{\"hostPath\":{\"path\":\"/dev\",\"type\":\"Directory\"},\"name\":\"device-dir\"},{\"hostPath\":{\"path\":\"/sys/bus/scsi/devices\",\"type\":\"Directory\"},\"name\":\"sys-devices-dir\"},{\"hostPath\":{\"path\":\"/sys/class/scsi_host/\",\"type\":\"Directory\"},\"name\":\"scsi-host-dir\"}]}}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "app": "csi-azuredisk-node"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "csi-azuredisk-node",
                            "kubernetes.azure.com/managedby": "aks"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "socket-dir",
                                "hostPath": {
                                    "path": "/var/lib/kubelet/plugins/disk.csi.azure.com",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "mountpoint-dir",
                                "hostPath": {
                                    "path": "/var/lib/kubelet/",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "registration-dir",
                                "hostPath": {
                                    "path": "/var/lib/kubelet/plugins_registry/",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "azure-cred",
                                "hostPath": {
                                    "path": "/etc/kubernetes/",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "device-dir",
                                "hostPath": {
                                    "path": "/dev",
                                    "type": "Directory"
                                }
                            },
                            {
                                "name": "sys-devices-dir",
                                "hostPath": {
                                    "path": "/sys/bus/scsi/devices",
                                    "type": "Directory"
                                }
                            },
                            {
                                "name": "scsi-host-dir",
                                "hostPath": {
                                    "path": "/sys/class/scsi_host/",
                                    "type": "Directory"
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "liveness-probe",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.10.0",
                                "args": [
                                    "--csi-address=/csi/csi.sock",
                                    "--probe-timeout=3s",
                                    "--health-port=29603",
                                    "--v=2"
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "100Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "socket-dir",
                                        "mountPath": "/csi"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            },
                            {
                                "name": "node-driver-registrar",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.8.0",
                                "args": [
                                    "--csi-address=$(ADDRESS)",
                                    "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                                    "--v=2"
                                ],
                                "env": [
                                    {
                                        "name": "ADDRESS",
                                        "value": "/csi/csi.sock"
                                    },
                                    {
                                        "name": "DRIVER_REG_SOCK_PATH",
                                        "value": "/var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "100Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "socket-dir",
                                        "mountPath": "/csi"
                                    },
                                    {
                                        "name": "registration-dir",
                                        "mountPath": "/registration"
                                    }
                                ],
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/csi-node-driver-registrar",
                                            "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                                            "--mode=kubelet-registration-probe"
                                        ]
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 30,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            },
                            {
                                "name": "azuredisk",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.28.4",
                                "args": [
                                    "--v=5",
                                    "--endpoint=$(CSI_ENDPOINT)",
                                    "--nodeid=$(KUBE_NODE_NAME)",
                                    "--enable-perf-optimization=true"
                                ],
                                "ports": [
                                    {
                                        "name": "healthz",
                                        "hostPort": 29603,
                                        "containerPort": 29603,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "AZURE_CREDENTIAL_FILE",
                                        "value": "/etc/kubernetes/azure.json"
                                    },
                                    {
                                        "name": "CSI_ENDPOINT",
                                        "value": "unix:///csi/csi.sock"
                                    },
                                    {
                                        "name": "KUBE_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "200Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "socket-dir",
                                        "mountPath": "/csi"
                                    },
                                    {
                                        "name": "mountpoint-dir",
                                        "mountPath": "/var/lib/kubelet/",
                                        "mountPropagation": "Bidirectional"
                                    },
                                    {
                                        "name": "azure-cred",
                                        "mountPath": "/etc/kubernetes/"
                                    },
                                    {
                                        "name": "device-dir",
                                        "mountPath": "/dev"
                                    },
                                    {
                                        "name": "sys-devices-dir",
                                        "mountPath": "/sys/bus/scsi/devices"
                                    },
                                    {
                                        "name": "scsi-host-dir",
                                        "mountPath": "/sys/class/scsi_host/"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "healthz",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "csi-azuredisk-node-sa",
                        "serviceAccount": "csi-azuredisk-node-sa",
                        "hostNetwork": true,
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 2,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 2,
                "numberReady": 2,
                "observedGeneration": 1,
                "updatedNumberScheduled": 2,
                "numberAvailable": 2
            }
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-win",
                "namespace": "kube-system",
                "uid": "5ac6fb61-38f8-43c5-8574-ac9227ec47a6",
                "resourceVersion": "477",
                "generation": 1,
                "creationTimestamp": "2023-12-26T14:13:28Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"csi-azuredisk-node-win\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"csi-azuredisk-node-win\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"csi-azuredisk-node-win\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"windows\"]}]}]}}},\"containers\":[{\"args\":[\"--v=2\",\"--csi-address=$(CSI_ENDPOINT)\",\"--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)\",\"--plugin-registration-path=$(PLUGIN_REG_DIR)\"],\"command\":[\"csi-node-driver-registrar.exe\"],\"env\":[{\"name\":\"CSI_ENDPOINT\",\"value\":\"unix://C:\\\\\\\\var\\\\\\\\lib\\\\\\\\kubelet\\\\\\\\plugins\\\\\\\\disk.csi.azure.com\\\\\\\\csi.sock\"},{\"name\":\"DRIVER_REG_SOCK_PATH\",\"value\":\"C:\\\\\\\\var\\\\\\\\lib\\\\\\\\kubelet\\\\\\\\plugins\\\\\\\\disk.csi.azure.com\\\\\\\\csi.sock\"},{\"name\":\"PLUGIN_REG_DIR\",\"value\":\"C:\\\\\\\\var\\\\\\\\lib\\\\\\\\kubelet\\\\\\\\plugins_registry\\\\\\\\\"},{\"name\":\"KUBE_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.8.0\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"node-driver-registrar\",\"resources\":{\"limits\":{\"memory\":\"150Mi\"},\"requests\":{\"cpu\":\"40m\",\"memory\":\"40Mi\"}}},{\"args\":[\"--v=5\",\"--endpoint=$(CSI_ENDPOINT)\",\"--nodeid=$(KUBE_NODE_NAME)\",\"--enable-windows-host-process=true\"],\"command\":[\"azurediskplugin.exe\"],\"env\":[{\"name\":\"AZURE_CREDENTIAL_FILE\",\"value\":\"C:\\\\k\\\\azure.json\"},{\"name\":\"CSI_ENDPOINT\",\"value\":\"unix://C:\\\\\\\\var\\\\\\\\lib\\\\\\\\kubelet\\\\\\\\plugins\\\\\\\\disk.csi.azure.com\\\\\\\\csi.sock\"},{\"name\":\"KUBE_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.28.4.1-windows-hp\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"azuredisk\"}],\"hostNetwork\":true,\"initContainers\":[{\"command\":[\"powershell.exe\",\"-c\",\"New-Item -ItemType Directory -Path C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\disk.csi.azure.com\\\\ -Force\"],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.28.4.1-windows-hp\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"init\"}],\"priorityClassName\":\"system-node-critical\",\"securityContext\":{\"seccompProfile\":{\"type\":\"RuntimeDefault\"},\"windowsOptions\":{\"hostProcess\":true,\"runAsUserName\":\"NT AUTHORITY\\\\SYSTEM\"}},\"serviceAccountName\":\"csi-azuredisk-node-sa\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}]}}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "app": "csi-azuredisk-node-win"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "csi-azuredisk-node-win"
                        }
                    },
                    "spec": {
                        "initContainers": [
                            {
                                "name": "init",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.28.4.1-windows-hp",
                                "command": [
                                    "powershell.exe",
                                    "-c",
                                    "New-Item -ItemType Directory -Path C:\\var\\lib\\kubelet\\plugins\\disk.csi.azure.com\\ -Force"
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "containers": [
                            {
                                "name": "node-driver-registrar",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.8.0",
                                "command": [
                                    "csi-node-driver-registrar.exe"
                                ],
                                "args": [
                                    "--v=2",
                                    "--csi-address=$(CSI_ENDPOINT)",
                                    "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                                    "--plugin-registration-path=$(PLUGIN_REG_DIR)"
                                ],
                                "env": [
                                    {
                                        "name": "CSI_ENDPOINT",
                                        "value": "unix://C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\disk.csi.azure.com\\\\csi.sock"
                                    },
                                    {
                                        "name": "DRIVER_REG_SOCK_PATH",
                                        "value": "C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\disk.csi.azure.com\\\\csi.sock"
                                    },
                                    {
                                        "name": "PLUGIN_REG_DIR",
                                        "value": "C:\\\\var\\\\lib\\\\kubelet\\\\plugins_registry\\\\"
                                    },
                                    {
                                        "name": "KUBE_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "150Mi"
                                    },
                                    "requests": {
                                        "cpu": "40m",
                                        "memory": "40Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            },
                            {
                                "name": "azuredisk",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.28.4.1-windows-hp",
                                "command": [
                                    "azurediskplugin.exe"
                                ],
                                "args": [
                                    "--v=5",
                                    "--endpoint=$(CSI_ENDPOINT)",
                                    "--nodeid=$(KUBE_NODE_NAME)",
                                    "--enable-windows-host-process=true"
                                ],
                                "env": [
                                    {
                                        "name": "AZURE_CREDENTIAL_FILE",
                                        "value": "C:\\k\\azure.json"
                                    },
                                    {
                                        "name": "CSI_ENDPOINT",
                                        "value": "unix://C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\disk.csi.azure.com\\\\csi.sock"
                                    },
                                    {
                                        "name": "KUBE_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "csi-azuredisk-node-sa",
                        "serviceAccount": "csi-azuredisk-node-sa",
                        "hostNetwork": true,
                        "securityContext": {
                            "windowsOptions": {
                                "runAsUserName": "NT AUTHORITY\\SYSTEM",
                                "hostProcess": true
                            },
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "windows"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 0,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 0,
                "numberReady": 0,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "csi-azurefile-node",
                "namespace": "kube-system",
                "uid": "d928ec23-9d46-4f22-ad5b-f0d24bb5451e",
                "resourceVersion": "822",
                "generation": 1,
                "creationTimestamp": "2023-12-26T14:13:28Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"csi-azurefile-node\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"csi-azurefile-node\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"csi-azurefile-node\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}}},\"containers\":[{\"args\":[\"--csi-address=/csi/csi.sock\",\"--probe-timeout=3s\",\"--health-port=29613\",\"--v=2\"],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.10.0\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"liveness-probe\",\"resources\":{\"limits\":{\"memory\":\"100Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"20Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/csi\",\"name\":\"socket-dir\"}]},{\"args\":[\"--csi-address=$(ADDRESS)\",\"--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)\",\"--v=2\"],\"env\":[{\"name\":\"ADDRESS\",\"value\":\"/csi/csi.sock\"},{\"name\":\"DRIVER_REG_SOCK_PATH\",\"value\":\"/var/lib/kubelet/plugins/file.csi.azure.com/csi.sock\"}],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.8.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"exec\":{\"command\":[\"/csi-node-driver-registrar\",\"--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)\",\"--mode=kubelet-registration-probe\"]},\"initialDelaySeconds\":60,\"timeoutSeconds\":30},\"name\":\"node-driver-registrar\",\"resources\":{\"limits\":{\"memory\":\"100Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"20Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/csi\",\"name\":\"socket-dir\"},{\"mountPath\":\"/registration\",\"name\":\"registration-dir\"}]},{\"args\":[\"--v=5\",\"--endpoint=$(CSI_ENDPOINT)\",\"--nodeid=$(KUBE_NODE_NAME)\",\"--enable-get-volume-stats=true\",\"--mount-permissions=0777\"],\"env\":[{\"name\":\"AZURE_CREDENTIAL_FILE\",\"value\":\"/etc/kubernetes/azure.json\"},{\"name\":\"CSI_ENDPOINT\",\"value\":\"unix:///csi/csi.sock\"},{\"name\":\"KUBE_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.28.6\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/healthz\",\"port\":\"healthz\"},\"initialDelaySeconds\":30,\"periodSeconds\":30,\"timeoutSeconds\":10},\"name\":\"azurefile\",\"ports\":[{\"containerPort\":29613,\"name\":\"healthz\",\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"memory\":\"400Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"20Mi\"}},\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/csi\",\"name\":\"socket-dir\"},{\"mountPath\":\"/var/lib/kubelet/\",\"mountPropagation\":\"Bidirectional\",\"name\":\"mountpoint-dir\"},{\"mountPath\":\"/etc/kubernetes/\",\"name\":\"azure-cred\"},{\"mountPath\":\"/dev\",\"name\":\"device-dir\"}]}],\"dnsPolicy\":\"Default\",\"hostNetwork\":true,\"priorityClassName\":\"system-node-critical\",\"securityContext\":{\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"csi-azurefile-node-sa\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/var/lib/kubelet/plugins/file.csi.azure.com\",\"type\":\"DirectoryOrCreate\"},\"name\":\"socket-dir\"},{\"hostPath\":{\"path\":\"/var/lib/kubelet/\",\"type\":\"DirectoryOrCreate\"},\"name\":\"mountpoint-dir\"},{\"hostPath\":{\"path\":\"/var/lib/kubelet/plugins_registry/\",\"type\":\"DirectoryOrCreate\"},\"name\":\"registration-dir\"},{\"hostPath\":{\"path\":\"/etc/kubernetes/\",\"type\":\"DirectoryOrCreate\"},\"name\":\"azure-cred\"},{\"hostPath\":{\"path\":\"/dev\",\"type\":\"Directory\"},\"name\":\"device-dir\"}]}}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "app": "csi-azurefile-node"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "csi-azurefile-node",
                            "kubernetes.azure.com/managedby": "aks"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "socket-dir",
                                "hostPath": {
                                    "path": "/var/lib/kubelet/plugins/file.csi.azure.com",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "mountpoint-dir",
                                "hostPath": {
                                    "path": "/var/lib/kubelet/",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "registration-dir",
                                "hostPath": {
                                    "path": "/var/lib/kubelet/plugins_registry/",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "azure-cred",
                                "hostPath": {
                                    "path": "/etc/kubernetes/",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "device-dir",
                                "hostPath": {
                                    "path": "/dev",
                                    "type": "Directory"
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "liveness-probe",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.10.0",
                                "args": [
                                    "--csi-address=/csi/csi.sock",
                                    "--probe-timeout=3s",
                                    "--health-port=29613",
                                    "--v=2"
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "100Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "socket-dir",
                                        "mountPath": "/csi"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            },
                            {
                                "name": "node-driver-registrar",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.8.0",
                                "args": [
                                    "--csi-address=$(ADDRESS)",
                                    "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                                    "--v=2"
                                ],
                                "env": [
                                    {
                                        "name": "ADDRESS",
                                        "value": "/csi/csi.sock"
                                    },
                                    {
                                        "name": "DRIVER_REG_SOCK_PATH",
                                        "value": "/var/lib/kubelet/plugins/file.csi.azure.com/csi.sock"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "100Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "socket-dir",
                                        "mountPath": "/csi"
                                    },
                                    {
                                        "name": "registration-dir",
                                        "mountPath": "/registration"
                                    }
                                ],
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/csi-node-driver-registrar",
                                            "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                                            "--mode=kubelet-registration-probe"
                                        ]
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 30,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            },
                            {
                                "name": "azurefile",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.28.6",
                                "args": [
                                    "--v=5",
                                    "--endpoint=$(CSI_ENDPOINT)",
                                    "--nodeid=$(KUBE_NODE_NAME)",
                                    "--enable-get-volume-stats=true",
                                    "--mount-permissions=0777"
                                ],
                                "ports": [
                                    {
                                        "name": "healthz",
                                        "hostPort": 29613,
                                        "containerPort": 29613,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "AZURE_CREDENTIAL_FILE",
                                        "value": "/etc/kubernetes/azure.json"
                                    },
                                    {
                                        "name": "CSI_ENDPOINT",
                                        "value": "unix:///csi/csi.sock"
                                    },
                                    {
                                        "name": "KUBE_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "400Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "socket-dir",
                                        "mountPath": "/csi"
                                    },
                                    {
                                        "name": "mountpoint-dir",
                                        "mountPath": "/var/lib/kubelet/",
                                        "mountPropagation": "Bidirectional"
                                    },
                                    {
                                        "name": "azure-cred",
                                        "mountPath": "/etc/kubernetes/"
                                    },
                                    {
                                        "name": "device-dir",
                                        "mountPath": "/dev"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "healthz",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "csi-azurefile-node-sa",
                        "serviceAccount": "csi-azurefile-node-sa",
                        "hostNetwork": true,
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 2,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 2,
                "numberReady": 2,
                "observedGeneration": 1,
                "updatedNumberScheduled": 2,
                "numberAvailable": 2
            }
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-win",
                "namespace": "kube-system",
                "uid": "804e2418-c95b-4a1e-8730-2c73edee501e",
                "resourceVersion": "486",
                "generation": 1,
                "creationTimestamp": "2023-12-26T14:13:28Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"csi-azurefile-node-win\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"csi-azurefile-node-win\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"csi-azurefile-node-win\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"windows\"]}]}]}}},\"containers\":[{\"args\":[\"--csi-address=$(CSI_ENDPOINT)\",\"--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)\",\"--plugin-registration-path=$(PLUGIN_REG_DIR)\",\"--v=2\"],\"command\":[\"csi-node-driver-registrar.exe\"],\"env\":[{\"name\":\"CSI_ENDPOINT\",\"value\":\"unix://C:\\\\\\\\var\\\\\\\\lib\\\\\\\\kubelet\\\\\\\\plugins\\\\\\\\file.csi.azure.com\\\\\\\\csi.sock\"},{\"name\":\"DRIVER_REG_SOCK_PATH\",\"value\":\"C:\\\\\\\\var\\\\\\\\lib\\\\\\\\kubelet\\\\\\\\plugins\\\\\\\\file.csi.azure.com\\\\\\\\csi.sock\"},{\"name\":\"PLUGIN_REG_DIR\",\"value\":\"C:\\\\\\\\var\\\\\\\\lib\\\\\\\\kubelet\\\\\\\\plugins_registry\\\\\\\\\"},{\"name\":\"KUBE_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.8.0\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"node-driver-registrar\",\"resources\":{\"limits\":{\"memory\":\"150Mi\"},\"requests\":{\"cpu\":\"40m\",\"memory\":\"40Mi\"}}},{\"args\":[\"--v=2\",\"--endpoint=$(CSI_ENDPOINT)\",\"--nodeid=$(KUBE_NODE_NAME)\",\"--enable-windows-host-process=true\"],\"command\":[\"azurefileplugin.exe\"],\"env\":[{\"name\":\"AZURE_CREDENTIAL_FILE\",\"value\":\"C:\\\\k\\\\azure.json\"},{\"name\":\"CSI_ENDPOINT\",\"value\":\"unix://C:\\\\\\\\var\\\\\\\\lib\\\\\\\\kubelet\\\\\\\\plugins\\\\\\\\file.csi.azure.com\\\\\\\\csi.sock\"},{\"name\":\"KUBE_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.28.6-windows-hp\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"azurefile\"}],\"hostNetwork\":true,\"initContainers\":[{\"command\":[\"powershell.exe\",\"-c\",\"New-Item -ItemType Directory -Path C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\file.csi.azure.com\\\\ -Force\"],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.28.6-windows-hp\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"init\"}],\"priorityClassName\":\"system-node-critical\",\"securityContext\":{\"seccompProfile\":{\"type\":\"RuntimeDefault\"},\"windowsOptions\":{\"hostProcess\":true,\"runAsUserName\":\"NT AUTHORITY\\\\SYSTEM\"}},\"serviceAccountName\":\"csi-azurefile-node-sa\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}]}}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "app": "csi-azurefile-node-win"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "csi-azurefile-node-win"
                        }
                    },
                    "spec": {
                        "initContainers": [
                            {
                                "name": "init",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.28.6-windows-hp",
                                "command": [
                                    "powershell.exe",
                                    "-c",
                                    "New-Item -ItemType Directory -Path C:\\var\\lib\\kubelet\\plugins\\file.csi.azure.com\\ -Force"
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "containers": [
                            {
                                "name": "node-driver-registrar",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.8.0",
                                "command": [
                                    "csi-node-driver-registrar.exe"
                                ],
                                "args": [
                                    "--csi-address=$(CSI_ENDPOINT)",
                                    "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                                    "--plugin-registration-path=$(PLUGIN_REG_DIR)",
                                    "--v=2"
                                ],
                                "env": [
                                    {
                                        "name": "CSI_ENDPOINT",
                                        "value": "unix://C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\file.csi.azure.com\\\\csi.sock"
                                    },
                                    {
                                        "name": "DRIVER_REG_SOCK_PATH",
                                        "value": "C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\file.csi.azure.com\\\\csi.sock"
                                    },
                                    {
                                        "name": "PLUGIN_REG_DIR",
                                        "value": "C:\\\\var\\\\lib\\\\kubelet\\\\plugins_registry\\\\"
                                    },
                                    {
                                        "name": "KUBE_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "150Mi"
                                    },
                                    "requests": {
                                        "cpu": "40m",
                                        "memory": "40Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            },
                            {
                                "name": "azurefile",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.28.6-windows-hp",
                                "command": [
                                    "azurefileplugin.exe"
                                ],
                                "args": [
                                    "--v=2",
                                    "--endpoint=$(CSI_ENDPOINT)",
                                    "--nodeid=$(KUBE_NODE_NAME)",
                                    "--enable-windows-host-process=true"
                                ],
                                "env": [
                                    {
                                        "name": "AZURE_CREDENTIAL_FILE",
                                        "value": "C:\\k\\azure.json"
                                    },
                                    {
                                        "name": "CSI_ENDPOINT",
                                        "value": "unix://C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\file.csi.azure.com\\\\csi.sock"
                                    },
                                    {
                                        "name": "KUBE_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "csi-azurefile-node-sa",
                        "serviceAccount": "csi-azurefile-node-sa",
                        "hostNetwork": true,
                        "securityContext": {
                            "windowsOptions": {
                                "runAsUserName": "NT AUTHORITY\\SYSTEM",
                                "hostProcess": true
                            },
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "windows"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 0,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 0,
                "numberReady": 0,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "kube-proxy",
                "namespace": "kube-system",
                "uid": "be5cef7f-12c4-48dd-ab13-d69cf12f6d4b",
                "resourceVersion": "817",
                "generation": 1,
                "creationTimestamp": "2023-12-26T14:13:28Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "component": "kube-proxy",
                    "kubernetes.azure.com/managedby": "aks",
                    "tier": "node"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"component\":\"kube-proxy\",\"kubernetes.azure.com/managedby\":\"aks\",\"tier\":\"node\"},\"name\":\"kube-proxy\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"component\":\"kube-proxy\",\"tier\":\"node\"}},\"template\":{\"metadata\":{\"annotations\":null,\"labels\":{\"component\":\"kube-proxy\",\"kubernetes.azure.com/managedby\":\"aks\",\"tier\":\"node\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}}},\"containers\":[{\"command\":[\"kube-proxy\",\"--conntrack-max-per-core=0\",\"--metrics-bind-address=0.0.0.0:10249\",\"--cluster-cidr=10.244.0.0/16\",\"--detect-local-mode=ClusterCIDR\",\"--pod-interface-name-prefix=\",\"--v=3\"],\"image\":\"mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.27.7-1\",\"name\":\"kube-proxy\",\"resources\":{\"requests\":{\"cpu\":\"100m\"}},\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/var/lib/kubelet\",\"name\":\"kubeconfig\",\"readOnly\":true},{\"mountPath\":\"/etc/kubernetes/certs\",\"name\":\"certificates\",\"readOnly\":true},{\"mountPath\":\"/run/xtables.lock\",\"name\":\"iptableslock\"},{\"mountPath\":\"/lib/modules\",\"name\":\"modules\"}]}],\"hostNetwork\":true,\"initContainers\":[{\"command\":[\"/bin/sh\",\"-c\",\"SYSCTL=/proc/sys/net/netfilter/nf_conntrack_max\\necho \\\"Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)\\\"\\nDESIRED=$(awk -F= '/net.netfilter.nf_conntrack_max/ {print $2}' /etc/sysctl.d/999-sysctl-aks.conf)\\nif [ -z \\\"$DESIRED\\\" ]; then\\n  DESIRED=$((32768*$(nproc)))\\n  if [ $DESIRED -lt 131072 ]; then\\n    DESIRED=131072\\n  fi\\n\\n  echo \\\"AKS custom config for net.netfilter.nf_conntrack_max not set.\\\"\\n  echo \\\"Setting nf_conntrack_max to $DESIRED (32768 * $(nproc) cores, minimum 131072).\\\"\\n  echo $DESIRED \\u003e $SYSCTL\\nelse\\n  echo \\\"AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED.\\\"\\n  echo \\\"Setting nf_conntrack_max to $DESIRED.\\\"\\n  echo $DESIRED \\u003e $SYSCTL\\nfi\\n\"],\"image\":\"mcr.microsoft.com/mirror/docker/library/busybox:1.35\",\"name\":\"kube-proxy-bootstrap\",\"resources\":{\"requests\":{\"cpu\":\"100m\"}},\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/etc/sysctl.d\",\"name\":\"sysctls\"},{\"mountPath\":\"/lib/modules\",\"name\":\"modules\"}]}],\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"kube-proxy\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/var/lib/kubelet\"},\"name\":\"kubeconfig\"},{\"hostPath\":{\"path\":\"/etc/kubernetes/certs\"},\"name\":\"certificates\"},{\"hostPath\":{\"path\":\"/run/xtables.lock\",\"type\":\"FileOrCreate\"},\"name\":\"iptableslock\"},{\"hostPath\":{\"path\":\"/etc/sysctl.d\",\"type\":\"Directory\"},\"name\":\"sysctls\"},{\"hostPath\":{\"path\":\"/lib/modules\",\"type\":\"Directory\"},\"name\":\"modules\"}]}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "component": "kube-proxy",
                        "tier": "node"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "component": "kube-proxy",
                            "kubernetes.azure.com/managedby": "aks",
                            "tier": "node"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "kubeconfig",
                                "hostPath": {
                                    "path": "/var/lib/kubelet",
                                    "type": ""
                                }
                            },
                            {
                                "name": "certificates",
                                "hostPath": {
                                    "path": "/etc/kubernetes/certs",
                                    "type": ""
                                }
                            },
                            {
                                "name": "iptableslock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "sysctls",
                                "hostPath": {
                                    "path": "/etc/sysctl.d",
                                    "type": "Directory"
                                }
                            },
                            {
                                "name": "modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": "Directory"
                                }
                            }
                        ],
                        "initContainers": [
                            {
                                "name": "kube-proxy-bootstrap",
                                "image": "mcr.microsoft.com/mirror/docker/library/busybox:1.35",
                                "command": [
                                    "/bin/sh",
                                    "-c",
                                    "SYSCTL=/proc/sys/net/netfilter/nf_conntrack_max\necho \"Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)\"\nDESIRED=$(awk -F= '/net.netfilter.nf_conntrack_max/ {print $2}' /etc/sysctl.d/999-sysctl-aks.conf)\nif [ -z \"$DESIRED\" ]; then\n  DESIRED=$((32768*$(nproc)))\n  if [ $DESIRED -lt 131072 ]; then\n    DESIRED=131072\n  fi\n\n  echo \"AKS custom config for net.netfilter.nf_conntrack_max not set.\"\n  echo \"Setting nf_conntrack_max to $DESIRED (32768 * $(nproc) cores, minimum 131072).\"\n  echo $DESIRED \u003e $SYSCTL\nelse\n  echo \"AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED.\"\n  echo \"Setting nf_conntrack_max to $DESIRED.\"\n  echo $DESIRED \u003e $SYSCTL\nfi\n"
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "100m"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "sysctls",
                                        "mountPath": "/etc/sysctl.d"
                                    },
                                    {
                                        "name": "modules",
                                        "mountPath": "/lib/modules"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kube-proxy",
                                "image": "mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.27.7-1",
                                "command": [
                                    "kube-proxy",
                                    "--conntrack-max-per-core=0",
                                    "--metrics-bind-address=0.0.0.0:10249",
                                    "--cluster-cidr=10.244.0.0/16",
                                    "--detect-local-mode=ClusterCIDR",
                                    "--pod-interface-name-prefix=",
                                    "--v=3"
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "100m"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "kubeconfig",
                                        "readOnly": true,
                                        "mountPath": "/var/lib/kubelet"
                                    },
                                    {
                                        "name": "certificates",
                                        "readOnly": true,
                                        "mountPath": "/etc/kubernetes/certs"
                                    },
                                    {
                                        "name": "iptableslock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "modules",
                                        "mountPath": "/lib/modules"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "kube-proxy",
                        "serviceAccount": "kube-proxy",
                        "hostNetwork": true,
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 2,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 2,
                "numberReady": 2,
                "observedGeneration": 1,
                "updatedNumberScheduled": 2,
                "numberAvailable": 2
            }
        }
    ]
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "3739"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns",
                "namespace": "kube-system",
                "uid": "f313a776-7ff5-4664-a4ac-e229334fe797",
                "resourceVersion": "1115",
                "generation": 2,
                "creationTimestamp": "2023-12-26T14:13:27Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "kube-dns",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS",
                    "version": "v20"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"kube-dns\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"CoreDNS\",\"version\":\"v20\"},\"name\":\"coredns\",\"namespace\":\"kube-system\"},\"spec\":{\"paused\":false,\"revisionHistoryLimit\":2,\"selector\":{\"matchLabels\":{\"k8s-app\":\"kube-dns\",\"version\":\"v20\"}},\"strategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"prometheus.io/port\":\"9153\"},\"labels\":{\"k8s-app\":\"kube-dns\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\",\"version\":\"v20\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"preference\":{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/mode\",\"operator\":\"In\",\"values\":[\"system\"]}]},\"weight\":100}],\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}},\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"k8s-app\",\"operator\":\"In\",\"values\":[\"kube-dns\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10},{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"k8s-app\",\"operator\":\"In\",\"values\":[\"kube-dns\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5}]}},\"containers\":[{\"args\":[\"-conf\",\"/etc/coredns/Corefile\"],\"image\":\"mcr.microsoft.com/oss/kubernetes/coredns:v1.9.4\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/health\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"successThreshold\":1,\"timeoutSeconds\":5},\"name\":\"coredns\",\"ports\":[{\"containerPort\":53,\"name\":\"dns\",\"protocol\":\"UDP\"},{\"containerPort\":53,\"name\":\"dns-tcp\",\"protocol\":\"TCP\"},{\"containerPort\":9153,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":8181,\"scheme\":\"HTTP\"}},\"resources\":{\"limits\":{\"cpu\":3,\"memory\":\"500Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"70Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"add\":[\"NET_BIND_SERVICE\"],\"drop\":[\"all\"]},\"procMount\":\"Default\",\"readOnlyRootFilesystem\":true},\"volumeMounts\":[{\"mountPath\":\"/etc/coredns\",\"name\":\"config-volume\",\"readOnly\":true},{\"mountPath\":\"/etc/coredns/custom\",\"name\":\"custom-config-volume\",\"readOnly\":true},{\"mountPath\":\"/tmp\",\"name\":\"tmp\"}]}],\"dnsPolicy\":\"Default\",\"priorityClassName\":\"system-node-critical\",\"securityContext\":{\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"coredns\",\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"},{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/unreachable\",\"operator\":\"Exists\",\"tolerationSeconds\":30},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/not-ready\",\"operator\":\"Exists\",\"tolerationSeconds\":30}],\"volumes\":[{\"configMap\":{\"items\":[{\"key\":\"Corefile\",\"path\":\"Corefile\"}],\"name\":\"coredns\"},\"name\":\"config-volume\"},{\"configMap\":{\"name\":\"coredns-custom\",\"optional\":true},\"name\":\"custom-config-volume\"},{\"emptyDir\":{},\"name\":\"tmp\"}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns",
                        "version": "v20"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns",
                            "kubernetes.azure.com/managedby": "aks",
                            "kubernetes.io/cluster-service": "true",
                            "version": "v20"
                        },
                        "annotations": {
                            "prometheus.io/port": "9153"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "custom-config-volume",
                                "configMap": {
                                    "name": "coredns-custom",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "tmp",
                                "emptyDir": {}
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "mcr.microsoft.com/oss/kubernetes/coredns:v1.9.4",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "3",
                                        "memory": "500Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    },
                                    {
                                        "name": "custom-config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns/custom"
                                    },
                                    {
                                        "name": "tmp",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false,
                                    "procMount": "Default"
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 10,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "topology.kubernetes.io/zone"
                                        }
                                    },
                                    {
                                        "weight": 5,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            },
                            {
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 2,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 2,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2023-12-26T14:14:19Z",
                        "lastTransitionTime": "2023-12-26T14:14:19Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2023-12-26T14:14:23Z",
                        "lastTransitionTime": "2023-12-26T14:13:27Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"coredns-789789675\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "coredns-autoscaler",
                "namespace": "kube-system",
                "uid": "99382bf0-1d5c-4c77-8903-456c9ef6332a",
                "resourceVersion": "989",
                "generation": 1,
                "creationTimestamp": "2023-12-26T14:13:27Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "coredns-autoscaler",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"coredns-autoscaler\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"coredns-autoscaler\",\"namespace\":\"kube-system\"},\"spec\":{\"paused\":false,\"revisionHistoryLimit\":2,\"selector\":{\"matchLabels\":{\"k8s-app\":\"coredns-autoscaler\"}},\"template\":{\"metadata\":{\"annotations\":{\"cluster-autoscaler.kubernetes.io/safe-to-evict\":\"true\",\"seccomp.security.alpha.kubernetes.io/pod\":\"runtime/default\"},\"labels\":{\"k8s-app\":\"coredns-autoscaler\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"preference\":{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/mode\",\"operator\":\"In\",\"values\":[\"system\"]}]},\"weight\":100}],\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}}},\"containers\":[{\"command\":[\"/cluster-proportional-autoscaler\",\"--namespace=kube-system\",\"--configmap=coredns-autoscaler\",\"--target=deployment/coredns\",\"--default-params={\\\"ladder\\\":{\\\"coresToReplicas\\\":[[1,2],[512,3],[1024,4],[2048,5]],\\\"nodesToReplicas\\\":[[1,2],[8,3],[16,4],[32,5]]}}\",\"--logtostderr=true\",\"--v=2\"],\"image\":\"mcr.microsoft.com/oss/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.8\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/last-poll\",\"port\":8080},\"initialDelaySeconds\":10,\"periodSeconds\":10},\"name\":\"autoscaler\",\"resources\":{\"limits\":{\"cpu\":\"200m\",\"memory\":\"500Mi\"},\"requests\":{\"cpu\":\"20m\",\"memory\":\"10Mi\"}}}],\"dnsPolicy\":\"Default\",\"priorityClassName\":\"system-node-critical\",\"securityContext\":{\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"coredns-autoscaler\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/unreachable\",\"operator\":\"Exists\",\"tolerationSeconds\":30},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/not-ready\",\"operator\":\"Exists\",\"tolerationSeconds\":30}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "coredns-autoscaler"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "coredns-autoscaler",
                            "kubernetes.azure.com/managedby": "aks"
                        },
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                            "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "autoscaler",
                                "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.8",
                                "command": [
                                    "/cluster-proportional-autoscaler",
                                    "--namespace=kube-system",
                                    "--configmap=coredns-autoscaler",
                                    "--target=deployment/coredns",
                                    "--default-params={\"ladder\":{\"coresToReplicas\":[[1,2],[512,3],[1024,4],[2048,5]],\"nodesToReplicas\":[[1,2],[8,3],[16,4],[32,5]]}}",
                                    "--logtostderr=true",
                                    "--v=2"
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "200m",
                                        "memory": "500Mi"
                                    },
                                    "requests": {
                                        "cpu": "20m",
                                        "memory": "10Mi"
                                    }
                                },
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/last-poll",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "coredns-autoscaler",
                        "serviceAccount": "coredns-autoscaler",
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            },
                            {
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 2,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2023-12-26T14:14:15Z",
                        "lastTransitionTime": "2023-12-26T14:14:15Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2023-12-26T14:14:15Z",
                        "lastTransitionTime": "2023-12-26T14:13:27Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"coredns-autoscaler-649b947bbd\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "konnectivity-agent",
                "namespace": "kube-system",
                "uid": "f8930f51-3c9c-414e-9ffe-9146d90e5674",
                "resourceVersion": "1017",
                "generation": 1,
                "creationTimestamp": "2023-12-26T14:13:28Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "app": "konnectivity-agent",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app\":\"konnectivity-agent\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"konnectivity-agent\",\"namespace\":\"kube-system\"},\"spec\":{\"paused\":false,\"replicas\":2,\"revisionHistoryLimit\":2,\"selector\":{\"matchLabels\":{\"app\":\"konnectivity-agent\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":0,\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"checksum/client-cert\":\"b3301c0c14196dd6304f83df29b68da9785530ba5997fc51967f2cc2f042be95\"},\"labels\":{\"app\":\"konnectivity-agent\",\"component\":\"tunnel\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"preference\":{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/mode\",\"operator\":\"In\",\"values\":[\"system\"]}]},\"weight\":100}],\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}},\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app\",\"operator\":\"In\",\"values\":[\"konnectivity-agent\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10},{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app\",\"operator\":\"In\",\"values\":[\"konnectivity-agent\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5}]}},\"automountServiceAccountToken\":false,\"containers\":[{\"args\":[\"--proxy-server-host=murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io\",\"--proxy-server-port=443\",\"--health-server-port=8082\",\"--keepalive-time=30s\",\"--agent-key=/certs/client.key\",\"--agent-cert=/certs/client.crt\",\"--ca-cert=/certs/ca.crt\",\"--alpn-proto=konnectivity\",\"-v=2\"],\"command\":[\"/proxy-agent\"],\"image\":\"mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.0.33-hotfix.20221110\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":8082,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":30,\"periodSeconds\":60,\"timeoutSeconds\":60},\"name\":\"konnectivity-agent\",\"readinessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":8082,\"scheme\":\"HTTP\"}},\"resources\":{\"limits\":{\"cpu\":\"1000m\",\"memory\":\"1Gi\"},\"requests\":{\"cpu\":\"20m\",\"memory\":\"20Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/certs\",\"name\":\"certs\"}]}],\"dnsPolicy\":\"Default\",\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"konnectivity-agent\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/unreachable\",\"operator\":\"Exists\",\"tolerationSeconds\":30},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/not-ready\",\"operator\":\"Exists\",\"tolerationSeconds\":30}],\"volumes\":[{\"name\":\"certs\",\"secret\":{\"secretName\":\"konnectivity-certs\"}}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "app": "konnectivity-agent"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "konnectivity-agent",
                            "component": "tunnel",
                            "kubernetes.azure.com/managedby": "aks"
                        },
                        "annotations": {
                            "checksum/client-cert": "b3301c0c14196dd6304f83df29b68da9785530ba5997fc51967f2cc2f042be95"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "certs",
                                "secret": {
                                    "secretName": "konnectivity-certs",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "konnectivity-agent",
                                "image": "mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.0.33-hotfix.20221110",
                                "command": [
                                    "/proxy-agent"
                                ],
                                "args": [
                                    "--proxy-server-host=murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io",
                                    "--proxy-server-port=443",
                                    "--health-server-port=8082",
                                    "--keepalive-time=30s",
                                    "--agent-key=/certs/client.key",
                                    "--agent-cert=/certs/client.crt",
                                    "--ca-cert=/certs/ca.crt",
                                    "--alpn-proto=konnectivity",
                                    "-v=2"
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "20m",
                                        "memory": "20Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "certs",
                                        "mountPath": "/certs"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8082,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 60,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8082,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "konnectivity-agent",
                        "serviceAccount": "konnectivity-agent",
                        "automountServiceAccountToken": false,
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 10,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "app",
                                                        "operator": "In",
                                                        "values": [
                                                            "konnectivity-agent"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "topology.kubernetes.io/zone"
                                        }
                                    },
                                    {
                                        "weight": 5,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "app",
                                                        "operator": "In",
                                                        "values": [
                                                            "konnectivity-agent"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            },
                            {
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 2,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2023-12-26T14:14:16Z",
                        "lastTransitionTime": "2023-12-26T14:14:16Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2023-12-26T14:14:16Z",
                        "lastTransitionTime": "2023-12-26T14:13:28Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"konnectivity-agent-b95494c76\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "metrics-server",
                "namespace": "kube-system",
                "uid": "67d9d0b7-16c1-4f6c-8ed2-580f188848b6",
                "resourceVersion": "1449",
                "generation": 2,
                "creationTimestamp": "2023-12-26T14:13:28Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "metrics-server",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"metrics-server\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"metrics-server\",\"namespace\":\"kube-system\"},\"spec\":{\"paused\":false,\"replicas\":2,\"revisionHistoryLimit\":2,\"selector\":{\"matchLabels\":{\"k8s-app\":\"metrics-server\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":1,\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"metrics-server\",\"kubernetes.azure.com/managedby\":\"aks\"},\"name\":\"metrics-server\"},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"preference\":{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/mode\",\"operator\":\"In\",\"values\":[\"system\"]}]},\"weight\":100}],\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}},\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"k8s-app\",\"operator\":\"In\",\"values\":[\"metrics-server\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10},{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"k8s-app\",\"operator\":\"In\",\"values\":[\"metrics-server\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5}]}},\"containers\":[{\"command\":[\"/pod_nanny\",\"--config-dir=/etc/config\",\"--cpu=44m\",\"--extra-cpu=0.5m\",\"--memory=51Mi\",\"--extra-memory=4Mi\",\"--poll-period=180000\",\"--threshold=5\",\"--deployment=metrics-server\",\"--container=metrics-server\"],\"env\":[{\"name\":\"MY_POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"MY_POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.19\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"metrics-server-vpa\",\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"300Mi\"},\"requests\":{\"cpu\":\"5m\",\"memory\":\"30Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/etc/config\",\"name\":\"metrics-server-config-volume\"}]},{\"command\":[\"/metrics-server\",\"--kubelet-insecure-tls\",\"--kubelet-preferred-address-types=InternalIP\",\"--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\",\"--cert-dir=/tmp\",\"--secure-port=4443\"],\"image\":\"mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/livez\",\"port\":\"ms-https\",\"scheme\":\"HTTPS\"},\"initialDelaySeconds\":20,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":10},\"name\":\"metrics-server\",\"ports\":[{\"containerPort\":4443,\"name\":\"ms-https\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/readyz\",\"port\":\"ms-https\",\"scheme\":\"HTTPS\"},\"initialDelaySeconds\":60,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":10},\"volumeMounts\":[{\"mountPath\":\"/tmp\",\"name\":\"tmp-dir\"}]}],\"priorityClassName\":\"system-node-critical\",\"securityContext\":{\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"metrics-server\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/unreachable\",\"operator\":\"Exists\",\"tolerationSeconds\":30},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/not-ready\",\"operator\":\"Exists\",\"tolerationSeconds\":30}],\"volumes\":[{\"emptyDir\":{},\"name\":\"tmp-dir\"},{\"configMap\":{\"name\":\"metrics-server-config\",\"optional\":true},\"name\":\"metrics-server-config-volume\"}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "metrics-server"
                    }
                },
                "template": {
                    "metadata": {
                        "name": "metrics-server",
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "metrics-server",
                            "kubernetes.azure.com/managedby": "aks"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "tmp-dir",
                                "emptyDir": {}
                            },
                            {
                                "name": "metrics-server-config-volume",
                                "configMap": {
                                    "name": "metrics-server-config",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "metrics-server-vpa",
                                "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.19",
                                "command": [
                                    "/pod_nanny",
                                    "--config-dir=/etc/config",
                                    "--cpu=44m",
                                    "--extra-cpu=0.5m",
                                    "--memory=51Mi",
                                    "--extra-memory=4Mi",
                                    "--poll-period=180000",
                                    "--threshold=5",
                                    "--deployment=metrics-server",
                                    "--container=metrics-server"
                                ],
                                "env": [
                                    {
                                        "name": "MY_POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "MY_POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "300Mi"
                                    },
                                    "requests": {
                                        "cpu": "5m",
                                        "memory": "30Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "metrics-server-config-volume",
                                        "mountPath": "/etc/config"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            },
                            {
                                "name": "metrics-server",
                                "image": "mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3",
                                "command": [
                                    "/metrics-server",
                                    "--kubelet-insecure-tls",
                                    "--kubelet-preferred-address-types=InternalIP",
                                    "--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                                    "--cert-dir=/tmp",
                                    "--secure-port=4443"
                                ],
                                "ports": [
                                    {
                                        "name": "ms-https",
                                        "containerPort": 4443,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "45m",
                                        "memory": "59Mi"
                                    },
                                    "requests": {
                                        "cpu": "45m",
                                        "memory": "59Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "tmp-dir",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/livez",
                                        "port": "ms-https",
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 20,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": "ms-https",
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "metrics-server",
                        "serviceAccount": "metrics-server",
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 10,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "metrics-server"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "topology.kubernetes.io/zone"
                                        }
                                    },
                                    {
                                        "weight": 5,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "metrics-server"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            },
                            {
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 1
                    }
                },
                "revisionHistoryLimit": 2,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 2,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2023-12-26T14:15:23Z",
                        "lastTransitionTime": "2023-12-26T14:15:23Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2023-12-26T14:15:33Z",
                        "lastTransitionTime": "2023-12-26T14:13:28Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"metrics-server-5955767688\" has successfully progressed."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "3739"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-789789675",
                "namespace": "kube-system",
                "uid": "1c206b61-56b2-48f8-859b-c11303d633cc",
                "resourceVersion": "1114",
                "generation": 2,
                "creationTimestamp": "2023-12-26T14:13:27Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true",
                    "pod-template-hash": "789789675",
                    "version": "v20"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "3",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns",
                        "uid": "f313a776-7ff5-4664-a4ac-e229334fe797",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "789789675",
                        "version": "v20"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns",
                            "kubernetes.azure.com/managedby": "aks",
                            "kubernetes.io/cluster-service": "true",
                            "pod-template-hash": "789789675",
                            "version": "v20"
                        },
                        "annotations": {
                            "prometheus.io/port": "9153"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "custom-config-volume",
                                "configMap": {
                                    "name": "coredns-custom",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "tmp",
                                "emptyDir": {}
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "mcr.microsoft.com/oss/kubernetes/coredns:v1.9.4",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "3",
                                        "memory": "500Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    },
                                    {
                                        "name": "custom-config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns/custom"
                                    },
                                    {
                                        "name": "tmp",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false,
                                    "procMount": "Default"
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 10,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "topology.kubernetes.io/zone"
                                        }
                                    },
                                    {
                                        "weight": 5,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            },
                            {
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                }
            },
            "status": {
                "replicas": 2,
                "fullyLabeledReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "observedGeneration": 2
            }
        },
        {
            "metadata": {
                "name": "coredns-autoscaler-649b947bbd",
                "namespace": "kube-system",
                "uid": "8ddd4239-61b5-4839-ad0a-c5f28deb21a8",
                "resourceVersion": "987",
                "generation": 1,
                "creationTimestamp": "2023-12-26T14:13:27Z",
                "labels": {
                    "k8s-app": "coredns-autoscaler",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-hash": "649b947bbd"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns-autoscaler",
                        "uid": "99382bf0-1d5c-4c77-8903-456c9ef6332a",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "coredns-autoscaler",
                        "pod-template-hash": "649b947bbd"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "coredns-autoscaler",
                            "kubernetes.azure.com/managedby": "aks",
                            "pod-template-hash": "649b947bbd"
                        },
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                            "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "autoscaler",
                                "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.8",
                                "command": [
                                    "/cluster-proportional-autoscaler",
                                    "--namespace=kube-system",
                                    "--configmap=coredns-autoscaler",
                                    "--target=deployment/coredns",
                                    "--default-params={\"ladder\":{\"coresToReplicas\":[[1,2],[512,3],[1024,4],[2048,5]],\"nodesToReplicas\":[[1,2],[8,3],[16,4],[32,5]]}}",
                                    "--logtostderr=true",
                                    "--v=2"
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "200m",
                                        "memory": "500Mi"
                                    },
                                    "requests": {
                                        "cpu": "20m",
                                        "memory": "10Mi"
                                    }
                                },
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/last-poll",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "coredns-autoscaler",
                        "serviceAccount": "coredns-autoscaler",
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            },
                            {
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "konnectivity-agent-b95494c76",
                "namespace": "kube-system",
                "uid": "344d2c11-bda6-4083-ad8d-48b003fb6dfb",
                "resourceVersion": "1016",
                "generation": 1,
                "creationTimestamp": "2023-12-26T14:13:28Z",
                "labels": {
                    "app": "konnectivity-agent",
                    "component": "tunnel",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-hash": "b95494c76"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "konnectivity-agent",
                        "uid": "f8930f51-3c9c-414e-9ffe-9146d90e5674",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "app": "konnectivity-agent",
                        "pod-template-hash": "b95494c76"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "konnectivity-agent",
                            "component": "tunnel",
                            "kubernetes.azure.com/managedby": "aks",
                            "pod-template-hash": "b95494c76"
                        },
                        "annotations": {
                            "checksum/client-cert": "b3301c0c14196dd6304f83df29b68da9785530ba5997fc51967f2cc2f042be95"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "certs",
                                "secret": {
                                    "secretName": "konnectivity-certs",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "konnectivity-agent",
                                "image": "mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.0.33-hotfix.20221110",
                                "command": [
                                    "/proxy-agent"
                                ],
                                "args": [
                                    "--proxy-server-host=murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io",
                                    "--proxy-server-port=443",
                                    "--health-server-port=8082",
                                    "--keepalive-time=30s",
                                    "--agent-key=/certs/client.key",
                                    "--agent-cert=/certs/client.crt",
                                    "--ca-cert=/certs/ca.crt",
                                    "--alpn-proto=konnectivity",
                                    "-v=2"
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "20m",
                                        "memory": "20Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "certs",
                                        "mountPath": "/certs"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8082,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 60,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8082,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "konnectivity-agent",
                        "serviceAccount": "konnectivity-agent",
                        "automountServiceAccountToken": false,
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 10,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "app",
                                                        "operator": "In",
                                                        "values": [
                                                            "konnectivity-agent"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "topology.kubernetes.io/zone"
                                        }
                                    },
                                    {
                                        "weight": 5,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "app",
                                                        "operator": "In",
                                                        "values": [
                                                            "konnectivity-agent"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            },
                            {
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                }
            },
            "status": {
                "replicas": 2,
                "fullyLabeledReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "metrics-server-5955767688",
                "namespace": "kube-system",
                "uid": "3276b0d5-32d1-4dd5-bb43-7d835715430f",
                "resourceVersion": "1444",
                "generation": 2,
                "creationTimestamp": "2023-12-26T14:14:22Z",
                "labels": {
                    "k8s-app": "metrics-server",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-hash": "5955767688"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "3",
                    "deployment.kubernetes.io/revision": "2"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "metrics-server",
                        "uid": "67d9d0b7-16c1-4f6c-8ed2-580f188848b6",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "metrics-server",
                        "pod-template-hash": "5955767688"
                    }
                },
                "template": {
                    "metadata": {
                        "name": "metrics-server",
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "metrics-server",
                            "kubernetes.azure.com/managedby": "aks",
                            "pod-template-hash": "5955767688"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "tmp-dir",
                                "emptyDir": {}
                            },
                            {
                                "name": "metrics-server-config-volume",
                                "configMap": {
                                    "name": "metrics-server-config",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "metrics-server-vpa",
                                "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.19",
                                "command": [
                                    "/pod_nanny",
                                    "--config-dir=/etc/config",
                                    "--cpu=44m",
                                    "--extra-cpu=0.5m",
                                    "--memory=51Mi",
                                    "--extra-memory=4Mi",
                                    "--poll-period=180000",
                                    "--threshold=5",
                                    "--deployment=metrics-server",
                                    "--container=metrics-server"
                                ],
                                "env": [
                                    {
                                        "name": "MY_POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "MY_POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "300Mi"
                                    },
                                    "requests": {
                                        "cpu": "5m",
                                        "memory": "30Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "metrics-server-config-volume",
                                        "mountPath": "/etc/config"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            },
                            {
                                "name": "metrics-server",
                                "image": "mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3",
                                "command": [
                                    "/metrics-server",
                                    "--kubelet-insecure-tls",
                                    "--kubelet-preferred-address-types=InternalIP",
                                    "--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                                    "--cert-dir=/tmp",
                                    "--secure-port=4443"
                                ],
                                "ports": [
                                    {
                                        "name": "ms-https",
                                        "containerPort": 4443,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "45m",
                                        "memory": "59Mi"
                                    },
                                    "requests": {
                                        "cpu": "45m",
                                        "memory": "59Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "tmp-dir",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/livez",
                                        "port": "ms-https",
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 20,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": "ms-https",
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "metrics-server",
                        "serviceAccount": "metrics-server",
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 10,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "metrics-server"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "topology.kubernetes.io/zone"
                                        }
                                    },
                                    {
                                        "weight": 5,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "metrics-server"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            },
                            {
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                }
            },
            "status": {
                "replicas": 2,
                "fullyLabeledReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "observedGeneration": 2
            }
        },
        {
            "metadata": {
                "name": "metrics-server-7557c5798",
                "namespace": "kube-system",
                "uid": "7cad96d5-3ad1-4fdf-a2df-c8139da764d8",
                "resourceVersion": "1443",
                "generation": 3,
                "creationTimestamp": "2023-12-26T14:13:28Z",
                "labels": {
                    "k8s-app": "metrics-server",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-hash": "7557c5798"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "3",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "metrics-server",
                        "uid": "67d9d0b7-16c1-4f6c-8ed2-580f188848b6",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 0,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "metrics-server",
                        "pod-template-hash": "7557c5798"
                    }
                },
                "template": {
                    "metadata": {
                        "name": "metrics-server",
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "metrics-server",
                            "kubernetes.azure.com/managedby": "aks",
                            "pod-template-hash": "7557c5798"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "tmp-dir",
                                "emptyDir": {}
                            },
                            {
                                "name": "metrics-server-config-volume",
                                "configMap": {
                                    "name": "metrics-server-config",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "metrics-server-vpa",
                                "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.19",
                                "command": [
                                    "/pod_nanny",
                                    "--config-dir=/etc/config",
                                    "--cpu=44m",
                                    "--extra-cpu=0.5m",
                                    "--memory=51Mi",
                                    "--extra-memory=4Mi",
                                    "--poll-period=180000",
                                    "--threshold=5",
                                    "--deployment=metrics-server",
                                    "--container=metrics-server"
                                ],
                                "env": [
                                    {
                                        "name": "MY_POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "MY_POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "300Mi"
                                    },
                                    "requests": {
                                        "cpu": "5m",
                                        "memory": "30Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "metrics-server-config-volume",
                                        "mountPath": "/etc/config"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            },
                            {
                                "name": "metrics-server",
                                "image": "mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3",
                                "command": [
                                    "/metrics-server",
                                    "--kubelet-insecure-tls",
                                    "--kubelet-preferred-address-types=InternalIP",
                                    "--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                                    "--cert-dir=/tmp",
                                    "--secure-port=4443"
                                ],
                                "ports": [
                                    {
                                        "name": "ms-https",
                                        "containerPort": 4443,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "tmp-dir",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/livez",
                                        "port": "ms-https",
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 20,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": "ms-https",
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "metrics-server",
                        "serviceAccount": "metrics-server",
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 10,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "metrics-server"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "topology.kubernetes.io/zone"
                                        }
                                    },
                                    {
                                        "weight": 5,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "metrics-server"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            },
                            {
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                }
            },
            "status": {
                "replicas": 0,
                "observedGeneration": 3
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "3740"
    },
    "items": [
        {
            "metadata": {
                "name": "azure-ip-masq-agent-5nhnv",
                "generateName": "azure-ip-masq-agent-",
                "namespace": "kube-system",
                "uid": "fd546dfd-262e-475b-9558-28effbf27969",
                "resourceVersion": "789",
                "creationTimestamp": "2023-12-26T14:13:32Z",
                "labels": {
                    "controller-revision-hash": "564f88fdfd",
                    "k8s-app": "azure-ip-masq-agent",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-generation": "1",
                    "tier": "node"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "azure-ip-masq-agent",
                        "uid": "5cd5884d-2818-4763-b117-754e9ab3be97",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "azure-ip-masq-agent-config-volume",
                        "projected": {
                            "sources": [
                                {
                                    "configMap": {
                                        "name": "azure-ip-masq-agent-config",
                                        "items": [
                                            {
                                                "key": "ip-masq-agent",
                                                "path": "ip-masq-agent",
                                                "mode": 444
                                            }
                                        ],
                                        "optional": true
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "azure-ip-masq-agent-config-reconciled",
                                        "items": [
                                            {
                                                "key": "ip-masq-agent-reconciled",
                                                "path": "ip-masq-agent-reconciled",
                                                "mode": 444
                                            }
                                        ],
                                        "optional": true
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "iptableslock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "azure-ip-masq-agent",
                        "image": "mcr.microsoft.com/aks/ip-masq-agent-v2:v0.1.8",
                        "args": [
                            "--v=2",
                            "--resync-interval=60"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "500m",
                                "memory": "250Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "azure-ip-masq-agent-config-volume",
                                "mountPath": "/etc/config"
                            },
                            {
                                "name": "iptableslock",
                                "mountPath": "/run/xtables.lock"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_ADMIN",
                                    "NET_RAW"
                                ]
                            }
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "automountServiceAccountToken": false,
                "nodeName": "aks-default-20426481-vmss000000",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-default-20426481-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:43Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:45Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:45Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:32Z"
                    }
                ],
                "hostIP": "10.224.0.4",
                "podIP": "10.224.0.4",
                "podIPs": [
                    {
                        "ip": "10.224.0.4"
                    }
                ],
                "startTime": "2023-12-26T14:13:43Z",
                "containerStatuses": [
                    {
                        "name": "azure-ip-masq-agent",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-26T14:13:44Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/aks/ip-masq-agent-v2:v0.1.8",
                        "imageID": "sha256:d0b0f7f00cca8c3c99f1647cd5cbb96e2a89685824fefa6772ab3a4b492b5d1e",
                        "containerID": "containerd://eda7644fac5196f8c9cb79e15e07ce4f27274bec5148175b52a5d95a1d7ea45f",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "azure-ip-masq-agent-cnmb4",
                "generateName": "azure-ip-masq-agent-",
                "namespace": "kube-system",
                "uid": "e1e50ca0-a1c1-400e-8852-6fc82f6f52c0",
                "resourceVersion": "714",
                "creationTimestamp": "2023-12-26T14:13:37Z",
                "labels": {
                    "controller-revision-hash": "564f88fdfd",
                    "k8s-app": "azure-ip-masq-agent",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-generation": "1",
                    "tier": "node"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "azure-ip-masq-agent",
                        "uid": "5cd5884d-2818-4763-b117-754e9ab3be97",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "azure-ip-masq-agent-config-volume",
                        "projected": {
                            "sources": [
                                {
                                    "configMap": {
                                        "name": "azure-ip-masq-agent-config",
                                        "items": [
                                            {
                                                "key": "ip-masq-agent",
                                                "path": "ip-masq-agent",
                                                "mode": 444
                                            }
                                        ],
                                        "optional": true
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "azure-ip-masq-agent-config-reconciled",
                                        "items": [
                                            {
                                                "key": "ip-masq-agent-reconciled",
                                                "path": "ip-masq-agent-reconciled",
                                                "mode": 444
                                            }
                                        ],
                                        "optional": true
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "iptableslock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "azure-ip-masq-agent",
                        "image": "mcr.microsoft.com/aks/ip-masq-agent-v2:v0.1.8",
                        "args": [
                            "--v=2",
                            "--resync-interval=60"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "500m",
                                "memory": "250Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "azure-ip-masq-agent-config-volume",
                                "mountPath": "/etc/config"
                            },
                            {
                                "name": "iptableslock",
                                "mountPath": "/run/xtables.lock"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_ADMIN",
                                    "NET_RAW"
                                ]
                            }
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "automountServiceAccountToken": false,
                "nodeName": "aks-default-20426481-vmss000001",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-default-20426481-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:37Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:39Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:39Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:37Z"
                    }
                ],
                "hostIP": "10.224.0.5",
                "podIP": "10.224.0.5",
                "podIPs": [
                    {
                        "ip": "10.224.0.5"
                    }
                ],
                "startTime": "2023-12-26T14:13:37Z",
                "containerStatuses": [
                    {
                        "name": "azure-ip-masq-agent",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-26T14:13:39Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/aks/ip-masq-agent-v2:v0.1.8",
                        "imageID": "sha256:d0b0f7f00cca8c3c99f1647cd5cbb96e2a89685824fefa6772ab3a4b492b5d1e",
                        "containerID": "containerd://2df4a1c6c507923dbcca06790cf6f78c509809b881753d9fc630564382d6153c",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "cloud-node-manager-sqvfd",
                "generateName": "cloud-node-manager-",
                "namespace": "kube-system",
                "uid": "89ba9e67-38bc-4ecc-ba23-990e54172469",
                "resourceVersion": "716",
                "creationTimestamp": "2023-12-26T14:13:37Z",
                "labels": {
                    "controller-revision-hash": "94ff85d59",
                    "k8s-app": "cloud-node-manager",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-generation": "1"
                },
                "annotations": {
                    "cluster-autoscaler.kubernetes.io/daemonset-pod": "true"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "cloud-node-manager",
                        "uid": "28294b37-4b1f-4b66-99c7-d3448025fcec",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-api-access-9tdk6",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "cloud-node-manager",
                        "image": "mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.27.8",
                        "command": [
                            "cloud-node-manager",
                            "--node-name=$(NODE_NAME)",
                            "--wait-routes",
                            "--enable-deprecated-beta-topology-labels=true"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "512Mi"
                            },
                            "requests": {
                                "cpu": "50m",
                                "memory": "50Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kube-api-access-9tdk6",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "cloud-node-manager",
                "serviceAccount": "cloud-node-manager",
                "nodeName": "aks-default-20426481-vmss000001",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-default-20426481-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:37Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:39Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:39Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:37Z"
                    }
                ],
                "hostIP": "10.224.0.5",
                "podIP": "10.224.0.5",
                "podIPs": [
                    {
                        "ip": "10.224.0.5"
                    }
                ],
                "startTime": "2023-12-26T14:13:37Z",
                "containerStatuses": [
                    {
                        "name": "cloud-node-manager",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-26T14:13:39Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.27.8",
                        "imageID": "sha256:2f240c0f6f4763f961b65456b1bc22a34be18e2fb07903402323356e0d5aa200",
                        "containerID": "containerd://a3c34e463598aab108ab6f3cd8c6c4dfd8ef57623caea4bfe6f9f63290f3df51",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "cloud-node-manager-tcdkd",
                "generateName": "cloud-node-manager-",
                "namespace": "kube-system",
                "uid": "27ce4068-f165-403c-9f22-2c70dd12cc28",
                "resourceVersion": "787",
                "creationTimestamp": "2023-12-26T14:13:32Z",
                "labels": {
                    "controller-revision-hash": "94ff85d59",
                    "k8s-app": "cloud-node-manager",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-generation": "1"
                },
                "annotations": {
                    "cluster-autoscaler.kubernetes.io/daemonset-pod": "true"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "cloud-node-manager",
                        "uid": "28294b37-4b1f-4b66-99c7-d3448025fcec",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-api-access-7xr55",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "cloud-node-manager",
                        "image": "mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.27.8",
                        "command": [
                            "cloud-node-manager",
                            "--node-name=$(NODE_NAME)",
                            "--wait-routes",
                            "--enable-deprecated-beta-topology-labels=true"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "512Mi"
                            },
                            "requests": {
                                "cpu": "50m",
                                "memory": "50Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kube-api-access-7xr55",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "cloud-node-manager",
                "serviceAccount": "cloud-node-manager",
                "nodeName": "aks-default-20426481-vmss000000",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-default-20426481-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:43Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:45Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:45Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:32Z"
                    }
                ],
                "hostIP": "10.224.0.4",
                "podIP": "10.224.0.4",
                "podIPs": [
                    {
                        "ip": "10.224.0.4"
                    }
                ],
                "startTime": "2023-12-26T14:13:43Z",
                "containerStatuses": [
                    {
                        "name": "cloud-node-manager",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-26T14:13:45Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.27.8",
                        "imageID": "sha256:2f240c0f6f4763f961b65456b1bc22a34be18e2fb07903402323356e0d5aa200",
                        "containerID": "containerd://ce52ceae2a3728c1af10caade7772a92416c90bbfc0f91311ce9d0f85849daac",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-789789675-5bh4q",
                "generateName": "coredns-789789675-",
                "namespace": "kube-system",
                "uid": "f7813eaf-9ffc-4a8b-8ef4-e8843b19e1a4",
                "resourceVersion": "1053",
                "creationTimestamp": "2023-12-26T14:14:17Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true",
                    "pod-template-hash": "789789675",
                    "version": "v20"
                },
                "annotations": {
                    "prometheus.io/port": "9153"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-789789675",
                        "uid": "1c206b61-56b2-48f8-859b-c11303d633cc",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "custom-config-volume",
                        "configMap": {
                            "name": "coredns-custom",
                            "defaultMode": 420,
                            "optional": true
                        }
                    },
                    {
                        "name": "tmp",
                        "emptyDir": {}
                    },
                    {
                        "name": "kube-api-access-4fhlw",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "mcr.microsoft.com/oss/kubernetes/coredns:v1.9.4",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "3",
                                "memory": "500Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "custom-config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns/custom"
                            },
                            {
                                "name": "tmp",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "kube-api-access-4fhlw",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false,
                            "procMount": "Default"
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "aks-default-20426481-vmss000000",
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/cluster",
                                            "operator": "Exists"
                                        },
                                        {
                                            "key": "type",
                                            "operator": "NotIn",
                                            "values": [
                                                "virtual-kubelet"
                                            ]
                                        },
                                        {
                                            "key": "kubernetes.io/os",
                                            "operator": "In",
                                            "values": [
                                                "linux"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/mode",
                                            "operator": "In",
                                            "values": [
                                                "system"
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 10,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "topology.kubernetes.io/zone"
                                }
                            },
                            {
                                "weight": 5,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 30
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 30
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:14:17Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:14:19Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:14:19Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:14:17Z"
                    }
                ],
                "hostIP": "10.224.0.4",
                "podIP": "10.244.0.8",
                "podIPs": [
                    {
                        "ip": "10.244.0.8"
                    }
                ],
                "startTime": "2023-12-26T14:14:17Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-26T14:14:18Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes/coredns:v1.9.4",
                        "imageID": "sha256:4973d030453ebba0706b29c636612e8dcb299d34500ac5466ce535e0c53b866f",
                        "containerID": "containerd://6efc30db5bca85b66aa6a4129b23aa3d83d812f7204ffa11cb001be72f707400",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-789789675-lnrr5",
                "generateName": "coredns-789789675-",
                "namespace": "kube-system",
                "uid": "e01ff47b-eafd-4f93-b8ca-c2d93bc55e17",
                "resourceVersion": "1110",
                "creationTimestamp": "2023-12-26T14:13:27Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true",
                    "pod-template-hash": "789789675",
                    "version": "v20"
                },
                "annotations": {
                    "prometheus.io/port": "9153"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-789789675",
                        "uid": "1c206b61-56b2-48f8-859b-c11303d633cc",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "custom-config-volume",
                        "configMap": {
                            "name": "coredns-custom",
                            "defaultMode": 420,
                            "optional": true
                        }
                    },
                    {
                        "name": "tmp",
                        "emptyDir": {}
                    },
                    {
                        "name": "kube-api-access-rs2p2",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "mcr.microsoft.com/oss/kubernetes/coredns:v1.9.4",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "3",
                                "memory": "500Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "custom-config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns/custom"
                            },
                            {
                                "name": "tmp",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "kube-api-access-rs2p2",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false,
                            "procMount": "Default"
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "aks-default-20426481-vmss000000",
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/cluster",
                                            "operator": "Exists"
                                        },
                                        {
                                            "key": "type",
                                            "operator": "NotIn",
                                            "values": [
                                                "virtual-kubelet"
                                            ]
                                        },
                                        {
                                            "key": "kubernetes.io/os",
                                            "operator": "In",
                                            "values": [
                                                "linux"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/mode",
                                            "operator": "In",
                                            "values": [
                                                "system"
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 10,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "topology.kubernetes.io/zone"
                                }
                            },
                            {
                                "weight": 5,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 30
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 30
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:14:13Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:14:23Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:14:23Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:14:13Z"
                    }
                ],
                "hostIP": "10.224.0.4",
                "podIP": "10.244.0.3",
                "podIPs": [
                    {
                        "ip": "10.244.0.3"
                    }
                ],
                "startTime": "2023-12-26T14:14:13Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-26T14:14:14Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes/coredns:v1.9.4",
                        "imageID": "sha256:4973d030453ebba0706b29c636612e8dcb299d34500ac5466ce535e0c53b866f",
                        "containerID": "containerd://4aef041c7c2892953b920b29e34f46e348a9a79e4650af8103b99f22528fe007",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-autoscaler-649b947bbd-wxhp6",
                "generateName": "coredns-autoscaler-649b947bbd-",
                "namespace": "kube-system",
                "uid": "7b29f971-4940-40fe-b007-419029bb9e67",
                "resourceVersion": "985",
                "creationTimestamp": "2023-12-26T14:13:27Z",
                "labels": {
                    "k8s-app": "coredns-autoscaler",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-hash": "649b947bbd"
                },
                "annotations": {
                    "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                    "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-autoscaler-649b947bbd",
                        "uid": "8ddd4239-61b5-4839-ad0a-c5f28deb21a8",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-api-access-dtgj9",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "autoscaler",
                        "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.8",
                        "command": [
                            "/cluster-proportional-autoscaler",
                            "--namespace=kube-system",
                            "--configmap=coredns-autoscaler",
                            "--target=deployment/coredns",
                            "--default-params={\"ladder\":{\"coresToReplicas\":[[1,2],[512,3],[1024,4],[2048,5]],\"nodesToReplicas\":[[1,2],[8,3],[16,4],[32,5]]}}",
                            "--logtostderr=true",
                            "--v=2"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "500Mi"
                            },
                            "requests": {
                                "cpu": "20m",
                                "memory": "10Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kube-api-access-dtgj9",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/last-poll",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "coredns-autoscaler",
                "serviceAccount": "coredns-autoscaler",
                "nodeName": "aks-default-20426481-vmss000000",
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/cluster",
                                            "operator": "Exists"
                                        },
                                        {
                                            "key": "type",
                                            "operator": "NotIn",
                                            "values": [
                                                "virtual-kubelet"
                                            ]
                                        },
                                        {
                                            "key": "kubernetes.io/os",
                                            "operator": "In",
                                            "values": [
                                                "linux"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/mode",
                                            "operator": "In",
                                            "values": [
                                                "system"
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 30
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 30
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:14:13Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:14:15Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:14:15Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:14:13Z"
                    }
                ],
                "hostIP": "10.224.0.4",
                "podIP": "10.244.0.7",
                "podIPs": [
                    {
                        "ip": "10.244.0.7"
                    }
                ],
                "startTime": "2023-12-26T14:14:13Z",
                "containerStatuses": [
                    {
                        "name": "autoscaler",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-26T14:14:14Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.8",
                        "imageID": "sha256:fa16a85fc719737b4239817a8e622cc787dd1c7594e63a68b52155e9d3929843",
                        "containerID": "containerd://370b3afaf3d8964774d80aec0a65fbdfbc99d79887de4de421f5b688c439f1df",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-824fw",
                "generateName": "csi-azuredisk-node-",
                "namespace": "kube-system",
                "uid": "f9caf01c-9896-4feb-94a7-2483843150f2",
                "resourceVersion": "819",
                "creationTimestamp": "2023-12-26T14:13:32Z",
                "labels": {
                    "app": "csi-azuredisk-node",
                    "controller-revision-hash": "7b786bd8bb",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "csi-azuredisk-node",
                        "uid": "42a9f65b-f9db-45d5-83b6-c9c10f2b2089",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "socket-dir",
                        "hostPath": {
                            "path": "/var/lib/kubelet/plugins/disk.csi.azure.com",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "mountpoint-dir",
                        "hostPath": {
                            "path": "/var/lib/kubelet/",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "registration-dir",
                        "hostPath": {
                            "path": "/var/lib/kubelet/plugins_registry/",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "azure-cred",
                        "hostPath": {
                            "path": "/etc/kubernetes/",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "device-dir",
                        "hostPath": {
                            "path": "/dev",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "sys-devices-dir",
                        "hostPath": {
                            "path": "/sys/bus/scsi/devices",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "scsi-host-dir",
                        "hostPath": {
                            "path": "/sys/class/scsi_host/",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "kube-api-access-nnc5d",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "liveness-probe",
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.10.0",
                        "args": [
                            "--csi-address=/csi/csi.sock",
                            "--probe-timeout=3s",
                            "--health-port=29603",
                            "--v=2"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "100Mi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "socket-dir",
                                "mountPath": "/csi"
                            },
                            {
                                "name": "kube-api-access-nnc5d",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    },
                    {
                        "name": "node-driver-registrar",
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.8.0",
                        "args": [
                            "--csi-address=$(ADDRESS)",
                            "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                            "--v=2"
                        ],
                        "env": [
                            {
                                "name": "ADDRESS",
                                "value": "/csi/csi.sock"
                            },
                            {
                                "name": "DRIVER_REG_SOCK_PATH",
                                "value": "/var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "100Mi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "socket-dir",
                                "mountPath": "/csi"
                            },
                            {
                                "name": "registration-dir",
                                "mountPath": "/registration"
                            },
                            {
                                "name": "kube-api-access-nnc5d",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/csi-node-driver-registrar",
                                    "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                                    "--mode=kubelet-registration-probe"
                                ]
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 30,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    },
                    {
                        "name": "azuredisk",
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.28.4",
                        "args": [
                            "--v=5",
                            "--endpoint=$(CSI_ENDPOINT)",
                            "--nodeid=$(KUBE_NODE_NAME)",
                            "--enable-perf-optimization=true"
                        ],
                        "ports": [
                            {
                                "name": "healthz",
                                "hostPort": 29603,
                                "containerPort": 29603,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "AZURE_CREDENTIAL_FILE",
                                "value": "/etc/kubernetes/azure.json"
                            },
                            {
                                "name": "CSI_ENDPOINT",
                                "value": "unix:///csi/csi.sock"
                            },
                            {
                                "name": "KUBE_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "200Mi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "socket-dir",
                                "mountPath": "/csi"
                            },
                            {
                                "name": "mountpoint-dir",
                                "mountPath": "/var/lib/kubelet/",
                                "mountPropagation": "Bidirectional"
                            },
                            {
                                "name": "azure-cred",
                                "mountPath": "/etc/kubernetes/"
                            },
                            {
                                "name": "device-dir",
                                "mountPath": "/dev"
                            },
                            {
                                "name": "sys-devices-dir",
                                "mountPath": "/sys/bus/scsi/devices"
                            },
                            {
                                "name": "scsi-host-dir",
                                "mountPath": "/sys/class/scsi_host/"
                            },
                            {
                                "name": "kube-api-access-nnc5d",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": "healthz",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "timeoutSeconds": 10,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "csi-azuredisk-node-sa",
                "serviceAccount": "csi-azuredisk-node-sa",
                "nodeName": "aks-default-20426481-vmss000000",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-default-20426481-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:43Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:47Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:47Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:32Z"
                    }
                ],
                "hostIP": "10.224.0.4",
                "podIP": "10.224.0.4",
                "podIPs": [
                    {
                        "ip": "10.224.0.4"
                    }
                ],
                "startTime": "2023-12-26T14:13:43Z",
                "containerStatuses": [
                    {
                        "name": "azuredisk",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-26T14:13:46Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.28.4",
                        "imageID": "sha256:8f263e4f0f8e2af5c770992cfa498770cfdd80568e901792dc51d1fb0730064a",
                        "containerID": "containerd://4f936a0d853db091a4d84cb4192a2e0881c23c037fe383e2087a663ee01ba8d9",
                        "started": true
                    },
                    {
                        "name": "liveness-probe",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-26T14:13:44Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.10.0",
                        "imageID": "sha256:a0a744de06b9862ee665fcf47a17ec3425f67915a2e603f5636f6eba17378c7e",
                        "containerID": "containerd://02c4d59f567cea92cef0411fa743c6722459c8782c1e80848140d858fb4ff826",
                        "started": true
                    },
                    {
                        "name": "node-driver-registrar",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-26T14:13:45Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.8.0",
                        "imageID": "sha256:aa15d611f49d8331e2266cf02d8f5fb0d32caad598897433fbd46234b88ebaf4",
                        "containerID": "containerd://b4efdb1b0ec644a8f172e2d14effc5b5341c463f144ab1c7ab6564114e4837e0",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-qnmgb",
                "generateName": "csi-azuredisk-node-",
                "namespace": "kube-system",
                "uid": "85146e0f-d403-4fd7-a06b-fd4f5519a2b2",
                "resourceVersion": "740",
                "creationTimestamp": "2023-12-26T14:13:37Z",
                "labels": {
                    "app": "csi-azuredisk-node",
                    "controller-revision-hash": "7b786bd8bb",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "csi-azuredisk-node",
                        "uid": "42a9f65b-f9db-45d5-83b6-c9c10f2b2089",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "socket-dir",
                        "hostPath": {
                            "path": "/var/lib/kubelet/plugins/disk.csi.azure.com",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "mountpoint-dir",
                        "hostPath": {
                            "path": "/var/lib/kubelet/",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "registration-dir",
                        "hostPath": {
                            "path": "/var/lib/kubelet/plugins_registry/",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "azure-cred",
                        "hostPath": {
                            "path": "/etc/kubernetes/",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "device-dir",
                        "hostPath": {
                            "path": "/dev",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "sys-devices-dir",
                        "hostPath": {
                            "path": "/sys/bus/scsi/devices",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "scsi-host-dir",
                        "hostPath": {
                            "path": "/sys/class/scsi_host/",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "kube-api-access-lrdw8",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "liveness-probe",
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.10.0",
                        "args": [
                            "--csi-address=/csi/csi.sock",
                            "--probe-timeout=3s",
                            "--health-port=29603",
                            "--v=2"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "100Mi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "socket-dir",
                                "mountPath": "/csi"
                            },
                            {
                                "name": "kube-api-access-lrdw8",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    },
                    {
                        "name": "node-driver-registrar",
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.8.0",
                        "args": [
                            "--csi-address=$(ADDRESS)",
                            "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                            "--v=2"
                        ],
                        "env": [
                            {
                                "name": "ADDRESS",
                                "value": "/csi/csi.sock"
                            },
                            {
                                "name": "DRIVER_REG_SOCK_PATH",
                                "value": "/var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "100Mi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "socket-dir",
                                "mountPath": "/csi"
                            },
                            {
                                "name": "registration-dir",
                                "mountPath": "/registration"
                            },
                            {
                                "name": "kube-api-access-lrdw8",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/csi-node-driver-registrar",
                                    "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                                    "--mode=kubelet-registration-probe"
                                ]
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 30,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    },
                    {
                        "name": "azuredisk",
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.28.4",
                        "args": [
                            "--v=5",
                            "--endpoint=$(CSI_ENDPOINT)",
                            "--nodeid=$(KUBE_NODE_NAME)",
                            "--enable-perf-optimization=true"
                        ],
                        "ports": [
                            {
                                "name": "healthz",
                                "hostPort": 29603,
                                "containerPort": 29603,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "KUBE_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "AZURE_CREDENTIAL_FILE",
                                "value": "/etc/kubernetes/azure.json"
                            },
                            {
                                "name": "CSI_ENDPOINT",
                                "value": "unix:///csi/csi.sock"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "200Mi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "socket-dir",
                                "mountPath": "/csi"
                            },
                            {
                                "name": "mountpoint-dir",
                                "mountPath": "/var/lib/kubelet/",
                                "mountPropagation": "Bidirectional"
                            },
                            {
                                "name": "azure-cred",
                                "mountPath": "/etc/kubernetes/"
                            },
                            {
                                "name": "device-dir",
                                "mountPath": "/dev"
                            },
                            {
                                "name": "sys-devices-dir",
                                "mountPath": "/sys/bus/scsi/devices"
                            },
                            {
                                "name": "scsi-host-dir",
                                "mountPath": "/sys/class/scsi_host/"
                            },
                            {
                                "name": "kube-api-access-lrdw8",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": "healthz",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "timeoutSeconds": 10,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "csi-azuredisk-node-sa",
                "serviceAccount": "csi-azuredisk-node-sa",
                "nodeName": "aks-default-20426481-vmss000001",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-default-20426481-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:37Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:41Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:41Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:37Z"
                    }
                ],
                "hostIP": "10.224.0.5",
                "podIP": "10.224.0.5",
                "podIPs": [
                    {
                        "ip": "10.224.0.5"
                    }
                ],
                "startTime": "2023-12-26T14:13:37Z",
                "containerStatuses": [
                    {
                        "name": "azuredisk",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-26T14:13:40Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.28.4",
                        "imageID": "sha256:8f263e4f0f8e2af5c770992cfa498770cfdd80568e901792dc51d1fb0730064a",
                        "containerID": "containerd://7fb5c3fe605cdc45449ee330a8f97fbc288fed24c58778e5704d29056f61cd9b",
                        "started": true
                    },
                    {
                        "name": "liveness-probe",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-26T14:13:39Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.10.0",
                        "imageID": "sha256:a0a744de06b9862ee665fcf47a17ec3425f67915a2e603f5636f6eba17378c7e",
                        "containerID": "containerd://ec4352da2c41e8e91c8728f66660eb79629fc5007f5b92fd2f25bcd933ec615d",
                        "started": true
                    },
                    {
                        "name": "node-driver-registrar",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-26T14:13:40Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.8.0",
                        "imageID": "sha256:aa15d611f49d8331e2266cf02d8f5fb0d32caad598897433fbd46234b88ebaf4",
                        "containerID": "containerd://f818b13e2c8e4919e55edf11e6a43ef004cb19c7135e52c06b9f882fd393ae12",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-lnlt2",
                "generateName": "csi-azurefile-node-",
                "namespace": "kube-system",
                "uid": "196e9b8a-a289-4322-af86-92dce5b46b78",
                "resourceVersion": "821",
                "creationTimestamp": "2023-12-26T14:13:32Z",
                "labels": {
                    "app": "csi-azurefile-node",
                    "controller-revision-hash": "75d7989bfc",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "csi-azurefile-node",
                        "uid": "d928ec23-9d46-4f22-ad5b-f0d24bb5451e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "socket-dir",
                        "hostPath": {
                            "path": "/var/lib/kubelet/plugins/file.csi.azure.com",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "mountpoint-dir",
                        "hostPath": {
                            "path": "/var/lib/kubelet/",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "registration-dir",
                        "hostPath": {
                            "path": "/var/lib/kubelet/plugins_registry/",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "azure-cred",
                        "hostPath": {
                            "path": "/etc/kubernetes/",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "device-dir",
                        "hostPath": {
                            "path": "/dev",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "kube-api-access-gqpw7",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "liveness-probe",
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.10.0",
                        "args": [
                            "--csi-address=/csi/csi.sock",
                            "--probe-timeout=3s",
                            "--health-port=29613",
                            "--v=2"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "100Mi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "socket-dir",
                                "mountPath": "/csi"
                            },
                            {
                                "name": "kube-api-access-gqpw7",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    },
                    {
                        "name": "node-driver-registrar",
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.8.0",
                        "args": [
                            "--csi-address=$(ADDRESS)",
                            "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                            "--v=2"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "ADDRESS",
                                "value": "/csi/csi.sock"
                            },
                            {
                                "name": "DRIVER_REG_SOCK_PATH",
                                "value": "/var/lib/kubelet/plugins/file.csi.azure.com/csi.sock"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "100Mi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "socket-dir",
                                "mountPath": "/csi"
                            },
                            {
                                "name": "registration-dir",
                                "mountPath": "/registration"
                            },
                            {
                                "name": "kube-api-access-gqpw7",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/csi-node-driver-registrar",
                                    "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                                    "--mode=kubelet-registration-probe"
                                ]
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 30,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    },
                    {
                        "name": "azurefile",
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.28.6",
                        "args": [
                            "--v=5",
                            "--endpoint=$(CSI_ENDPOINT)",
                            "--nodeid=$(KUBE_NODE_NAME)",
                            "--enable-get-volume-stats=true",
                            "--mount-permissions=0777"
                        ],
                        "ports": [
                            {
                                "name": "healthz",
                                "hostPort": 29613,
                                "containerPort": 29613,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "KUBE_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "AZURE_CREDENTIAL_FILE",
                                "value": "/etc/kubernetes/azure.json"
                            },
                            {
                                "name": "CSI_ENDPOINT",
                                "value": "unix:///csi/csi.sock"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "400Mi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "socket-dir",
                                "mountPath": "/csi"
                            },
                            {
                                "name": "mountpoint-dir",
                                "mountPath": "/var/lib/kubelet/",
                                "mountPropagation": "Bidirectional"
                            },
                            {
                                "name": "azure-cred",
                                "mountPath": "/etc/kubernetes/"
                            },
                            {
                                "name": "device-dir",
                                "mountPath": "/dev"
                            },
                            {
                                "name": "kube-api-access-gqpw7",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": "healthz",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "timeoutSeconds": 10,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "csi-azurefile-node-sa",
                "serviceAccount": "csi-azurefile-node-sa",
                "nodeName": "aks-default-20426481-vmss000000",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-default-20426481-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:43Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:47Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:47Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:32Z"
                    }
                ],
                "hostIP": "10.224.0.4",
                "podIP": "10.224.0.4",
                "podIPs": [
                    {
                        "ip": "10.224.0.4"
                    }
                ],
                "startTime": "2023-12-26T14:13:43Z",
                "containerStatuses": [
                    {
                        "name": "azurefile",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-26T14:13:46Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.28.6",
                        "imageID": "sha256:6399d0626d41df60ba38e429020006294224aebde7647ab03afe71292a59a2c4",
                        "containerID": "containerd://c7a5e912a02d328b0242505b5228d4b07a03ae49a9422576c9200a4f3e508b2b",
                        "started": true
                    },
                    {
                        "name": "liveness-probe",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-26T14:13:45Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.10.0",
                        "imageID": "sha256:a0a744de06b9862ee665fcf47a17ec3425f67915a2e603f5636f6eba17378c7e",
                        "containerID": "containerd://994e1c03df52ab15f703271ae53f467aafb22c8e3a336b1893d5fb5fbbe03862",
                        "started": true
                    },
                    {
                        "name": "node-driver-registrar",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-26T14:13:45Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.8.0",
                        "imageID": "sha256:aa15d611f49d8331e2266cf02d8f5fb0d32caad598897433fbd46234b88ebaf4",
                        "containerID": "containerd://e22efa6787c099896c47a288c9648b1c2f264d97416a8096b88ca01802dfcd08",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-w9z7h",
                "generateName": "csi-azurefile-node-",
                "namespace": "kube-system",
                "uid": "4cd2d92f-45c0-4780-80ce-dba5d16181ea",
                "resourceVersion": "742",
                "creationTimestamp": "2023-12-26T14:13:37Z",
                "labels": {
                    "app": "csi-azurefile-node",
                    "controller-revision-hash": "75d7989bfc",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "csi-azurefile-node",
                        "uid": "d928ec23-9d46-4f22-ad5b-f0d24bb5451e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "socket-dir",
                        "hostPath": {
                            "path": "/var/lib/kubelet/plugins/file.csi.azure.com",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "mountpoint-dir",
                        "hostPath": {
                            "path": "/var/lib/kubelet/",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "registration-dir",
                        "hostPath": {
                            "path": "/var/lib/kubelet/plugins_registry/",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "azure-cred",
                        "hostPath": {
                            "path": "/etc/kubernetes/",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "device-dir",
                        "hostPath": {
                            "path": "/dev",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "kube-api-access-gkc6d",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "liveness-probe",
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.10.0",
                        "args": [
                            "--csi-address=/csi/csi.sock",
                            "--probe-timeout=3s",
                            "--health-port=29613",
                            "--v=2"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "100Mi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "socket-dir",
                                "mountPath": "/csi"
                            },
                            {
                                "name": "kube-api-access-gkc6d",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    },
                    {
                        "name": "node-driver-registrar",
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.8.0",
                        "args": [
                            "--csi-address=$(ADDRESS)",
                            "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                            "--v=2"
                        ],
                        "env": [
                            {
                                "name": "ADDRESS",
                                "value": "/csi/csi.sock"
                            },
                            {
                                "name": "DRIVER_REG_SOCK_PATH",
                                "value": "/var/lib/kubelet/plugins/file.csi.azure.com/csi.sock"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "100Mi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "socket-dir",
                                "mountPath": "/csi"
                            },
                            {
                                "name": "registration-dir",
                                "mountPath": "/registration"
                            },
                            {
                                "name": "kube-api-access-gkc6d",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/csi-node-driver-registrar",
                                    "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                                    "--mode=kubelet-registration-probe"
                                ]
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 30,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    },
                    {
                        "name": "azurefile",
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.28.6",
                        "args": [
                            "--v=5",
                            "--endpoint=$(CSI_ENDPOINT)",
                            "--nodeid=$(KUBE_NODE_NAME)",
                            "--enable-get-volume-stats=true",
                            "--mount-permissions=0777"
                        ],
                        "ports": [
                            {
                                "name": "healthz",
                                "hostPort": 29613,
                                "containerPort": 29613,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "AZURE_CREDENTIAL_FILE",
                                "value": "/etc/kubernetes/azure.json"
                            },
                            {
                                "name": "CSI_ENDPOINT",
                                "value": "unix:///csi/csi.sock"
                            },
                            {
                                "name": "KUBE_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "400Mi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "socket-dir",
                                "mountPath": "/csi"
                            },
                            {
                                "name": "mountpoint-dir",
                                "mountPath": "/var/lib/kubelet/",
                                "mountPropagation": "Bidirectional"
                            },
                            {
                                "name": "azure-cred",
                                "mountPath": "/etc/kubernetes/"
                            },
                            {
                                "name": "device-dir",
                                "mountPath": "/dev"
                            },
                            {
                                "name": "kube-api-access-gkc6d",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": "healthz",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "timeoutSeconds": 10,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "csi-azurefile-node-sa",
                "serviceAccount": "csi-azurefile-node-sa",
                "nodeName": "aks-default-20426481-vmss000001",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-default-20426481-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:37Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:41Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:41Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:37Z"
                    }
                ],
                "hostIP": "10.224.0.5",
                "podIP": "10.224.0.5",
                "podIPs": [
                    {
                        "ip": "10.224.0.5"
                    }
                ],
                "startTime": "2023-12-26T14:13:37Z",
                "containerStatuses": [
                    {
                        "name": "azurefile",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-26T14:13:40Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.28.6",
                        "imageID": "sha256:6399d0626d41df60ba38e429020006294224aebde7647ab03afe71292a59a2c4",
                        "containerID": "containerd://0d77e9c48a1f87218dbd4e5c079d12dbfcde5bdaffae5a55470ab89c6f24cdae",
                        "started": true
                    },
                    {
                        "name": "liveness-probe",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-26T14:13:39Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.10.0",
                        "imageID": "sha256:a0a744de06b9862ee665fcf47a17ec3425f67915a2e603f5636f6eba17378c7e",
                        "containerID": "containerd://d9c5c1e597dc0e12e053bd3d6c529d4f9fe52f8e7275720117bfb69f5423ae7c",
                        "started": true
                    },
                    {
                        "name": "node-driver-registrar",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-26T14:13:40Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.8.0",
                        "imageID": "sha256:aa15d611f49d8331e2266cf02d8f5fb0d32caad598897433fbd46234b88ebaf4",
                        "containerID": "containerd://ba12ee142924e8e64ffbc7f0c4e528ec1b92e5ddfa799cebfb7f32ae70c3841a",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "konnectivity-agent-b95494c76-rx82r",
                "generateName": "konnectivity-agent-b95494c76-",
                "namespace": "kube-system",
                "uid": "5aea78b5-98f8-4e90-9c1f-f88caab6d4b4",
                "resourceVersion": "1013",
                "creationTimestamp": "2023-12-26T14:13:28Z",
                "labels": {
                    "app": "konnectivity-agent",
                    "component": "tunnel",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-hash": "b95494c76"
                },
                "annotations": {
                    "checksum/client-cert": "b3301c0c14196dd6304f83df29b68da9785530ba5997fc51967f2cc2f042be95"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "konnectivity-agent-b95494c76",
                        "uid": "344d2c11-bda6-4083-ad8d-48b003fb6dfb",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "certs",
                        "secret": {
                            "secretName": "konnectivity-certs",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "konnectivity-agent",
                        "image": "mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.0.33-hotfix.20221110",
                        "command": [
                            "/proxy-agent"
                        ],
                        "args": [
                            "--proxy-server-host=murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io",
                            "--proxy-server-port=443",
                            "--health-server-port=8082",
                            "--keepalive-time=30s",
                            "--agent-key=/certs/client.key",
                            "--agent-cert=/certs/client.crt",
                            "--ca-cert=/certs/ca.crt",
                            "--alpn-proto=konnectivity",
                            "-v=2"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "1",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "20m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "certs",
                                "mountPath": "/certs"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8082,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "timeoutSeconds": 60,
                            "periodSeconds": 60,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8082,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "konnectivity-agent",
                "serviceAccount": "konnectivity-agent",
                "automountServiceAccountToken": false,
                "nodeName": "aks-default-20426481-vmss000000",
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/cluster",
                                            "operator": "Exists"
                                        },
                                        {
                                            "key": "type",
                                            "operator": "NotIn",
                                            "values": [
                                                "virtual-kubelet"
                                            ]
                                        },
                                        {
                                            "key": "kubernetes.io/os",
                                            "operator": "In",
                                            "values": [
                                                "linux"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/mode",
                                            "operator": "In",
                                            "values": [
                                                "system"
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 10,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "app",
                                                "operator": "In",
                                                "values": [
                                                    "konnectivity-agent"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "topology.kubernetes.io/zone"
                                }
                            },
                            {
                                "weight": 5,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "app",
                                                "operator": "In",
                                                "values": [
                                                    "konnectivity-agent"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 30
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 30
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:14:13Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:14:16Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:14:16Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:14:13Z"
                    }
                ],
                "hostIP": "10.224.0.4",
                "podIP": "10.244.0.5",
                "podIPs": [
                    {
                        "ip": "10.244.0.5"
                    }
                ],
                "startTime": "2023-12-26T14:14:13Z",
                "containerStatuses": [
                    {
                        "name": "konnectivity-agent",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-26T14:14:14Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.0.33-hotfix.20221110",
                        "imageID": "sha256:d8d8810820ff9043fe0dab5c9650a2bbc5763163206bb1720190378c463b6a27",
                        "containerID": "containerd://3f885666be41512c15b25e6200c0f3f68c1e53b79f1d75cecf454fb6aebd30b1",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "konnectivity-agent-b95494c76-zfrzk",
                "generateName": "konnectivity-agent-b95494c76-",
                "namespace": "kube-system",
                "uid": "18ccca4a-d1a6-43e4-8851-6188b96a02cb",
                "resourceVersion": "1010",
                "creationTimestamp": "2023-12-26T14:13:28Z",
                "labels": {
                    "app": "konnectivity-agent",
                    "component": "tunnel",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-hash": "b95494c76"
                },
                "annotations": {
                    "checksum/client-cert": "b3301c0c14196dd6304f83df29b68da9785530ba5997fc51967f2cc2f042be95"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "konnectivity-agent-b95494c76",
                        "uid": "344d2c11-bda6-4083-ad8d-48b003fb6dfb",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "certs",
                        "secret": {
                            "secretName": "konnectivity-certs",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "konnectivity-agent",
                        "image": "mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.0.33-hotfix.20221110",
                        "command": [
                            "/proxy-agent"
                        ],
                        "args": [
                            "--proxy-server-host=murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io",
                            "--proxy-server-port=443",
                            "--health-server-port=8082",
                            "--keepalive-time=30s",
                            "--agent-key=/certs/client.key",
                            "--agent-cert=/certs/client.crt",
                            "--ca-cert=/certs/ca.crt",
                            "--alpn-proto=konnectivity",
                            "-v=2"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "1",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "20m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "certs",
                                "mountPath": "/certs"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8082,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "timeoutSeconds": 60,
                            "periodSeconds": 60,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8082,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "konnectivity-agent",
                "serviceAccount": "konnectivity-agent",
                "automountServiceAccountToken": false,
                "nodeName": "aks-default-20426481-vmss000000",
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/cluster",
                                            "operator": "Exists"
                                        },
                                        {
                                            "key": "type",
                                            "operator": "NotIn",
                                            "values": [
                                                "virtual-kubelet"
                                            ]
                                        },
                                        {
                                            "key": "kubernetes.io/os",
                                            "operator": "In",
                                            "values": [
                                                "linux"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/mode",
                                            "operator": "In",
                                            "values": [
                                                "system"
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 10,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "app",
                                                "operator": "In",
                                                "values": [
                                                    "konnectivity-agent"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "topology.kubernetes.io/zone"
                                }
                            },
                            {
                                "weight": 5,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "app",
                                                "operator": "In",
                                                "values": [
                                                    "konnectivity-agent"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 30
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 30
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:14:13Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:14:16Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:14:16Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:14:13Z"
                    }
                ],
                "hostIP": "10.224.0.4",
                "podIP": "10.244.0.6",
                "podIPs": [
                    {
                        "ip": "10.244.0.6"
                    }
                ],
                "startTime": "2023-12-26T14:14:13Z",
                "containerStatuses": [
                    {
                        "name": "konnectivity-agent",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-26T14:14:14Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.0.33-hotfix.20221110",
                        "imageID": "sha256:d8d8810820ff9043fe0dab5c9650a2bbc5763163206bb1720190378c463b6a27",
                        "containerID": "containerd://36395e870d310a6bfd1122b085e1dd03c707f7d17e8e55846dd0b19d2b582a31",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-64gzd",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "71d58931-d197-4119-9fb0-353994a7188b",
                "resourceVersion": "738",
                "creationTimestamp": "2023-12-26T14:13:37Z",
                "labels": {
                    "component": "kube-proxy",
                    "controller-revision-hash": "548c66fb7f",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-generation": "1",
                    "tier": "node"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "be5cef7f-12c4-48dd-ab13-d69cf12f6d4b",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/var/lib/kubelet",
                            "type": ""
                        }
                    },
                    {
                        "name": "certificates",
                        "hostPath": {
                            "path": "/etc/kubernetes/certs",
                            "type": ""
                        }
                    },
                    {
                        "name": "iptableslock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "sysctls",
                        "hostPath": {
                            "path": "/etc/sysctl.d",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "kube-api-access-tl68t",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "initContainers": [
                    {
                        "name": "kube-proxy-bootstrap",
                        "image": "mcr.microsoft.com/mirror/docker/library/busybox:1.35",
                        "command": [
                            "/bin/sh",
                            "-c",
                            "SYSCTL=/proc/sys/net/netfilter/nf_conntrack_max\necho \"Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)\"\nDESIRED=$(awk -F= '/net.netfilter.nf_conntrack_max/ {print $2}' /etc/sysctl.d/999-sysctl-aks.conf)\nif [ -z \"$DESIRED\" ]; then\n  DESIRED=$((32768*$(nproc)))\n  if [ $DESIRED -lt 131072 ]; then\n    DESIRED=131072\n  fi\n\n  echo \"AKS custom config for net.netfilter.nf_conntrack_max not set.\"\n  echo \"Setting nf_conntrack_max to $DESIRED (32768 * $(nproc) cores, minimum 131072).\"\n  echo $DESIRED \u003e $SYSCTL\nelse\n  echo \"AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED.\"\n  echo \"Setting nf_conntrack_max to $DESIRED.\"\n  echo $DESIRED \u003e $SYSCTL\nfi\n"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "sysctls",
                                "mountPath": "/etc/sysctl.d"
                            },
                            {
                                "name": "modules",
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-tl68t",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.27.7-1",
                        "command": [
                            "kube-proxy",
                            "--conntrack-max-per-core=0",
                            "--metrics-bind-address=0.0.0.0:10249",
                            "--cluster-cidr=10.244.0.0/16",
                            "--detect-local-mode=ClusterCIDR",
                            "--pod-interface-name-prefix=",
                            "--v=3"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/var/lib/kubelet"
                            },
                            {
                                "name": "certificates",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/certs"
                            },
                            {
                                "name": "iptableslock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "modules",
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-tl68t",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "aks-default-20426481-vmss000001",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-default-20426481-vmss000001"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:40Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:41Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:41Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:37Z"
                    }
                ],
                "hostIP": "10.224.0.5",
                "podIP": "10.224.0.5",
                "podIPs": [
                    {
                        "ip": "10.224.0.5"
                    }
                ],
                "startTime": "2023-12-26T14:13:37Z",
                "initContainerStatuses": [
                    {
                        "name": "kube-proxy-bootstrap",
                        "state": {
                            "terminated": {
                                "exitCode": 0,
                                "reason": "Completed",
                                "startedAt": "2023-12-26T14:13:39Z",
                                "finishedAt": "2023-12-26T14:13:39Z",
                                "containerID": "containerd://a4ceb2bf6156a0afb575741979b6141512e792af05dbf03ca2b8c2e8477b4c61"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/mirror/docker/library/busybox:1.35",
                        "imageID": "sha256:48af2784ec85ce2b8194c39b667bad46c5aac55704236a98777fe9c5bb98d241",
                        "containerID": "containerd://a4ceb2bf6156a0afb575741979b6141512e792af05dbf03ca2b8c2e8477b4c61"
                    }
                ],
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-26T14:13:41Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.27.7-1",
                        "imageID": "sha256:e75c0076e4f5e32a0b6135801136d2513254ea19a508017f95a76589b068a308",
                        "containerID": "containerd://be92254509c6e1a0bb67a107ab947e9be496899f41792cb9dd405aa9b8090f5f",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-jn5rp",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "cb414ca1-affe-46ea-9705-ffb195c71c1d",
                "resourceVersion": "816",
                "creationTimestamp": "2023-12-26T14:13:32Z",
                "labels": {
                    "component": "kube-proxy",
                    "controller-revision-hash": "548c66fb7f",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-generation": "1",
                    "tier": "node"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "be5cef7f-12c4-48dd-ab13-d69cf12f6d4b",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/var/lib/kubelet",
                            "type": ""
                        }
                    },
                    {
                        "name": "certificates",
                        "hostPath": {
                            "path": "/etc/kubernetes/certs",
                            "type": ""
                        }
                    },
                    {
                        "name": "iptableslock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "sysctls",
                        "hostPath": {
                            "path": "/etc/sysctl.d",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "kube-api-access-jjqts",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "initContainers": [
                    {
                        "name": "kube-proxy-bootstrap",
                        "image": "mcr.microsoft.com/mirror/docker/library/busybox:1.35",
                        "command": [
                            "/bin/sh",
                            "-c",
                            "SYSCTL=/proc/sys/net/netfilter/nf_conntrack_max\necho \"Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)\"\nDESIRED=$(awk -F= '/net.netfilter.nf_conntrack_max/ {print $2}' /etc/sysctl.d/999-sysctl-aks.conf)\nif [ -z \"$DESIRED\" ]; then\n  DESIRED=$((32768*$(nproc)))\n  if [ $DESIRED -lt 131072 ]; then\n    DESIRED=131072\n  fi\n\n  echo \"AKS custom config for net.netfilter.nf_conntrack_max not set.\"\n  echo \"Setting nf_conntrack_max to $DESIRED (32768 * $(nproc) cores, minimum 131072).\"\n  echo $DESIRED \u003e $SYSCTL\nelse\n  echo \"AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED.\"\n  echo \"Setting nf_conntrack_max to $DESIRED.\"\n  echo $DESIRED \u003e $SYSCTL\nfi\n"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "sysctls",
                                "mountPath": "/etc/sysctl.d"
                            },
                            {
                                "name": "modules",
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-jjqts",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.27.7-1",
                        "command": [
                            "kube-proxy",
                            "--conntrack-max-per-core=0",
                            "--metrics-bind-address=0.0.0.0:10249",
                            "--cluster-cidr=10.244.0.0/16",
                            "--detect-local-mode=ClusterCIDR",
                            "--pod-interface-name-prefix=",
                            "--v=3"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/var/lib/kubelet"
                            },
                            {
                                "name": "certificates",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/certs"
                            },
                            {
                                "name": "iptableslock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "modules",
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-jjqts",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "aks-default-20426481-vmss000000",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-default-20426481-vmss000000"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:46Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:47Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:47Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:13:32Z"
                    }
                ],
                "hostIP": "10.224.0.4",
                "podIP": "10.224.0.4",
                "podIPs": [
                    {
                        "ip": "10.224.0.4"
                    }
                ],
                "startTime": "2023-12-26T14:13:43Z",
                "initContainerStatuses": [
                    {
                        "name": "kube-proxy-bootstrap",
                        "state": {
                            "terminated": {
                                "exitCode": 0,
                                "reason": "Completed",
                                "startedAt": "2023-12-26T14:13:44Z",
                                "finishedAt": "2023-12-26T14:13:45Z",
                                "containerID": "containerd://7c1d47e009d84f9375d2c043d81247d276be09aab26862fff9aac7ee52dc92c9"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/mirror/docker/library/busybox:1.35",
                        "imageID": "sha256:48af2784ec85ce2b8194c39b667bad46c5aac55704236a98777fe9c5bb98d241",
                        "containerID": "containerd://7c1d47e009d84f9375d2c043d81247d276be09aab26862fff9aac7ee52dc92c9"
                    }
                ],
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-26T14:13:46Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.27.7-1",
                        "imageID": "sha256:e75c0076e4f5e32a0b6135801136d2513254ea19a508017f95a76589b068a308",
                        "containerID": "containerd://ce085ee7193c69670a13855b309936eddf39e68b0698408e44dbddfb9d07ff01",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "metrics-server-5955767688-jbkcx",
                "generateName": "metrics-server-5955767688-",
                "namespace": "kube-system",
                "uid": "6e3af4ad-3eb9-40ae-aa5b-be2f5e7ceb40",
                "resourceVersion": "1441",
                "creationTimestamp": "2023-12-26T14:14:22Z",
                "labels": {
                    "k8s-app": "metrics-server",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-hash": "5955767688"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "metrics-server-5955767688",
                        "uid": "3276b0d5-32d1-4dd5-bb43-7d835715430f",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "tmp-dir",
                        "emptyDir": {}
                    },
                    {
                        "name": "metrics-server-config-volume",
                        "configMap": {
                            "name": "metrics-server-config",
                            "defaultMode": 420,
                            "optional": true
                        }
                    },
                    {
                        "name": "kube-api-access-mcz8d",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "metrics-server-vpa",
                        "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.19",
                        "command": [
                            "/pod_nanny",
                            "--config-dir=/etc/config",
                            "--cpu=44m",
                            "--extra-cpu=0.5m",
                            "--memory=51Mi",
                            "--extra-memory=4Mi",
                            "--poll-period=180000",
                            "--threshold=5",
                            "--deployment=metrics-server",
                            "--container=metrics-server"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "MY_POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "MY_POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "300Mi"
                            },
                            "requests": {
                                "cpu": "5m",
                                "memory": "30Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "metrics-server-config-volume",
                                "mountPath": "/etc/config"
                            },
                            {
                                "name": "kube-api-access-mcz8d",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    },
                    {
                        "name": "metrics-server",
                        "image": "mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3",
                        "command": [
                            "/metrics-server",
                            "--kubelet-insecure-tls",
                            "--kubelet-preferred-address-types=InternalIP",
                            "--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                            "--cert-dir=/tmp",
                            "--secure-port=4443"
                        ],
                        "ports": [
                            {
                                "name": "ms-https",
                                "containerPort": 4443,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "45m",
                                "memory": "59Mi"
                            },
                            "requests": {
                                "cpu": "45m",
                                "memory": "59Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "tmp-dir",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "kube-api-access-mcz8d",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": "ms-https",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 20,
                            "timeoutSeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/readyz",
                                "port": "ms-https",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "metrics-server",
                "serviceAccount": "metrics-server",
                "nodeName": "aks-default-20426481-vmss000000",
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/cluster",
                                            "operator": "Exists"
                                        },
                                        {
                                            "key": "type",
                                            "operator": "NotIn",
                                            "values": [
                                                "virtual-kubelet"
                                            ]
                                        },
                                        {
                                            "key": "kubernetes.io/os",
                                            "operator": "In",
                                            "values": [
                                                "linux"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/mode",
                                            "operator": "In",
                                            "values": [
                                                "system"
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 10,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "metrics-server"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "topology.kubernetes.io/zone"
                                }
                            },
                            {
                                "weight": 5,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "metrics-server"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 30
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 30
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:14:22Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:15:33Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:15:33Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:14:22Z"
                    }
                ],
                "hostIP": "10.224.0.4",
                "podIP": "10.244.0.10",
                "podIPs": [
                    {
                        "ip": "10.244.0.10"
                    }
                ],
                "startTime": "2023-12-26T14:14:22Z",
                "containerStatuses": [
                    {
                        "name": "metrics-server",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-26T14:14:24Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3",
                        "imageID": "sha256:dc3fa6e8352e5890d46fe01ab84a7761a97de3d13a3d2858af461203532ba457",
                        "containerID": "containerd://29b3be8fcc894047f39b71e72c12497d8fc74458829bd8e56d71705e79d63235",
                        "started": true
                    },
                    {
                        "name": "metrics-server-vpa",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-26T14:14:24Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.19",
                        "imageID": "sha256:7b8e7ae7c6d3057b8e80ce0349d4103a739444dba5226b88ab5a347fda66792e",
                        "containerID": "containerd://4c9864bc68ab94d656dc9e8059b1d5bf117fbbabd97dcf450db8d56ff78d8028",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "metrics-server-5955767688-z8xcm",
                "generateName": "metrics-server-5955767688-",
                "namespace": "kube-system",
                "uid": "5a5006f7-1c71-43c2-afe7-df0f68568704",
                "resourceVersion": "1423",
                "creationTimestamp": "2023-12-26T14:14:22Z",
                "labels": {
                    "k8s-app": "metrics-server",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-hash": "5955767688"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "metrics-server-5955767688",
                        "uid": "3276b0d5-32d1-4dd5-bb43-7d835715430f",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "tmp-dir",
                        "emptyDir": {}
                    },
                    {
                        "name": "metrics-server-config-volume",
                        "configMap": {
                            "name": "metrics-server-config",
                            "defaultMode": 420,
                            "optional": true
                        }
                    },
                    {
                        "name": "kube-api-access-v25gh",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "metrics-server-vpa",
                        "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.19",
                        "command": [
                            "/pod_nanny",
                            "--config-dir=/etc/config",
                            "--cpu=44m",
                            "--extra-cpu=0.5m",
                            "--memory=51Mi",
                            "--extra-memory=4Mi",
                            "--poll-period=180000",
                            "--threshold=5",
                            "--deployment=metrics-server",
                            "--container=metrics-server"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "MY_POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "MY_POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "300Mi"
                            },
                            "requests": {
                                "cpu": "5m",
                                "memory": "30Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "metrics-server-config-volume",
                                "mountPath": "/etc/config"
                            },
                            {
                                "name": "kube-api-access-v25gh",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    },
                    {
                        "name": "metrics-server",
                        "image": "mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3",
                        "command": [
                            "/metrics-server",
                            "--kubelet-insecure-tls",
                            "--kubelet-preferred-address-types=InternalIP",
                            "--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                            "--cert-dir=/tmp",
                            "--secure-port=4443"
                        ],
                        "ports": [
                            {
                                "name": "ms-https",
                                "containerPort": 4443,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io:443"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "45m",
                                "memory": "59Mi"
                            },
                            "requests": {
                                "cpu": "45m",
                                "memory": "59Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "tmp-dir",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "kube-api-access-v25gh",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": "ms-https",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 20,
                            "timeoutSeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/readyz",
                                "port": "ms-https",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "metrics-server",
                "serviceAccount": "metrics-server",
                "nodeName": "aks-default-20426481-vmss000000",
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/cluster",
                                            "operator": "Exists"
                                        },
                                        {
                                            "key": "type",
                                            "operator": "NotIn",
                                            "values": [
                                                "virtual-kubelet"
                                            ]
                                        },
                                        {
                                            "key": "kubernetes.io/os",
                                            "operator": "In",
                                            "values": [
                                                "linux"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/mode",
                                            "operator": "In",
                                            "values": [
                                                "system"
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 10,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "metrics-server"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "topology.kubernetes.io/zone"
                                }
                            },
                            {
                                "weight": 5,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "metrics-server"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 30
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 30
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:14:22Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:15:33Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:15:33Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:14:22Z"
                    }
                ],
                "hostIP": "10.224.0.4",
                "podIP": "10.244.0.9",
                "podIPs": [
                    {
                        "ip": "10.244.0.9"
                    }
                ],
                "startTime": "2023-12-26T14:14:22Z",
                "containerStatuses": [
                    {
                        "name": "metrics-server",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-26T14:14:24Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3",
                        "imageID": "sha256:dc3fa6e8352e5890d46fe01ab84a7761a97de3d13a3d2858af461203532ba457",
                        "containerID": "containerd://f03f5f972153c002d6b07a90a7324321a2c24577a31c82de6876371b79674e29",
                        "started": true
                    },
                    {
                        "name": "metrics-server-vpa",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-26T14:14:24Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.19",
                        "imageID": "sha256:7b8e7ae7c6d3057b8e80ce0349d4103a739444dba5226b88ab5a347fda66792e",
                        "containerID": "containerd://1a6fbf085be2f83931543f4abfe3a72d4490a523c9609d16bf22810769a29be7",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        }
    ]
}
==== START logs for container azure-ip-masq-agent of pod kube-system/azure-ip-masq-agent-5nhnv ====
I1226 14:13:46.653378       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1226 14:13:46.678748       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1226 14:14:46.788790       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1226 14:14:46.789099       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1226 14:15:46.846002       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1226 14:15:46.846152       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1226 14:16:46.908855       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1226 14:16:46.908998       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1226 14:17:46.973840       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1226 14:17:46.974027       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1226 14:18:47.032091       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1226 14:18:47.032376       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1226 14:19:47.080561       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1226 14:19:47.080789       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1226 14:20:47.136547       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1226 14:20:47.136729       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1226 14:21:47.189339       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1226 14:21:47.189665       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1226 14:22:47.238543       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1226 14:22:47.238723       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1226 14:23:47.296473       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1226 14:23:47.296649       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1226 14:24:47.358930       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1226 14:24:47.359139       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
==== END logs for container azure-ip-masq-agent of pod kube-system/azure-ip-masq-agent-5nhnv ====
==== START logs for container azure-ip-masq-agent of pod kube-system/azure-ip-masq-agent-cnmb4 ====
I1226 14:13:41.234761       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1226 14:13:41.269441       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1226 14:14:41.382780       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1226 14:14:41.383417       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1226 14:15:41.446737       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1226 14:15:41.446869       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1226 14:16:41.458275       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1226 14:16:41.458441       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1226 14:17:41.501070       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1226 14:17:41.501205       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1226 14:18:41.565933       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1226 14:18:41.566064       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1226 14:19:41.617732       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1226 14:19:41.617861       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1226 14:20:41.682249       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1226 14:20:41.682387       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1226 14:21:41.739779       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1226 14:21:41.739934       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1226 14:22:41.793287       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1226 14:22:41.793431       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1226 14:23:41.854969       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1226 14:23:41.855153       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1226 14:24:41.922738       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1226 14:24:41.922887       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
==== END logs for container azure-ip-masq-agent of pod kube-system/azure-ip-masq-agent-cnmb4 ====
==== START logs for container cloud-node-manager of pod kube-system/cloud-node-manager-sqvfd ====
W1226 14:13:43.288015       1 client_config.go:618] Neither --kubeconfig nor --master was specified.  Using the inClusterConfig.  This might not work.
I1226 14:13:43.474980       1 nodemanager.go:103] Version: v1.27.8
I1226 14:13:43.475014       1 nodemanager.go:104] NodeName: aks-default-20426481-vmss000001
I1226 14:13:43.536811       1 nodemanager.go:152] Sending events to api server.
I1226 14:13:43.537081       1 nodemanager.go:148] Started cloud-node-manager
I1226 14:13:43.635199       1 nodemanager.go:375] Initializing node aks-default-20426481-vmss000001 with cloud provider
I1226 14:13:43.903831       1 nodemanager.go:438] Successfully initialized node aks-default-20426481-vmss000001 with cloud provider
I1226 14:13:43.904510       1 nodemanager.go:375] Initializing node aks-default-20426481-vmss000001 with cloud provider
I1226 14:13:43.910250       1 nodemanager.go:375] Initializing node aks-default-20426481-vmss000001 with cloud provider
==== END logs for container cloud-node-manager of pod kube-system/cloud-node-manager-sqvfd ====
==== START logs for container cloud-node-manager of pod kube-system/cloud-node-manager-tcdkd ====
W1226 14:13:48.740751       1 client_config.go:618] Neither --kubeconfig nor --master was specified.  Using the inClusterConfig.  This might not work.
I1226 14:13:48.880120       1 nodemanager.go:103] Version: v1.27.8
I1226 14:13:48.880158       1 nodemanager.go:104] NodeName: aks-default-20426481-vmss000000
I1226 14:13:48.929749       1 nodemanager.go:152] Sending events to api server.
I1226 14:13:48.930256       1 nodemanager.go:148] Started cloud-node-manager
I1226 14:13:49.044125       1 nodemanager.go:375] Initializing node aks-default-20426481-vmss000000 with cloud provider
I1226 14:13:49.186926       1 nodemanager.go:438] Successfully initialized node aks-default-20426481-vmss000000 with cloud provider
I1226 14:13:49.186993       1 nodemanager.go:375] Initializing node aks-default-20426481-vmss000000 with cloud provider
I1226 14:13:49.192005       1 nodemanager.go:375] Initializing node aks-default-20426481-vmss000000 with cloud provider
==== END logs for container cloud-node-manager of pod kube-system/cloud-node-manager-tcdkd ====
==== START logs for container coredns of pod kube-system/coredns-789789675-5bh4q ====
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
.:53
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[INFO] plugin/reload: Running configuration SHA512 = 92111fa1e1a60ab7b1ebec33c486122dc5b9c62c4d330934ea19674b92e1efa468cbdc35e334098e011c5ceac933895849fbf12a3956d5b362171679efb9a67c
CoreDNS-1.9.4
linux/amd64, go1.19, 1f0a41a6
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
==== END logs for container coredns of pod kube-system/coredns-789789675-5bh4q ====
==== START logs for container coredns of pod kube-system/coredns-789789675-lnrr5 ====
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
.:53
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[INFO] plugin/reload: Running configuration SHA512 = 92111fa1e1a60ab7b1ebec33c486122dc5b9c62c4d330934ea19674b92e1efa468cbdc35e334098e011c5ceac933895849fbf12a3956d5b362171679efb9a67c
CoreDNS-1.9.4
linux/amd64, go1.19, 1f0a41a6
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
==== END logs for container coredns of pod kube-system/coredns-789789675-lnrr5 ====
==== START logs for container autoscaler of pod kube-system/coredns-autoscaler-649b947bbd-wxhp6 ====
I1226 14:14:17.317343       1 autoscaler.go:49] Scaling Namespace: kube-system, Target: deployment/coredns
I1226 14:14:17.739496       1 autoscaler_server.go:157] ConfigMap not found: configmaps "coredns-autoscaler" not found, will create one with default params
I1226 14:14:17.754890       1 k8sclient.go:148] Created ConfigMap coredns-autoscaler in namespace kube-system
I1226 14:14:17.754929       1 plugin.go:50] Set control mode to ladder
I1226 14:14:17.754936       1 ladder_controller.go:72] Detected ConfigMap version change (old:  new: 1022) - rebuilding lookup entries
I1226 14:14:17.754942       1 ladder_controller.go:73] Params from apiserver: 
{"coresToReplicas":[[1,2],[512,3],[1024,4],[2048,5]],"nodesToReplicas":[[1,2],[8,3],[16,4],[32,5]]}
I1226 14:14:17.761705       1 k8sclient.go:273] Cluster status: SchedulableNodes[2], SchedulableCores[4]
I1226 14:14:17.761733       1 k8sclient.go:274] Replicas are not as expected : updating replicas from 1 to 2
==== END logs for container autoscaler of pod kube-system/coredns-autoscaler-649b947bbd-wxhp6 ====
==== START logs for container liveness-probe of pod kube-system/csi-azuredisk-node-824fw ====
I1226 14:13:50.291201       1 main.go:149] calling CSI driver to discover driver name
I1226 14:13:50.293020       1 main.go:155] CSI driver name: "disk.csi.azure.com"
I1226 14:13:50.293160       1 main.go:183] ServeMux listening at "0.0.0.0:29603"
==== END logs for container liveness-probe of pod kube-system/csi-azuredisk-node-824fw ====
==== START logs for container node-driver-registrar of pod kube-system/csi-azuredisk-node-824fw ====
I1226 14:13:46.870215       1 main.go:167] Version: v2.8.0-0-ge3aefd17
I1226 14:13:46.870295       1 main.go:168] Running node-driver-registrar in mode=registration
I1226 14:13:46.875020       1 main.go:192] Attempting to open a gRPC connection with: "/csi/csi.sock"
I1226 14:13:49.915002       1 main.go:199] Calling CSI driver to discover driver name
I1226 14:13:49.934309       1 main.go:209] CSI driver name: "disk.csi.azure.com"
I1226 14:13:49.934460       1 node_register.go:53] Starting Registration Server at: /registration/disk.csi.azure.com-reg.sock
I1226 14:13:49.934882       1 node_register.go:62] Registration Server started at: /registration/disk.csi.azure.com-reg.sock
I1226 14:13:49.935212       1 node_register.go:92] Skipping HTTP server because endpoint is set to: ""
I1226 14:13:50.925961       1 main.go:102] Received GetInfo call: &InfoRequest{}
I1226 14:13:50.926751       1 main.go:109] "Kubelet registration probe created" path="/var/lib/kubelet/plugins/disk.csi.azure.com/registration"
I1226 14:13:50.966045       1 main.go:121] Received NotifyRegistrationStatus call: &RegistrationStatus{PluginRegistered:true,Error:,}
==== END logs for container node-driver-registrar of pod kube-system/csi-azuredisk-node-824fw ====
==== START logs for container azuredisk of pod kube-system/csi-azuredisk-node-824fw ====
I1226 14:13:48.870455       1 azuredisk.go:191] 
DRIVER INFORMATION:
-------------------
Build Date: "2023-10-19T04:07:44Z"
Compiler: gc
Driver Name: disk.csi.azure.com
Driver Version: v1.28.4
Git Commit: 969c0b125970ba40b90276f3671a7b8f41e44502
Go Version: go1.21.1
Platform: linux/amd64
Topology Key: topology.disk.csi.azure.com/zone

Streaming logs below:
I1226 14:13:48.882238       1 azuredisk.go:194] driver userAgent: disk.csi.azure.com/v1.28.4
I1226 14:13:49.077650       1 azure_disk_utils.go:183] reading cloud config from secret kube-system/azure-cloud-provider
I1226 14:13:49.202708       1 azure_disk_utils.go:190] InitializeCloudFromSecret: failed to get cloud config from secret kube-system/azure-cloud-provider: failed to get secret kube-system/azure-cloud-provider: secrets "azure-cloud-provider" is forbidden: User "system:serviceaccount:kube-system:csi-azuredisk-node-sa" cannot get resource "secrets" in API group "" in the namespace "kube-system"
I1226 14:13:49.202924       1 azure_disk_utils.go:195] could not read cloud config from secret kube-system/azure-cloud-provider
I1226 14:13:49.202946       1 azure_disk_utils.go:198] AZURE_CREDENTIAL_FILE env var set as /etc/kubernetes/azure.json
I1226 14:13:49.203104       1 azure_disk_utils.go:213] read cloud config from file: /etc/kubernetes/azure.json successfully
I1226 14:13:49.224144       1 azure_auth.go:279] Using AzurePublicCloud environment
I1226 14:13:49.224421       1 azure_auth.go:130] azure: using managed identity extension to retrieve access token
I1226 14:13:49.224528       1 azure_auth.go:136] azure: using User Assigned MSI ID to retrieve access token
I1226 14:13:49.224634       1 azure_auth.go:147] azure: User Assigned MSI ID is client ID
I1226 14:13:49.224805       1 azure.go:854] Azure cloudprovider using try backoff: retries=6, exponent=1.500000, duration=5, jitter=1.000000
I1226 14:13:49.278553       1 azure_interfaceclient.go:74] Azure InterfacesClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:49.278595       1 azure_interfaceclient.go:77] Azure InterfacesClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:49.282639       1 azure_vmsizeclient.go:68] Azure VirtualMachineSizesClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:49.282659       1 azure_vmsizeclient.go:71] Azure VirtualMachineSizesClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:49.287194       1 azure_storageaccountclient.go:70] Azure StorageAccountClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:49.287214       1 azure_storageaccountclient.go:73] Azure StorageAccountClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:49.291116       1 azure_diskclient.go:68] Azure DisksClient using API version: 2022-07-02
I1226 14:13:49.291150       1 azure_vmclient.go:70] Azure VirtualMachine client (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:49.291158       1 azure_vmclient.go:73] Azure VirtualMachine client (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:49.291166       1 azure_vmssclient.go:70] Azure VirtualMachineScaleSetClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:49.291172       1 azure_vmssclient.go:73] Azure VirtualMachineScaleSetClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:49.291181       1 azure_vmssvmclient.go:75] Azure vmssVM client (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:49.291192       1 azure_vmssvmclient.go:78] Azure vmssVM client (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:49.291204       1 azure_routeclient.go:69] Azure RoutesClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:49.291215       1 azure_routeclient.go:72] Azure RoutesClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:49.295787       1 azure_subnetclient.go:70] Azure SubnetsClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:49.295814       1 azure_subnetclient.go:73] Azure SubnetsClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:49.295826       1 azure_routetableclient.go:69] Azure RouteTablesClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:49.295831       1 azure_routetableclient.go:72] Azure RouteTablesClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:49.295856       1 azure_loadbalancerclient.go:74] Azure LoadBalancersClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:49.295863       1 azure_loadbalancerclient.go:77] Azure LoadBalancersClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:49.295873       1 azure_securitygroupclient.go:70] Azure SecurityGroupsClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:49.295884       1 azure_securitygroupclient.go:73] Azure SecurityGroupsClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:49.300257       1 azure_publicipclient.go:74] Azure PublicIPAddressesClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:49.300283       1 azure_publicipclient.go:77] Azure PublicIPAddressesClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:49.317181       1 azure_blobclient.go:73] Azure BlobClient using API version: 2021-09-01
I1226 14:13:49.317278       1 azure_vmasclient.go:70] Azure AvailabilitySetsClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:49.317306       1 azure_vmasclient.go:73] Azure AvailabilitySetsClient  (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:49.329794       1 azure.go:1097] attach/detach disk operation rate limit QPS: 6.000000, Bucket: 10
I1226 14:13:49.329864       1 skus.go:121] NewNodeInfo: Starting to populate node and disk sku information.
I1226 14:13:49.437696       1 mount_linux.go:284] Detected umount with safe 'not mounted' behavior
I1226 14:13:49.437953       1 driver.go:81] Enabling controller service capability: CREATE_DELETE_VOLUME
I1226 14:13:49.438067       1 driver.go:81] Enabling controller service capability: PUBLISH_UNPUBLISH_VOLUME
I1226 14:13:49.438156       1 driver.go:81] Enabling controller service capability: CREATE_DELETE_SNAPSHOT
I1226 14:13:49.438228       1 driver.go:81] Enabling controller service capability: CLONE_VOLUME
I1226 14:13:49.438298       1 driver.go:81] Enabling controller service capability: EXPAND_VOLUME
I1226 14:13:49.438377       1 driver.go:81] Enabling controller service capability: SINGLE_NODE_MULTI_WRITER
I1226 14:13:49.438446       1 driver.go:100] Enabling volume access mode: SINGLE_NODE_WRITER
I1226 14:13:49.438523       1 driver.go:100] Enabling volume access mode: SINGLE_NODE_READER_ONLY
I1226 14:13:49.438601       1 driver.go:100] Enabling volume access mode: SINGLE_NODE_SINGLE_WRITER
I1226 14:13:49.438665       1 driver.go:100] Enabling volume access mode: SINGLE_NODE_MULTI_WRITER
I1226 14:13:49.438745       1 driver.go:91] Enabling node service capability: STAGE_UNSTAGE_VOLUME
I1226 14:13:49.438830       1 driver.go:91] Enabling node service capability: EXPAND_VOLUME
I1226 14:13:49.438910       1 driver.go:91] Enabling node service capability: GET_VOLUME_STATS
I1226 14:13:49.438971       1 driver.go:91] Enabling node service capability: SINGLE_NODE_MULTI_WRITER
I1226 14:13:49.439388       1 server.go:117] Listening for connections on address: &net.UnixAddr{Name:"//csi/csi.sock", Net:"unix"}
I1226 14:13:49.920532       1 utils.go:77] GRPC call: /csi.v1.Identity/GetPluginInfo
I1226 14:13:49.920562       1 utils.go:78] GRPC request: {}
I1226 14:13:49.931411       1 utils.go:84] GRPC response: {"name":"disk.csi.azure.com","vendor_version":"v1.28.4"}
I1226 14:13:50.292223       1 utils.go:77] GRPC call: /csi.v1.Identity/GetPluginInfo
I1226 14:13:50.292367       1 utils.go:78] GRPC request: {}
I1226 14:13:50.292535       1 utils.go:84] GRPC response: {"name":"disk.csi.azure.com","vendor_version":"v1.28.4"}
I1226 14:13:50.928335       1 utils.go:77] GRPC call: /csi.v1.Node/NodeGetInfo
I1226 14:13:50.928357       1 utils.go:78] GRPC request: {}
I1226 14:13:50.928523       1 azure_zones.go:165] Availability zone is not enabled for the node, falling back to fault domain
I1226 14:13:50.928549       1 nodeserver.go:350] NodeGetInfo, nodeName: aks-default-20426481-vmss000000, failureDomain: 0
I1226 14:13:50.928564       1 nodeserver.go:431] got a matching size in getMaxDataDiskCount, VM Size: STANDARD_D2_V2, MaxDataDiskCount: 8
I1226 14:13:50.928574       1 utils.go:84] GRPC response: {"accessible_topology":{"segments":{"topology.disk.csi.azure.com/zone":""}},"max_volumes_per_node":8,"node_id":"aks-default-20426481-vmss000000"}
==== END logs for container azuredisk of pod kube-system/csi-azuredisk-node-824fw ====
==== START logs for container liveness-probe of pod kube-system/csi-azuredisk-node-qnmgb ====
I1226 14:13:44.875212       1 main.go:149] calling CSI driver to discover driver name
I1226 14:13:44.886639       1 main.go:155] CSI driver name: "disk.csi.azure.com"
I1226 14:13:44.886658       1 main.go:183] ServeMux listening at "0.0.0.0:29603"
==== END logs for container liveness-probe of pod kube-system/csi-azuredisk-node-qnmgb ====
==== START logs for container node-driver-registrar of pod kube-system/csi-azuredisk-node-qnmgb ====
I1226 14:13:41.564994       1 main.go:167] Version: v2.8.0-0-ge3aefd17
I1226 14:13:41.565761       1 main.go:168] Running node-driver-registrar in mode=registration
I1226 14:13:41.566302       1 main.go:192] Attempting to open a gRPC connection with: "/csi/csi.sock"
I1226 14:13:44.933704       1 main.go:199] Calling CSI driver to discover driver name
I1226 14:13:44.936277       1 main.go:209] CSI driver name: "disk.csi.azure.com"
I1226 14:13:44.936348       1 node_register.go:53] Starting Registration Server at: /registration/disk.csi.azure.com-reg.sock
I1226 14:13:44.936632       1 node_register.go:62] Registration Server started at: /registration/disk.csi.azure.com-reg.sock
I1226 14:13:44.937097       1 node_register.go:92] Skipping HTTP server because endpoint is set to: ""
I1226 14:13:45.788902       1 main.go:102] Received GetInfo call: &InfoRequest{}
I1226 14:13:45.789337       1 main.go:109] "Kubelet registration probe created" path="/var/lib/kubelet/plugins/disk.csi.azure.com/registration"
I1226 14:13:45.841693       1 main.go:121] Received NotifyRegistrationStatus call: &RegistrationStatus{PluginRegistered:true,Error:,}
==== END logs for container node-driver-registrar of pod kube-system/csi-azuredisk-node-qnmgb ====
==== START logs for container azuredisk of pod kube-system/csi-azuredisk-node-qnmgb ====
I1226 14:13:43.542911       1 azuredisk.go:191] 
DRIVER INFORMATION:
-------------------
Build Date: "2023-10-19T04:07:44Z"
Compiler: gc
Driver Name: disk.csi.azure.com
Driver Version: v1.28.4
Git Commit: 969c0b125970ba40b90276f3671a7b8f41e44502
Go Version: go1.21.1
Platform: linux/amd64
Topology Key: topology.disk.csi.azure.com/zone

Streaming logs below:
I1226 14:13:43.578735       1 azuredisk.go:194] driver userAgent: disk.csi.azure.com/v1.28.4
I1226 14:13:43.833935       1 azure_disk_utils.go:183] reading cloud config from secret kube-system/azure-cloud-provider
I1226 14:13:43.896445       1 azure_disk_utils.go:190] InitializeCloudFromSecret: failed to get cloud config from secret kube-system/azure-cloud-provider: failed to get secret kube-system/azure-cloud-provider: secrets "azure-cloud-provider" is forbidden: User "system:serviceaccount:kube-system:csi-azuredisk-node-sa" cannot get resource "secrets" in API group "" in the namespace "kube-system"
I1226 14:13:43.896467       1 azure_disk_utils.go:195] could not read cloud config from secret kube-system/azure-cloud-provider
I1226 14:13:43.896478       1 azure_disk_utils.go:198] AZURE_CREDENTIAL_FILE env var set as /etc/kubernetes/azure.json
I1226 14:13:43.896514       1 azure_disk_utils.go:213] read cloud config from file: /etc/kubernetes/azure.json successfully
I1226 14:13:43.908099       1 azure_auth.go:279] Using AzurePublicCloud environment
I1226 14:13:43.908236       1 azure_auth.go:130] azure: using managed identity extension to retrieve access token
I1226 14:13:43.908248       1 azure_auth.go:136] azure: using User Assigned MSI ID to retrieve access token
I1226 14:13:43.908336       1 azure_auth.go:147] azure: User Assigned MSI ID is client ID
I1226 14:13:43.908434       1 azure.go:854] Azure cloudprovider using try backoff: retries=6, exponent=1.500000, duration=5, jitter=1.000000
I1226 14:13:43.928150       1 azure_interfaceclient.go:74] Azure InterfacesClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:43.928333       1 azure_interfaceclient.go:77] Azure InterfacesClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:43.935382       1 azure_vmsizeclient.go:68] Azure VirtualMachineSizesClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:43.935427       1 azure_vmsizeclient.go:71] Azure VirtualMachineSizesClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:43.940829       1 azure_storageaccountclient.go:70] Azure StorageAccountClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:43.940936       1 azure_storageaccountclient.go:73] Azure StorageAccountClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:43.944760       1 azure_diskclient.go:68] Azure DisksClient using API version: 2022-07-02
I1226 14:13:43.944795       1 azure_vmclient.go:70] Azure VirtualMachine client (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:43.944803       1 azure_vmclient.go:73] Azure VirtualMachine client (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:43.944982       1 azure_vmssclient.go:70] Azure VirtualMachineScaleSetClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:43.945069       1 azure_vmssclient.go:73] Azure VirtualMachineScaleSetClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:43.945142       1 azure_vmssvmclient.go:75] Azure vmssVM client (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:43.945213       1 azure_vmssvmclient.go:78] Azure vmssVM client (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:43.945302       1 azure_routeclient.go:69] Azure RoutesClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:43.945373       1 azure_routeclient.go:72] Azure RoutesClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:43.948227       1 azure_subnetclient.go:70] Azure SubnetsClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:43.948334       1 azure_subnetclient.go:73] Azure SubnetsClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:43.948395       1 azure_routetableclient.go:69] Azure RouteTablesClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:43.948455       1 azure_routetableclient.go:72] Azure RouteTablesClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:43.948529       1 azure_loadbalancerclient.go:74] Azure LoadBalancersClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:43.948608       1 azure_loadbalancerclient.go:77] Azure LoadBalancersClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:43.948674       1 azure_securitygroupclient.go:70] Azure SecurityGroupsClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:43.948733       1 azure_securitygroupclient.go:73] Azure SecurityGroupsClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:43.952168       1 azure_publicipclient.go:74] Azure PublicIPAddressesClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:43.952185       1 azure_publicipclient.go:77] Azure PublicIPAddressesClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:43.955753       1 azure_blobclient.go:73] Azure BlobClient using API version: 2021-09-01
I1226 14:13:43.955775       1 azure_vmasclient.go:70] Azure AvailabilitySetsClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:43.955781       1 azure_vmasclient.go:73] Azure AvailabilitySetsClient  (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:43.967829       1 azure.go:1097] attach/detach disk operation rate limit QPS: 6.000000, Bucket: 10
I1226 14:13:43.967913       1 skus.go:121] NewNodeInfo: Starting to populate node and disk sku information.
I1226 14:13:44.082253       1 mount_linux.go:284] Detected umount with safe 'not mounted' behavior
I1226 14:13:44.082332       1 driver.go:81] Enabling controller service capability: CREATE_DELETE_VOLUME
I1226 14:13:44.082385       1 driver.go:81] Enabling controller service capability: PUBLISH_UNPUBLISH_VOLUME
I1226 14:13:44.082390       1 driver.go:81] Enabling controller service capability: CREATE_DELETE_SNAPSHOT
I1226 14:13:44.082394       1 driver.go:81] Enabling controller service capability: CLONE_VOLUME
I1226 14:13:44.082398       1 driver.go:81] Enabling controller service capability: EXPAND_VOLUME
I1226 14:13:44.082406       1 driver.go:81] Enabling controller service capability: SINGLE_NODE_MULTI_WRITER
I1226 14:13:44.082411       1 driver.go:100] Enabling volume access mode: SINGLE_NODE_WRITER
I1226 14:13:44.082416       1 driver.go:100] Enabling volume access mode: SINGLE_NODE_READER_ONLY
I1226 14:13:44.082489       1 driver.go:100] Enabling volume access mode: SINGLE_NODE_SINGLE_WRITER
I1226 14:13:44.082579       1 driver.go:100] Enabling volume access mode: SINGLE_NODE_MULTI_WRITER
I1226 14:13:44.082591       1 driver.go:91] Enabling node service capability: STAGE_UNSTAGE_VOLUME
I1226 14:13:44.082596       1 driver.go:91] Enabling node service capability: EXPAND_VOLUME
I1226 14:13:44.082600       1 driver.go:91] Enabling node service capability: GET_VOLUME_STATS
I1226 14:13:44.082605       1 driver.go:91] Enabling node service capability: SINGLE_NODE_MULTI_WRITER
I1226 14:13:44.082945       1 server.go:117] Listening for connections on address: &net.UnixAddr{Name:"//csi/csi.sock", Net:"unix"}
I1226 14:13:44.876950       1 utils.go:77] GRPC call: /csi.v1.Identity/GetPluginInfo
I1226 14:13:44.877127       1 utils.go:78] GRPC request: {}
I1226 14:13:44.886072       1 utils.go:84] GRPC response: {"name":"disk.csi.azure.com","vendor_version":"v1.28.4"}
I1226 14:13:44.934309       1 utils.go:77] GRPC call: /csi.v1.Identity/GetPluginInfo
I1226 14:13:44.934333       1 utils.go:78] GRPC request: {}
I1226 14:13:44.934528       1 utils.go:84] GRPC response: {"name":"disk.csi.azure.com","vendor_version":"v1.28.4"}
I1226 14:13:45.793049       1 utils.go:77] GRPC call: /csi.v1.Node/NodeGetInfo
I1226 14:13:45.793069       1 utils.go:78] GRPC request: {}
I1226 14:13:45.793356       1 azure_zones.go:165] Availability zone is not enabled for the node, falling back to fault domain
I1226 14:13:45.793422       1 nodeserver.go:350] NodeGetInfo, nodeName: aks-default-20426481-vmss000001, failureDomain: 0
I1226 14:13:45.793467       1 nodeserver.go:431] got a matching size in getMaxDataDiskCount, VM Size: STANDARD_D2_V2, MaxDataDiskCount: 8
I1226 14:13:45.793485       1 utils.go:84] GRPC response: {"accessible_topology":{"segments":{"topology.disk.csi.azure.com/zone":""}},"max_volumes_per_node":8,"node_id":"aks-default-20426481-vmss000001"}
==== END logs for container azuredisk of pod kube-system/csi-azuredisk-node-qnmgb ====
==== START logs for container liveness-probe of pod kube-system/csi-azurefile-node-lnlt2 ====
I1226 14:13:49.990196       1 main.go:149] calling CSI driver to discover driver name
I1226 14:13:49.991864       1 main.go:155] CSI driver name: "file.csi.azure.com"
I1226 14:13:49.991885       1 main.go:183] ServeMux listening at "0.0.0.0:29613"
==== END logs for container liveness-probe of pod kube-system/csi-azurefile-node-lnlt2 ====
==== START logs for container node-driver-registrar of pod kube-system/csi-azurefile-node-lnlt2 ====
I1226 14:13:46.870171       1 main.go:167] Version: v2.8.0-0-ge3aefd17
I1226 14:13:46.870915       1 main.go:168] Running node-driver-registrar in mode=registration
I1226 14:13:46.875212       1 main.go:192] Attempting to open a gRPC connection with: "/csi/csi.sock"
I1226 14:13:49.687395       1 main.go:199] Calling CSI driver to discover driver name
I1226 14:13:49.700597       1 main.go:209] CSI driver name: "file.csi.azure.com"
I1226 14:13:49.700650       1 node_register.go:53] Starting Registration Server at: /registration/file.csi.azure.com-reg.sock
I1226 14:13:49.701036       1 node_register.go:62] Registration Server started at: /registration/file.csi.azure.com-reg.sock
I1226 14:13:49.702221       1 node_register.go:92] Skipping HTTP server because endpoint is set to: ""
I1226 14:13:49.921526       1 main.go:102] Received GetInfo call: &InfoRequest{}
I1226 14:13:49.921971       1 main.go:109] "Kubelet registration probe created" path="/var/lib/kubelet/plugins/file.csi.azure.com/registration"
I1226 14:13:49.962181       1 main.go:121] Received NotifyRegistrationStatus call: &RegistrationStatus{PluginRegistered:true,Error:,}
==== END logs for container node-driver-registrar of pod kube-system/csi-azurefile-node-lnlt2 ====
==== START logs for container azurefile of pod kube-system/csi-azurefile-node-lnlt2 ====
I1226 14:13:49.038130       1 azurefile.go:350] 
DRIVER INFORMATION:
-------------------
Build Date: "2023-10-19T13:50:06Z"
Compiler: gc
Driver Name: file.csi.azure.com
Driver Version: v1.28.6
Git Commit: 09e187248c9ccae701f3c0405905de0df6a804d6
Go Version: go1.21.1
Platform: linux/amd64

Streaming logs below:
I1226 14:13:49.084677       1 azurefile.go:353] driver userAgent: file.csi.azure.com/v1.28.6
I1226 14:13:49.089036       1 azure.go:69] set QPS(25.000000) and QPS Burst(50) for driver kubeClient
I1226 14:13:49.205860       1 azure.go:84] reading cloud config from secret kube-system/azure-cloud-provider
I1226 14:13:49.318288       1 azure.go:91] InitializeCloudFromSecret: failed to get cloud config from secret kube-system/azure-cloud-provider: failed to get secret kube-system/azure-cloud-provider: secrets "azure-cloud-provider" not found
I1226 14:13:49.318315       1 azure.go:96] could not read cloud config from secret kube-system/azure-cloud-provider
I1226 14:13:49.318325       1 azure.go:99] AZURE_CREDENTIAL_FILE env var set as /etc/kubernetes/azure.json
I1226 14:13:49.318401       1 azure.go:114] read cloud config from file: /etc/kubernetes/azure.json successfully
I1226 14:13:49.327721       1 azure_auth.go:279] Using AzurePublicCloud environment
I1226 14:13:49.331108       1 azure_auth.go:130] azure: using managed identity extension to retrieve access token
I1226 14:13:49.331129       1 azure_auth.go:136] azure: using User Assigned MSI ID to retrieve access token
I1226 14:13:49.331234       1 azure_auth.go:147] azure: User Assigned MSI ID is client ID
I1226 14:13:49.334789       1 azure.go:923] Azure cloudprovider using try backoff: retries=6, exponent=1.500000, duration=5, jitter=1.000000
I1226 14:13:49.347702       1 azure_interfaceclient.go:74] Azure InterfacesClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:49.347733       1 azure_interfaceclient.go:77] Azure InterfacesClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:49.351547       1 azure_vmsizeclient.go:68] Azure VirtualMachineSizesClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:49.351671       1 azure_vmsizeclient.go:71] Azure VirtualMachineSizesClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:49.365497       1 azure_snapshotclient.go:70] Azure SnapshotClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:49.365568       1 azure_snapshotclient.go:73] Azure SnapshotClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:49.365599       1 azure_storageaccountclient.go:70] Azure StorageAccountClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:49.365619       1 azure_storageaccountclient.go:73] Azure StorageAccountClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:49.368591       1 azure_diskclient.go:68] Azure DisksClient using API version: 2022-07-02
I1226 14:13:49.368619       1 azure_diskclient.go:73] Azure DisksClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:49.368627       1 azure_diskclient.go:76] Azure DisksClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:49.368729       1 azure_vmclient.go:70] Azure VirtualMachine client (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:49.368746       1 azure_vmclient.go:73] Azure VirtualMachine client (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:49.368759       1 azure_vmssclient.go:70] Azure VirtualMachineScaleSetClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:49.368764       1 azure_vmssclient.go:73] Azure VirtualMachineScaleSetClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:49.368774       1 azure_vmssvmclient.go:75] Azure vmssVM client (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:49.368812       1 azure_vmssvmclient.go:78] Azure vmssVM client (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:49.368874       1 azure_routeclient.go:69] Azure RoutesClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:49.368932       1 azure_routeclient.go:72] Azure RoutesClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:49.372685       1 azure_subnetclient.go:70] Azure SubnetsClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:49.372704       1 azure_subnetclient.go:73] Azure SubnetsClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:49.372739       1 azure_routetableclient.go:69] Azure RouteTablesClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:49.372745       1 azure_routetableclient.go:72] Azure RouteTablesClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:49.372755       1 azure_loadbalancerclient.go:74] Azure LoadBalancersClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:49.372759       1 azure_loadbalancerclient.go:77] Azure LoadBalancersClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:49.372772       1 azure_securitygroupclient.go:70] Azure SecurityGroupsClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:49.372777       1 azure_securitygroupclient.go:73] Azure SecurityGroupsClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:49.376940       1 azure_publicipclient.go:74] Azure PublicIPAddressesClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:49.376978       1 azure_publicipclient.go:77] Azure PublicIPAddressesClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:49.384656       1 azure_blobclient.go:73] Azure BlobClient using API version: 2021-09-01
I1226 14:13:49.388762       1 azure_vmasclient.go:70] Azure AvailabilitySetsClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:49.388906       1 azure_vmasclient.go:73] Azure AvailabilitySetsClient  (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:49.423425       1 azure.go:1166] attach/detach disk operation rate limit QPS: 6.000000, Bucket: 10
I1226 14:13:49.424016       1 azure.go:149] starting node server on node(aks-default-20426481-vmss000000)
I1226 14:13:49.424163       1 azurefile.go:358] cloud: AzurePublicCloud, location: eastus, rg: mc_linux-rg_murali-aks_eastus, VnetName: aks-vnet-27966828, VnetResourceGroup: , SubnetName: aks-subnet
I1226 14:13:49.640361       1 mount_linux.go:284] Detected umount with safe 'not mounted' behavior
I1226 14:13:49.640479       1 driver.go:93] Enabling controller service capability: CREATE_DELETE_VOLUME
I1226 14:13:49.640530       1 driver.go:93] Enabling controller service capability: PUBLISH_UNPUBLISH_VOLUME
I1226 14:13:49.640552       1 driver.go:93] Enabling controller service capability: CREATE_DELETE_SNAPSHOT
I1226 14:13:49.640585       1 driver.go:93] Enabling controller service capability: EXPAND_VOLUME
I1226 14:13:49.640609       1 driver.go:93] Enabling controller service capability: SINGLE_NODE_MULTI_WRITER
I1226 14:13:49.640627       1 driver.go:93] Enabling controller service capability: CLONE_VOLUME
I1226 14:13:49.640644       1 driver.go:112] Enabling volume access mode: SINGLE_NODE_WRITER
I1226 14:13:49.640672       1 driver.go:112] Enabling volume access mode: SINGLE_NODE_READER_ONLY
I1226 14:13:49.640708       1 driver.go:112] Enabling volume access mode: SINGLE_NODE_SINGLE_WRITER
I1226 14:13:49.640733       1 driver.go:112] Enabling volume access mode: SINGLE_NODE_MULTI_WRITER
I1226 14:13:49.640760       1 driver.go:112] Enabling volume access mode: MULTI_NODE_READER_ONLY
I1226 14:13:49.640778       1 driver.go:112] Enabling volume access mode: MULTI_NODE_SINGLE_WRITER
I1226 14:13:49.640794       1 driver.go:112] Enabling volume access mode: MULTI_NODE_MULTI_WRITER
I1226 14:13:49.640813       1 driver.go:103] Enabling node service capability: STAGE_UNSTAGE_VOLUME
I1226 14:13:49.640840       1 driver.go:103] Enabling node service capability: SINGLE_NODE_MULTI_WRITER
I1226 14:13:49.640858       1 driver.go:103] Enabling node service capability: VOLUME_MOUNT_GROUP
I1226 14:13:49.640938       1 driver.go:103] Enabling node service capability: GET_VOLUME_STATS
I1226 14:13:49.641351       1 server.go:118] Listening for connections on address: &net.UnixAddr{Name:"//csi/csi.sock", Net:"unix"}
I1226 14:13:49.692444       1 utils.go:76] GRPC call: /csi.v1.Identity/GetPluginInfo
I1226 14:13:49.692617       1 utils.go:77] GRPC request: {}
I1226 14:13:49.698725       1 utils.go:83] GRPC response: {"name":"file.csi.azure.com","vendor_version":"v1.28.6"}
I1226 14:13:49.923728       1 utils.go:76] GRPC call: /csi.v1.Node/NodeGetInfo
I1226 14:13:49.923751       1 utils.go:77] GRPC request: {}
I1226 14:13:49.923945       1 utils.go:83] GRPC response: {"node_id":"aks-default-20426481-vmss000000"}
I1226 14:13:49.990910       1 utils.go:76] GRPC call: /csi.v1.Identity/GetPluginInfo
I1226 14:13:49.990941       1 utils.go:77] GRPC request: {}
I1226 14:13:49.991175       1 utils.go:83] GRPC response: {"name":"file.csi.azure.com","vendor_version":"v1.28.6"}
==== END logs for container azurefile of pod kube-system/csi-azurefile-node-lnlt2 ====
==== START logs for container liveness-probe of pod kube-system/csi-azurefile-node-w9z7h ====
I1226 14:13:44.820943       1 main.go:149] calling CSI driver to discover driver name
I1226 14:13:44.828318       1 main.go:155] CSI driver name: "file.csi.azure.com"
I1226 14:13:44.828519       1 main.go:183] ServeMux listening at "0.0.0.0:29613"
==== END logs for container liveness-probe of pod kube-system/csi-azurefile-node-w9z7h ====
==== START logs for container node-driver-registrar of pod kube-system/csi-azurefile-node-w9z7h ====
I1226 14:13:41.564953       1 main.go:167] Version: v2.8.0-0-ge3aefd17
I1226 14:13:41.565711       1 main.go:168] Running node-driver-registrar in mode=registration
I1226 14:13:41.567026       1 main.go:192] Attempting to open a gRPC connection with: "/csi/csi.sock"
I1226 14:13:44.835676       1 main.go:199] Calling CSI driver to discover driver name
I1226 14:13:44.838749       1 main.go:209] CSI driver name: "file.csi.azure.com"
I1226 14:13:44.838895       1 node_register.go:53] Starting Registration Server at: /registration/file.csi.azure.com-reg.sock
I1226 14:13:44.839154       1 node_register.go:62] Registration Server started at: /registration/file.csi.azure.com-reg.sock
I1226 14:13:44.840348       1 node_register.go:92] Skipping HTTP server because endpoint is set to: ""
I1226 14:13:45.790947       1 main.go:102] Received GetInfo call: &InfoRequest{}
I1226 14:13:45.791318       1 main.go:109] "Kubelet registration probe created" path="/var/lib/kubelet/plugins/file.csi.azure.com/registration"
I1226 14:13:45.873402       1 main.go:121] Received NotifyRegistrationStatus call: &RegistrationStatus{PluginRegistered:true,Error:,}
==== END logs for container node-driver-registrar of pod kube-system/csi-azurefile-node-w9z7h ====
==== START logs for container azurefile of pod kube-system/csi-azurefile-node-w9z7h ====
I1226 14:13:43.697903       1 azurefile.go:350] 
DRIVER INFORMATION:
-------------------
Build Date: "2023-10-19T13:50:06Z"
Compiler: gc
Driver Name: file.csi.azure.com
Driver Version: v1.28.6
Git Commit: 09e187248c9ccae701f3c0405905de0df6a804d6
Go Version: go1.21.1
Platform: linux/amd64

Streaming logs below:
I1226 14:13:43.847606       1 azurefile.go:353] driver userAgent: file.csi.azure.com/v1.28.6
I1226 14:13:43.851606       1 azure.go:69] set QPS(25.000000) and QPS Burst(50) for driver kubeClient
I1226 14:13:43.940663       1 azure.go:84] reading cloud config from secret kube-system/azure-cloud-provider
I1226 14:13:44.021886       1 azure.go:91] InitializeCloudFromSecret: failed to get cloud config from secret kube-system/azure-cloud-provider: failed to get secret kube-system/azure-cloud-provider: secrets "azure-cloud-provider" not found
I1226 14:13:44.021915       1 azure.go:96] could not read cloud config from secret kube-system/azure-cloud-provider
I1226 14:13:44.021925       1 azure.go:99] AZURE_CREDENTIAL_FILE env var set as /etc/kubernetes/azure.json
I1226 14:13:44.021996       1 azure.go:114] read cloud config from file: /etc/kubernetes/azure.json successfully
I1226 14:13:44.030937       1 azure_auth.go:279] Using AzurePublicCloud environment
I1226 14:13:44.034841       1 azure_auth.go:130] azure: using managed identity extension to retrieve access token
I1226 14:13:44.034866       1 azure_auth.go:136] azure: using User Assigned MSI ID to retrieve access token
I1226 14:13:44.035090       1 azure_auth.go:147] azure: User Assigned MSI ID is client ID
I1226 14:13:44.041118       1 azure.go:923] Azure cloudprovider using try backoff: retries=6, exponent=1.500000, duration=5, jitter=1.000000
I1226 14:13:44.062257       1 azure_interfaceclient.go:74] Azure InterfacesClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:44.062294       1 azure_interfaceclient.go:77] Azure InterfacesClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:44.067343       1 azure_vmsizeclient.go:68] Azure VirtualMachineSizesClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:44.067368       1 azure_vmsizeclient.go:71] Azure VirtualMachineSizesClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:44.071481       1 azure_snapshotclient.go:70] Azure SnapshotClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:44.071503       1 azure_snapshotclient.go:73] Azure SnapshotClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:44.071527       1 azure_storageaccountclient.go:70] Azure StorageAccountClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:44.071533       1 azure_storageaccountclient.go:73] Azure StorageAccountClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:44.075169       1 azure_diskclient.go:68] Azure DisksClient using API version: 2022-07-02
I1226 14:13:44.075345       1 azure_diskclient.go:73] Azure DisksClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:44.075359       1 azure_diskclient.go:76] Azure DisksClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:44.075392       1 azure_vmclient.go:70] Azure VirtualMachine client (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:44.075399       1 azure_vmclient.go:73] Azure VirtualMachine client (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:44.075408       1 azure_vmssclient.go:70] Azure VirtualMachineScaleSetClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:44.075413       1 azure_vmssclient.go:73] Azure VirtualMachineScaleSetClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:44.075422       1 azure_vmssvmclient.go:75] Azure vmssVM client (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:44.075427       1 azure_vmssvmclient.go:78] Azure vmssVM client (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:44.075472       1 azure_routeclient.go:69] Azure RoutesClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:44.075522       1 azure_routeclient.go:72] Azure RoutesClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:44.080274       1 azure_subnetclient.go:70] Azure SubnetsClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:44.080293       1 azure_subnetclient.go:73] Azure SubnetsClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:44.080378       1 azure_routetableclient.go:69] Azure RouteTablesClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:44.080389       1 azure_routetableclient.go:72] Azure RouteTablesClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:44.080474       1 azure_loadbalancerclient.go:74] Azure LoadBalancersClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:44.080486       1 azure_loadbalancerclient.go:77] Azure LoadBalancersClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:44.080515       1 azure_securitygroupclient.go:70] Azure SecurityGroupsClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:44.080560       1 azure_securitygroupclient.go:73] Azure SecurityGroupsClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:44.085035       1 azure_publicipclient.go:74] Azure PublicIPAddressesClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:44.085058       1 azure_publicipclient.go:77] Azure PublicIPAddressesClient (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:44.109460       1 azure_blobclient.go:73] Azure BlobClient using API version: 2021-09-01
I1226 14:13:44.113103       1 azure_vmasclient.go:70] Azure AvailabilitySetsClient (read ops) using rate limit config: QPS=3, bucket=10
I1226 14:13:44.113124       1 azure_vmasclient.go:73] Azure AvailabilitySetsClient  (write ops) using rate limit config: QPS=1, bucket=10
I1226 14:13:44.131941       1 azure.go:1166] attach/detach disk operation rate limit QPS: 6.000000, Bucket: 10
I1226 14:13:44.131981       1 azure.go:149] starting node server on node(aks-default-20426481-vmss000001)
I1226 14:13:44.132002       1 azurefile.go:358] cloud: AzurePublicCloud, location: eastus, rg: mc_linux-rg_murali-aks_eastus, VnetName: aks-vnet-27966828, VnetResourceGroup: , SubnetName: aks-subnet
I1226 14:13:44.287678       1 mount_linux.go:284] Detected umount with safe 'not mounted' behavior
I1226 14:13:44.287979       1 driver.go:93] Enabling controller service capability: CREATE_DELETE_VOLUME
I1226 14:13:44.287996       1 driver.go:93] Enabling controller service capability: PUBLISH_UNPUBLISH_VOLUME
I1226 14:13:44.288001       1 driver.go:93] Enabling controller service capability: CREATE_DELETE_SNAPSHOT
I1226 14:13:44.288006       1 driver.go:93] Enabling controller service capability: EXPAND_VOLUME
I1226 14:13:44.288120       1 driver.go:93] Enabling controller service capability: SINGLE_NODE_MULTI_WRITER
I1226 14:13:44.288129       1 driver.go:93] Enabling controller service capability: CLONE_VOLUME
I1226 14:13:44.288134       1 driver.go:112] Enabling volume access mode: SINGLE_NODE_WRITER
I1226 14:13:44.288139       1 driver.go:112] Enabling volume access mode: SINGLE_NODE_READER_ONLY
I1226 14:13:44.288143       1 driver.go:112] Enabling volume access mode: SINGLE_NODE_SINGLE_WRITER
I1226 14:13:44.288202       1 driver.go:112] Enabling volume access mode: SINGLE_NODE_MULTI_WRITER
I1226 14:13:44.288217       1 driver.go:112] Enabling volume access mode: MULTI_NODE_READER_ONLY
I1226 14:13:44.288220       1 driver.go:112] Enabling volume access mode: MULTI_NODE_SINGLE_WRITER
I1226 14:13:44.288225       1 driver.go:112] Enabling volume access mode: MULTI_NODE_MULTI_WRITER
I1226 14:13:44.288230       1 driver.go:103] Enabling node service capability: STAGE_UNSTAGE_VOLUME
I1226 14:13:44.288235       1 driver.go:103] Enabling node service capability: SINGLE_NODE_MULTI_WRITER
I1226 14:13:44.288239       1 driver.go:103] Enabling node service capability: VOLUME_MOUNT_GROUP
I1226 14:13:44.288243       1 driver.go:103] Enabling node service capability: GET_VOLUME_STATS
I1226 14:13:44.288749       1 server.go:118] Listening for connections on address: &net.UnixAddr{Name:"//csi/csi.sock", Net:"unix"}
I1226 14:13:44.822472       1 utils.go:76] GRPC call: /csi.v1.Identity/GetPluginInfo
I1226 14:13:44.822672       1 utils.go:77] GRPC request: {}
I1226 14:13:44.824129       1 utils.go:83] GRPC response: {"name":"file.csi.azure.com","vendor_version":"v1.28.6"}
I1226 14:13:44.836698       1 utils.go:76] GRPC call: /csi.v1.Identity/GetPluginInfo
I1226 14:13:44.836833       1 utils.go:77] GRPC request: {}
I1226 14:13:44.836942       1 utils.go:83] GRPC response: {"name":"file.csi.azure.com","vendor_version":"v1.28.6"}
I1226 14:13:45.793970       1 utils.go:76] GRPC call: /csi.v1.Node/NodeGetInfo
I1226 14:13:45.794177       1 utils.go:77] GRPC request: {}
I1226 14:13:45.794395       1 utils.go:83] GRPC response: {"node_id":"aks-default-20426481-vmss000001"}
==== END logs for container azurefile of pod kube-system/csi-azurefile-node-w9z7h ====
==== START logs for container konnectivity-agent of pod kube-system/konnectivity-agent-b95494c76-rx82r ====
I1226 14:14:15.776335       1 options.go:102] AgentCert set to "/certs/client.crt".
I1226 14:14:15.776421       1 options.go:103] AgentKey set to "/certs/client.key".
I1226 14:14:15.776427       1 options.go:104] CACert set to "/certs/ca.crt".
I1226 14:14:15.776430       1 options.go:105] ProxyServerHost set to "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io".
I1226 14:14:15.776434       1 options.go:106] ProxyServerPort set to 443.
I1226 14:14:15.776437       1 options.go:107] ALPNProtos set to [konnectivity].
I1226 14:14:15.776444       1 options.go:108] HealthServerHost set to 
I1226 14:14:15.776447       1 options.go:109] HealthServerPort set to 8082.
I1226 14:14:15.776450       1 options.go:110] AdminServerPort set to 8094.
I1226 14:14:15.776453       1 options.go:111] EnableProfiling set to false.
I1226 14:14:15.776456       1 options.go:112] EnableContentionProfiling set to false.
I1226 14:14:15.776460       1 options.go:113] AgentID set to 383d4464-f2ff-4436-a183-e5f5a439c5fa.
I1226 14:14:15.776469       1 options.go:114] SyncInterval set to 1s.
I1226 14:14:15.776479       1 options.go:115] ProbeInterval set to 1s.
I1226 14:14:15.776482       1 options.go:116] SyncIntervalCap set to 10s.
I1226 14:14:15.776486       1 options.go:117] Keepalive time set to 30s.
I1226 14:14:15.776489       1 options.go:118] ServiceAccountTokenPath set to "".
I1226 14:14:15.776497       1 options.go:119] AgentIdentifiers set to .
I1226 14:14:15.776501       1 options.go:120] WarnOnChannelLimit set to false.
I1226 14:14:15.776505       1 options.go:121] SyncForever set to false.
I1226 14:14:15.826057       1 client.go:255] "Connect to" server="43e06f75-1262-4046-a088-511334c78f46"
I1226 14:14:15.826106       1 clientset.go:224] "sync added client connecting to proxy server" serverID="43e06f75-1262-4046-a088-511334c78f46"
I1226 14:14:15.826144       1 client.go:357] "Start serving" serverID="43e06f75-1262-4046-a088-511334c78f46" agentID="383d4464-f2ff-4436-a183-e5f5a439c5fa"
I1226 14:14:16.928193       1 client.go:255] "Connect to" server="d170c5ef-e8d7-4f2a-a7b2-e5c74fe9b3d3"
I1226 14:14:16.928218       1 clientset.go:224] "sync added client connecting to proxy server" serverID="d170c5ef-e8d7-4f2a-a7b2-e5c74fe9b3d3"
I1226 14:14:16.928387       1 client.go:357] "Start serving" serverID="d170c5ef-e8d7-4f2a-a7b2-e5c74fe9b3d3" agentID="383d4464-f2ff-4436-a183-e5f5a439c5fa"
I1226 14:15:34.172370       1 client.go:539] "connection EOF" connectionID=3
I1226 14:21:25.861250       1 client.go:539] "connection EOF" connectionID=12
I1226 14:22:11.271899       1 client.go:539] "connection EOF" connectionID=15
I1226 14:22:16.453735       1 client.go:539] "connection EOF" connectionID=16
I1226 14:22:23.984980       1 client.go:539] "connection EOF" connectionID=17
I1226 14:22:41.553364       1 client.go:539] "connection EOF" connectionID=13
I1226 14:22:50.107967       1 client.go:539] "connection EOF" connectionID=19
I1226 14:22:54.861401       1 client.go:539] "connection EOF" connectionID=14
==== END logs for container konnectivity-agent of pod kube-system/konnectivity-agent-b95494c76-rx82r ====
==== START logs for container konnectivity-agent of pod kube-system/konnectivity-agent-b95494c76-zfrzk ====
I1226 14:14:15.772753       1 options.go:102] AgentCert set to "/certs/client.crt".
I1226 14:14:15.772839       1 options.go:103] AgentKey set to "/certs/client.key".
I1226 14:14:15.772844       1 options.go:104] CACert set to "/certs/ca.crt".
I1226 14:14:15.772848       1 options.go:105] ProxyServerHost set to "murali-aksdns-ard2ecri.hcp.eastus.azmk8s.io".
I1226 14:14:15.772853       1 options.go:106] ProxyServerPort set to 443.
I1226 14:14:15.772856       1 options.go:107] ALPNProtos set to [konnectivity].
I1226 14:14:15.772874       1 options.go:108] HealthServerHost set to 
I1226 14:14:15.772878       1 options.go:109] HealthServerPort set to 8082.
I1226 14:14:15.772881       1 options.go:110] AdminServerPort set to 8094.
I1226 14:14:15.773082       1 options.go:111] EnableProfiling set to false.
I1226 14:14:15.773094       1 options.go:112] EnableContentionProfiling set to false.
I1226 14:14:15.773097       1 options.go:113] AgentID set to 7ad7e901-6cbb-4c2f-979d-6afceebaac75.
I1226 14:14:15.773101       1 options.go:114] SyncInterval set to 1s.
I1226 14:14:15.773109       1 options.go:115] ProbeInterval set to 1s.
I1226 14:14:15.773199       1 options.go:116] SyncIntervalCap set to 10s.
I1226 14:14:15.773208       1 options.go:117] Keepalive time set to 30s.
I1226 14:14:15.773212       1 options.go:118] ServiceAccountTokenPath set to "".
I1226 14:14:15.773310       1 options.go:119] AgentIdentifiers set to .
I1226 14:14:15.773323       1 options.go:120] WarnOnChannelLimit set to false.
I1226 14:14:15.773327       1 options.go:121] SyncForever set to false.
I1226 14:14:15.927812       1 client.go:255] "Connect to" server="43e06f75-1262-4046-a088-511334c78f46"
I1226 14:14:15.927858       1 clientset.go:224] "sync added client connecting to proxy server" serverID="43e06f75-1262-4046-a088-511334c78f46"
I1226 14:14:15.927899       1 client.go:357] "Start serving" serverID="43e06f75-1262-4046-a088-511334c78f46" agentID="7ad7e901-6cbb-4c2f-979d-6afceebaac75"
I1226 14:14:17.042581       1 client.go:255] "Connect to" server="43e06f75-1262-4046-a088-511334c78f46"
I1226 14:14:18.146855       1 client.go:255] "Connect to" server="d170c5ef-e8d7-4f2a-a7b2-e5c74fe9b3d3"
I1226 14:14:18.148341       1 clientset.go:224] "sync added client connecting to proxy server" serverID="d170c5ef-e8d7-4f2a-a7b2-e5c74fe9b3d3"
I1226 14:14:18.148541       1 client.go:357] "Start serving" serverID="d170c5ef-e8d7-4f2a-a7b2-e5c74fe9b3d3" agentID="7ad7e901-6cbb-4c2f-979d-6afceebaac75"
I1226 14:15:34.172370       1 client.go:539] "connection EOF" connectionID=5
I1226 14:15:34.172712       1 client.go:539] "connection EOF" connectionID=1
I1226 14:15:34.172713       1 client.go:539] "connection EOF" connectionID=2
I1226 14:21:49.207330       1 client.go:539] "connection EOF" connectionID=16
==== END logs for container konnectivity-agent of pod kube-system/konnectivity-agent-b95494c76-zfrzk ====
==== START logs for container kube-proxy-bootstrap of pod kube-system/kube-proxy-64gzd ====
Current net.netfilter.nf_conntrack_max: 262144
AKS custom config for net.netfilter.nf_conntrack_max not set.
Setting nf_conntrack_max to 131072 (32768 * 2 cores, minimum 131072).
==== END logs for container kube-proxy-bootstrap of pod kube-system/kube-proxy-64gzd ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-64gzd ====
I1226 14:13:44.062735       1 flags.go:64] FLAG: --bind-address="0.0.0.0"
I1226 14:13:44.062817       1 flags.go:64] FLAG: --bind-address-hard-fail="false"
I1226 14:13:44.062823       1 flags.go:64] FLAG: --boot-id-file="/proc/sys/kernel/random/boot_id"
I1226 14:13:44.062828       1 flags.go:64] FLAG: --cleanup="false"
I1226 14:13:44.062832       1 flags.go:64] FLAG: --cluster-cidr="10.244.0.0/16"
I1226 14:13:44.062838       1 flags.go:64] FLAG: --config=""
I1226 14:13:44.062842       1 flags.go:64] FLAG: --config-sync-period="15m0s"
I1226 14:13:44.062847       1 flags.go:64] FLAG: --conntrack-max-per-core="0"
I1226 14:13:44.062852       1 flags.go:64] FLAG: --conntrack-min="131072"
I1226 14:13:44.062855       1 flags.go:64] FLAG: --conntrack-tcp-timeout-close-wait="1h0m0s"
I1226 14:13:44.062859       1 flags.go:64] FLAG: --conntrack-tcp-timeout-established="24h0m0s"
I1226 14:13:44.062992       1 flags.go:64] FLAG: --detect-local-mode="ClusterCIDR"
I1226 14:13:44.063004       1 flags.go:64] FLAG: --feature-gates=""
I1226 14:13:44.063010       1 flags.go:64] FLAG: --healthz-bind-address="0.0.0.0:10256"
I1226 14:13:44.063016       1 flags.go:64] FLAG: --healthz-port="10256"
I1226 14:13:44.063020       1 flags.go:64] FLAG: --help="false"
I1226 14:13:44.063024       1 flags.go:64] FLAG: --hostname-override=""
I1226 14:13:44.063028       1 flags.go:64] FLAG: --iptables-localhost-nodeports="true"
I1226 14:13:44.063031       1 flags.go:64] FLAG: --iptables-masquerade-bit="14"
I1226 14:13:44.063035       1 flags.go:64] FLAG: --iptables-min-sync-period="1s"
I1226 14:13:44.063039       1 flags.go:64] FLAG: --iptables-sync-period="30s"
I1226 14:13:44.063042       1 flags.go:64] FLAG: --ipvs-exclude-cidrs="[]"
I1226 14:13:44.063052       1 flags.go:64] FLAG: --ipvs-min-sync-period="0s"
I1226 14:13:44.063056       1 flags.go:64] FLAG: --ipvs-scheduler=""
I1226 14:13:44.063060       1 flags.go:64] FLAG: --ipvs-strict-arp="false"
I1226 14:13:44.063063       1 flags.go:64] FLAG: --ipvs-sync-period="30s"
I1226 14:13:44.063067       1 flags.go:64] FLAG: --ipvs-tcp-timeout="0s"
I1226 14:13:44.063071       1 flags.go:64] FLAG: --ipvs-tcpfin-timeout="0s"
I1226 14:13:44.063075       1 flags.go:64] FLAG: --ipvs-udp-timeout="0s"
I1226 14:13:44.063084       1 flags.go:64] FLAG: --kube-api-burst="10"
I1226 14:13:44.063093       1 flags.go:64] FLAG: --kube-api-content-type="application/vnd.kubernetes.protobuf"
I1226 14:13:44.063098       1 flags.go:64] FLAG: --kube-api-qps="5"
I1226 14:13:44.063110       1 flags.go:64] FLAG: --kubeconfig=""
I1226 14:13:44.063113       1 flags.go:64] FLAG: --log-flush-frequency="5s"
I1226 14:13:44.063118       1 flags.go:64] FLAG: --machine-id-file="/etc/machine-id,/var/lib/dbus/machine-id"
I1226 14:13:44.063122       1 flags.go:64] FLAG: --masquerade-all="false"
I1226 14:13:44.063126       1 flags.go:64] FLAG: --master=""
I1226 14:13:44.063129       1 flags.go:64] FLAG: --metrics-bind-address="0.0.0.0:10249"
I1226 14:13:44.063133       1 flags.go:64] FLAG: --metrics-port="10249"
I1226 14:13:44.063137       1 flags.go:64] FLAG: --nodeport-addresses="[]"
I1226 14:13:44.063142       1 flags.go:64] FLAG: --oom-score-adj="-999"
I1226 14:13:44.063145       1 flags.go:64] FLAG: --pod-bridge-interface=""
I1226 14:13:44.063149       1 flags.go:64] FLAG: --pod-interface-name-prefix=""
I1226 14:13:44.063153       1 flags.go:64] FLAG: --profiling="false"
I1226 14:13:44.063156       1 flags.go:64] FLAG: --proxy-mode=""
I1226 14:13:44.063161       1 flags.go:64] FLAG: --proxy-port-range=""
I1226 14:13:44.063165       1 flags.go:64] FLAG: --show-hidden-metrics-for-version=""
I1226 14:13:44.063169       1 flags.go:64] FLAG: --v="3"
I1226 14:13:44.063173       1 flags.go:64] FLAG: --version="false"
I1226 14:13:44.063185       1 flags.go:64] FLAG: --vmodule=""
I1226 14:13:44.063191       1 flags.go:64] FLAG: --write-config-to=""
I1226 14:13:44.063214       1 server.go:226] "Warning, all flags other than --config, --write-config-to, and --cleanup are deprecated, please begin using a config file ASAP"
I1226 14:13:44.063312       1 feature_gate.go:249] feature gates: &{map[]}
I1226 14:13:44.063414       1 feature_gate.go:249] feature gates: &{map[]}
I1226 14:13:44.063798       1 server.go:560] "Neither kubeconfig file nor master URL was specified, falling back to in-cluster config"
I1226 14:13:44.262140       1 node.go:141] Successfully retrieved node IP: 10.224.0.5
I1226 14:13:44.262185       1 server_others.go:110] "Detected node IP" address="10.224.0.5"
I1226 14:13:44.262216       1 server_others.go:554] "Using iptables proxy"
I1226 14:13:44.262226       1 server_others.go:149] "DetectLocalMode" localMode="ClusterCIDR"
I1226 14:13:44.439532       1 server_others.go:192] "Using iptables Proxier"
I1226 14:13:44.439571       1 server_others.go:199] "kube-proxy running in dual-stack mode" ipFamily=IPv4
I1226 14:13:44.439586       1 server_others.go:200] "Creating dualStackProxier for iptables"
I1226 14:13:44.439600       1 server_others.go:484] "Detect-local-mode set to ClusterCIDR, but no IPv6 cluster CIDR defined, defaulting to no-op detect-local for IPv6"
I1226 14:13:44.446708       1 proxier.go:253] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses"
I1226 14:13:44.446828       1 utils.go:345] "Changed sysctl" name="net/ipv4/conf/all/route_localnet" before=0 after=1
I1226 14:13:44.446953       1 proxier.go:269] "Using iptables mark for masquerade" ipFamily=IPv4 mark="0x00004000"
I1226 14:13:44.447205       1 proxier.go:303] "Iptables sync params" ipFamily=IPv4 minSyncPeriod="1s" syncPeriod="30s" burstSyncs=2
I1226 14:13:44.447251       1 proxier.go:313] "Iptables supports --random-fully" ipFamily=IPv4
I1226 14:13:44.447346       1 proxier.go:269] "Using iptables mark for masquerade" ipFamily=IPv6 mark="0x00004000"
I1226 14:13:44.447599       1 proxier.go:303] "Iptables sync params" ipFamily=IPv6 minSyncPeriod="1s" syncPeriod="30s" burstSyncs=2
I1226 14:13:44.447622       1 proxier.go:313] "Iptables supports --random-fully" ipFamily=IPv6
I1226 14:13:44.451271       1 server.go:658] "Version info" version="v1.27.7"
I1226 14:13:44.451294       1 server.go:660] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I1226 14:13:44.451778       1 conntrack.go:100] "Set sysctl" entry="net/netfilter/nf_conntrack_tcp_timeout_close_wait" value=3600
I1226 14:13:44.459569       1 bounded_frequency_runner.go:192] sync-runner Loop running
I1226 14:13:44.459595       1 bounded_frequency_runner.go:192] sync-runner Loop running
I1226 14:13:44.461733       1 config.go:188] "Starting service config controller"
I1226 14:13:44.463706       1 config.go:97] "Starting endpoint slice config controller"
I1226 14:13:44.465131       1 shared_informer.go:311] Waiting for caches to sync for service config
I1226 14:13:44.465137       1 shared_informer.go:311] Waiting for caches to sync for endpoint slice config
I1226 14:13:44.465505       1 reflector.go:287] Starting reflector *v1.Service (15m0s) from vendor/k8s.io/client-go/informers/factory.go:150
I1226 14:13:44.465606       1 reflector.go:323] Listing and watching *v1.Service from vendor/k8s.io/client-go/informers/factory.go:150
I1226 14:13:44.465508       1 proxier_health.go:146] "Starting healthz HTTP server" address="0.0.0.0:10256"
I1226 14:13:44.471615       1 config.go:315] "Starting node config controller"
I1226 14:13:44.471648       1 shared_informer.go:311] Waiting for caches to sync for node config
I1226 14:13:44.471778       1 reflector.go:287] Starting reflector *v1.EndpointSlice (15m0s) from vendor/k8s.io/client-go/informers/factory.go:150
I1226 14:13:44.471792       1 reflector.go:323] Listing and watching *v1.EndpointSlice from vendor/k8s.io/client-go/informers/factory.go:150
I1226 14:13:44.472655       1 reflector.go:287] Starting reflector *v1.Node (15m0s) from vendor/k8s.io/client-go/informers/factory.go:150
I1226 14:13:44.472668       1 reflector.go:323] Listing and watching *v1.Node from vendor/k8s.io/client-go/informers/factory.go:150
I1226 14:13:44.485146       1 proxier.go:814] "Not syncing iptables until Services and Endpoints have been received from master"
I1226 14:13:44.485166       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:13:44.485417       1 proxier.go:814] "Not syncing iptables until Services and Endpoints have been received from master"
I1226 14:13:44.485442       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:13:44.565572       1 shared_informer.go:318] Caches are synced for endpoint slice config
I1226 14:13:44.565631       1 config.go:104] "Calling handler.OnEndpointSlicesSynced()"
I1226 14:13:44.565859       1 proxier.go:814] "Not syncing iptables until Services and Endpoints have been received from master"
I1226 14:13:44.565895       1 proxier.go:814] "Not syncing iptables until Services and Endpoints have been received from master"
I1226 14:13:44.565711       1 shared_informer.go:318] Caches are synced for service config
I1226 14:13:44.565906       1 config.go:195] "Calling handler.OnServiceSynced()"
I1226 14:13:44.566088       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="default/kubernetes:https" endpoints=[52.191.32.229:443]
I1226 14:13:44.566109       1 proxier.go:857] "Syncing iptables rules"
I1226 14:13:44.572021       1 shared_informer.go:318] Caches are synced for node config
I1226 14:13:44.572040       1 config.go:322] "Calling handler.OnNodeSynced()"
I1226 14:13:44.670868       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=1 numFilterChains=6 numFilterRules=7 numNATChains=6 numNATRules=10
I1226 14:13:44.725691       1 proxier.go:822] "SyncProxyRules complete" elapsed="159.654149ms"
I1226 14:13:44.725723       1 proxier.go:857] "Syncing iptables rules"
I1226 14:13:44.812959       1 proxier.go:1573] "Reloading service iptables data" numServices=0 numEndpoints=0 numFilterChains=5 numFilterRules=3 numNATChains=4 numNATRules=5
I1226 14:13:44.824761       1 proxier.go:822] "SyncProxyRules complete" elapsed="99.03586ms"
I1226 14:13:45.864854       1 proxier.go:857] "Syncing iptables rules"
I1226 14:13:45.864888       1 proxier.go:857] "Syncing iptables rules"
I1226 14:13:45.911686       1 proxier.go:1573] "Reloading service iptables data" numServices=0 numEndpoints=0 numFilterChains=5 numFilterRules=3 numNATChains=4 numNATRules=5
I1226 14:13:45.913760       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=1 numFilterChains=6 numFilterRules=7 numNATChains=6 numNATRules=10
I1226 14:13:45.947111       1 proxier.go:822] "SyncProxyRules complete" elapsed="82.282793ms"
I1226 14:13:45.947137       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:13:45.983370       1 proxier.go:822] "SyncProxyRules complete" elapsed="118.497302ms"
I1226 14:13:45.983397       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:14:15.536978       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns" endpoints=[10.244.0.3:53]
I1226 14:14:15.537006       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns-tcp" endpoints=[10.244.0.3:53]
I1226 14:14:15.537020       1 proxier.go:857] "Syncing iptables rules"
I1226 14:14:15.540610       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=3 numFilterChains=6 numFilterRules=7 numNATChains=4 numNATRules=6
I1226 14:14:15.559284       1 proxier.go:822] "SyncProxyRules complete" elapsed="22.335336ms"
I1226 14:14:15.559311       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:14:16.511916       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.2:4443]
I1226 14:14:16.511962       1 proxier.go:857] "Syncing iptables rules"
I1226 14:14:16.517569       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=4 numFilterChains=6 numFilterRules=7 numNATChains=4 numNATRules=6
I1226 14:14:16.539253       1 proxier.go:822] "SyncProxyRules complete" elapsed="27.380073ms"
I1226 14:14:16.539276       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:14:16.539437       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.2:4443]
I1226 14:14:16.539481       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.2:4443 10.244.0.4:4443]
I1226 14:14:16.539572       1 proxier.go:857] "Syncing iptables rules"
I1226 14:14:16.543111       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=5 numFilterChains=6 numFilterRules=7 numNATChains=4 numNATRules=6
I1226 14:14:16.563392       1 proxier.go:822] "SyncProxyRules complete" elapsed="24.094988ms"
I1226 14:14:16.563413       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:14:19.525559       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns" endpoints=[10.244.0.3:53]
I1226 14:14:19.525583       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns-tcp" endpoints=[10.244.0.3:53]
I1226 14:14:19.525607       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns" endpoints=[10.244.0.3:53 10.244.0.8:53]
I1226 14:14:19.525615       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns-tcp" endpoints=[10.244.0.3:53 10.244.0.8:53]
I1226 14:14:19.525630       1 proxier.go:857] "Syncing iptables rules"
I1226 14:14:19.529292       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=7 numFilterChains=6 numFilterRules=7 numNATChains=4 numNATRules=6
I1226 14:14:19.547257       1 proxier.go:822] "SyncProxyRules complete" elapsed="21.762986ms"
I1226 14:14:19.547282       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:14:19.547336       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns" endpoints=[10.244.0.3:53 10.244.0.8:53]
I1226 14:14:19.547354       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns-tcp" endpoints=[10.244.0.3:53 10.244.0.8:53]
I1226 14:14:19.547378       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns" endpoints=[10.244.0.3:53 10.244.0.8:53]
I1226 14:14:19.547389       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns-tcp" endpoints=[10.244.0.3:53 10.244.0.8:53]
I1226 14:14:19.547464       1 proxier.go:857] "Syncing iptables rules"
I1226 14:14:19.551171       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=7 numFilterChains=6 numFilterRules=5 numNATChains=8 numNATRules=16
I1226 14:14:19.615525       1 proxier.go:822] "SyncProxyRules complete" elapsed="68.218712ms"
I1226 14:14:19.615547       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:14:22.773729       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.2:4443 10.244.0.4:4443]
I1226 14:14:22.773774       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.2:4443 10.244.0.4:4443]
I1226 14:14:22.773788       1 proxier.go:857] "Syncing iptables rules"
I1226 14:14:22.778147       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=7 numFilterChains=6 numFilterRules=5 numNATChains=4 numNATRules=8
I1226 14:14:22.795893       1 proxier.go:822] "SyncProxyRules complete" elapsed="21.553336ms"
I1226 14:14:22.795972       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:14:23.453436       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns" endpoints=[10.244.0.3:53 10.244.0.8:53]
I1226 14:14:23.453464       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns-tcp" endpoints=[10.244.0.3:53 10.244.0.8:53]
I1226 14:14:23.453489       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns" endpoints=[10.244.0.3:53 10.244.0.8:53]
I1226 14:14:23.453513       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns-tcp" endpoints=[10.244.0.3:53 10.244.0.8:53]
I1226 14:14:23.453529       1 proxier.go:857] "Syncing iptables rules"
I1226 14:14:23.457713       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=7 numFilterChains=6 numFilterRules=5 numNATChains=10 numNATRules=22
I1226 14:14:23.487872       1 proxier.go:822] "SyncProxyRules complete" elapsed="34.475497ms"
I1226 14:14:23.487898       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:14:24.488389       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.2:4443 10.244.0.4:4443]
I1226 14:14:24.488443       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.4:4443]
I1226 14:14:24.488459       1 proxier.go:857] "Syncing iptables rules"
I1226 14:14:24.492954       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=6 numFilterChains=6 numFilterRules=5 numNATChains=4 numNATRules=8
I1226 14:14:24.511271       1 proxier.go:822] "SyncProxyRules complete" elapsed="22.938061ms"
I1226 14:14:24.511296       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:14:25.574835       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.4:4443]
I1226 14:14:25.574878       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.10:4443 10.244.0.4:4443]
I1226 14:14:25.574896       1 proxier.go:857] "Syncing iptables rules"
I1226 14:14:25.580363       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=7 numFilterChains=6 numFilterRules=5 numNATChains=4 numNATRules=8
I1226 14:14:25.599262       1 proxier.go:822] "SyncProxyRules complete" elapsed="24.456597ms"
I1226 14:14:25.599288       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:14:26.599563       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.10:4443 10.244.0.4:4443]
I1226 14:14:26.599607       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.10:4443 10.244.0.4:4443 10.244.0.9:4443]
I1226 14:14:26.599623       1 proxier.go:857] "Syncing iptables rules"
I1226 14:14:26.604085       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=8 numFilterChains=6 numFilterRules=5 numNATChains=4 numNATRules=8
I1226 14:14:26.623584       1 proxier.go:822] "SyncProxyRules complete" elapsed="24.077063ms"
I1226 14:14:26.623610       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:15:23.441044       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.10:4443 10.244.0.4:4443 10.244.0.9:4443]
I1226 14:15:23.441080       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.10:4443 10.244.0.4:4443 10.244.0.9:4443]
I1226 14:15:23.441094       1 proxier.go:857] "Syncing iptables rules"
I1226 14:15:23.445195       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=8 numFilterChains=6 numFilterRules=4 numNATChains=6 numNATRules=13
I1226 14:15:23.463209       1 proxier.go:822] "SyncProxyRules complete" elapsed="22.203311ms"
I1226 14:15:23.463230       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:15:33.086285       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.10:4443 10.244.0.4:4443 10.244.0.9:4443]
I1226 14:15:33.086319       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.10:4443 10.244.0.4:4443 10.244.0.9:4443]
I1226 14:15:33.086360       1 proxier.go:857] "Syncing iptables rules"
I1226 14:15:33.090811       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=8 numFilterChains=6 numFilterRules=4 numNATChains=7 numNATRules=16
I1226 14:15:33.107380       1 proxier.go:822] "SyncProxyRules complete" elapsed="21.127323ms"
I1226 14:15:33.107403       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:15:33.157529       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.10:4443 10.244.0.4:4443 10.244.0.9:4443]
I1226 14:15:33.157565       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.10:4443 10.244.0.4:4443 10.244.0.9:4443]
I1226 14:15:33.157579       1 proxier.go:857] "Syncing iptables rules"
I1226 14:15:33.163027       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=8 numFilterChains=6 numFilterRules=4 numNATChains=7 numNATRules=14
I1226 14:15:33.179306       1 proxier.go:822] "SyncProxyRules complete" elapsed="21.806485ms"
I1226 14:15:33.179329       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:15:34.180309       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.10:4443 10.244.0.4:4443 10.244.0.9:4443]
I1226 14:15:34.180352       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.10:4443 10.244.0.4:4443 10.244.0.9:4443]
I1226 14:15:34.180368       1 proxier.go:857] "Syncing iptables rules"
I1226 14:15:34.184733       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=8 numFilterChains=6 numFilterRules=4 numNATChains=7 numNATRules=16
I1226 14:15:34.204035       1 proxier.go:822] "SyncProxyRules complete" elapsed="23.798766ms"
I1226 14:15:34.204065       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:15:35.205213       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.10:4443 10.244.0.4:4443 10.244.0.9:4443]
I1226 14:15:35.205267       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.10:4443 10.244.0.9:4443]
I1226 14:15:35.205291       1 proxier.go:857] "Syncing iptables rules"
I1226 14:15:35.210177       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=7 numFilterChains=6 numFilterRules=4 numNATChains=7 numNATRules=16
I1226 14:15:35.227291       1 proxier.go:822] "SyncProxyRules complete" elapsed="22.192719ms"
I1226 14:15:35.227313       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
==== END logs for container kube-proxy of pod kube-system/kube-proxy-64gzd ====
==== START logs for container kube-proxy-bootstrap of pod kube-system/kube-proxy-jn5rp ====
Current net.netfilter.nf_conntrack_max: 262144
AKS custom config for net.netfilter.nf_conntrack_max not set.
Setting nf_conntrack_max to 131072 (32768 * 2 cores, minimum 131072).
==== END logs for container kube-proxy-bootstrap of pod kube-system/kube-proxy-jn5rp ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-jn5rp ====
I1226 14:13:49.560764       1 flags.go:64] FLAG: --bind-address="0.0.0.0"
I1226 14:13:49.560851       1 flags.go:64] FLAG: --bind-address-hard-fail="false"
I1226 14:13:49.560857       1 flags.go:64] FLAG: --boot-id-file="/proc/sys/kernel/random/boot_id"
I1226 14:13:49.560862       1 flags.go:64] FLAG: --cleanup="false"
I1226 14:13:49.560866       1 flags.go:64] FLAG: --cluster-cidr="10.244.0.0/16"
I1226 14:13:49.560876       1 flags.go:64] FLAG: --config=""
I1226 14:13:49.560921       1 flags.go:64] FLAG: --config-sync-period="15m0s"
I1226 14:13:49.560938       1 flags.go:64] FLAG: --conntrack-max-per-core="0"
I1226 14:13:49.560944       1 flags.go:64] FLAG: --conntrack-min="131072"
I1226 14:13:49.560948       1 flags.go:64] FLAG: --conntrack-tcp-timeout-close-wait="1h0m0s"
I1226 14:13:49.560952       1 flags.go:64] FLAG: --conntrack-tcp-timeout-established="24h0m0s"
I1226 14:13:49.560957       1 flags.go:64] FLAG: --detect-local-mode="ClusterCIDR"
I1226 14:13:49.560962       1 flags.go:64] FLAG: --feature-gates=""
I1226 14:13:49.560970       1 flags.go:64] FLAG: --healthz-bind-address="0.0.0.0:10256"
I1226 14:13:49.561057       1 flags.go:64] FLAG: --healthz-port="10256"
I1226 14:13:49.561069       1 flags.go:64] FLAG: --help="false"
I1226 14:13:49.561077       1 flags.go:64] FLAG: --hostname-override=""
I1226 14:13:49.561081       1 flags.go:64] FLAG: --iptables-localhost-nodeports="true"
I1226 14:13:49.561085       1 flags.go:64] FLAG: --iptables-masquerade-bit="14"
I1226 14:13:49.561088       1 flags.go:64] FLAG: --iptables-min-sync-period="1s"
I1226 14:13:49.561092       1 flags.go:64] FLAG: --iptables-sync-period="30s"
I1226 14:13:49.561117       1 flags.go:64] FLAG: --ipvs-exclude-cidrs="[]"
I1226 14:13:49.561144       1 flags.go:64] FLAG: --ipvs-min-sync-period="0s"
I1226 14:13:49.561164       1 flags.go:64] FLAG: --ipvs-scheduler=""
I1226 14:13:49.561168       1 flags.go:64] FLAG: --ipvs-strict-arp="false"
I1226 14:13:49.561172       1 flags.go:64] FLAG: --ipvs-sync-period="30s"
I1226 14:13:49.561176       1 flags.go:64] FLAG: --ipvs-tcp-timeout="0s"
I1226 14:13:49.561180       1 flags.go:64] FLAG: --ipvs-tcpfin-timeout="0s"
I1226 14:13:49.561218       1 flags.go:64] FLAG: --ipvs-udp-timeout="0s"
I1226 14:13:49.561222       1 flags.go:64] FLAG: --kube-api-burst="10"
I1226 14:13:49.561241       1 flags.go:64] FLAG: --kube-api-content-type="application/vnd.kubernetes.protobuf"
I1226 14:13:49.561252       1 flags.go:64] FLAG: --kube-api-qps="5"
I1226 14:13:49.561258       1 flags.go:64] FLAG: --kubeconfig=""
I1226 14:13:49.561262       1 flags.go:64] FLAG: --log-flush-frequency="5s"
I1226 14:13:49.561267       1 flags.go:64] FLAG: --machine-id-file="/etc/machine-id,/var/lib/dbus/machine-id"
I1226 14:13:49.561303       1 flags.go:64] FLAG: --masquerade-all="false"
I1226 14:13:49.561308       1 flags.go:64] FLAG: --master=""
I1226 14:13:49.561312       1 flags.go:64] FLAG: --metrics-bind-address="0.0.0.0:10249"
I1226 14:13:49.561335       1 flags.go:64] FLAG: --metrics-port="10249"
I1226 14:13:49.561340       1 flags.go:64] FLAG: --nodeport-addresses="[]"
I1226 14:13:49.561345       1 flags.go:64] FLAG: --oom-score-adj="-999"
I1226 14:13:49.561349       1 flags.go:64] FLAG: --pod-bridge-interface=""
I1226 14:13:49.561353       1 flags.go:64] FLAG: --pod-interface-name-prefix=""
I1226 14:13:49.561390       1 flags.go:64] FLAG: --profiling="false"
I1226 14:13:49.561394       1 flags.go:64] FLAG: --proxy-mode=""
I1226 14:13:49.561430       1 flags.go:64] FLAG: --proxy-port-range=""
I1226 14:13:49.561437       1 flags.go:64] FLAG: --show-hidden-metrics-for-version=""
I1226 14:13:49.561467       1 flags.go:64] FLAG: --v="3"
I1226 14:13:49.561479       1 flags.go:64] FLAG: --version="false"
I1226 14:13:49.561502       1 flags.go:64] FLAG: --vmodule=""
I1226 14:13:49.561514       1 flags.go:64] FLAG: --write-config-to=""
I1226 14:13:49.561580       1 server.go:226] "Warning, all flags other than --config, --write-config-to, and --cleanup are deprecated, please begin using a config file ASAP"
I1226 14:13:49.561713       1 feature_gate.go:249] feature gates: &{map[]}
I1226 14:13:49.561852       1 feature_gate.go:249] feature gates: &{map[]}
I1226 14:13:49.566696       1 server.go:560] "Neither kubeconfig file nor master URL was specified, falling back to in-cluster config"
I1226 14:13:49.780410       1 node.go:141] Successfully retrieved node IP: 10.224.0.4
I1226 14:13:49.780472       1 server_others.go:110] "Detected node IP" address="10.224.0.4"
I1226 14:13:49.780510       1 server_others.go:554] "Using iptables proxy"
I1226 14:13:49.780520       1 server_others.go:149] "DetectLocalMode" localMode="ClusterCIDR"
I1226 14:13:49.964721       1 server_others.go:192] "Using iptables Proxier"
I1226 14:13:49.964770       1 server_others.go:199] "kube-proxy running in dual-stack mode" ipFamily=IPv4
I1226 14:13:49.964781       1 server_others.go:200] "Creating dualStackProxier for iptables"
I1226 14:13:49.964797       1 server_others.go:484] "Detect-local-mode set to ClusterCIDR, but no IPv6 cluster CIDR defined, defaulting to no-op detect-local for IPv6"
I1226 14:13:49.972663       1 proxier.go:253] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses"
I1226 14:13:49.972861       1 utils.go:345] "Changed sysctl" name="net/ipv4/conf/all/route_localnet" before=0 after=1
I1226 14:13:49.972942       1 proxier.go:269] "Using iptables mark for masquerade" ipFamily=IPv4 mark="0x00004000"
I1226 14:13:49.973204       1 proxier.go:303] "Iptables sync params" ipFamily=IPv4 minSyncPeriod="1s" syncPeriod="30s" burstSyncs=2
I1226 14:13:49.973264       1 proxier.go:313] "Iptables supports --random-fully" ipFamily=IPv4
I1226 14:13:49.973316       1 proxier.go:269] "Using iptables mark for masquerade" ipFamily=IPv6 mark="0x00004000"
I1226 14:13:49.973477       1 proxier.go:303] "Iptables sync params" ipFamily=IPv6 minSyncPeriod="1s" syncPeriod="30s" burstSyncs=2
I1226 14:13:49.973505       1 proxier.go:313] "Iptables supports --random-fully" ipFamily=IPv6
I1226 14:13:49.973689       1 server.go:658] "Version info" version="v1.27.7"
I1226 14:13:49.973709       1 server.go:660] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I1226 14:13:49.974207       1 conntrack.go:100] "Set sysctl" entry="net/netfilter/nf_conntrack_tcp_timeout_close_wait" value=3600
I1226 14:13:49.982227       1 bounded_frequency_runner.go:192] sync-runner Loop running
I1226 14:13:49.982700       1 bounded_frequency_runner.go:192] sync-runner Loop running
I1226 14:13:49.982763       1 config.go:188] "Starting service config controller"
I1226 14:13:49.982800       1 shared_informer.go:311] Waiting for caches to sync for service config
I1226 14:13:49.982932       1 config.go:97] "Starting endpoint slice config controller"
I1226 14:13:49.982988       1 shared_informer.go:311] Waiting for caches to sync for endpoint slice config
I1226 14:13:49.983186       1 reflector.go:287] Starting reflector *v1.Service (15m0s) from vendor/k8s.io/client-go/informers/factory.go:150
I1226 14:13:49.983244       1 reflector.go:323] Listing and watching *v1.Service from vendor/k8s.io/client-go/informers/factory.go:150
I1226 14:13:49.987159       1 reflector.go:287] Starting reflector *v1.EndpointSlice (15m0s) from vendor/k8s.io/client-go/informers/factory.go:150
I1226 14:13:49.987243       1 reflector.go:323] Listing and watching *v1.EndpointSlice from vendor/k8s.io/client-go/informers/factory.go:150
I1226 14:13:49.987476       1 config.go:315] "Starting node config controller"
I1226 14:13:49.987547       1 shared_informer.go:311] Waiting for caches to sync for node config
I1226 14:13:49.987650       1 reflector.go:287] Starting reflector *v1.Node (15m0s) from vendor/k8s.io/client-go/informers/factory.go:150
I1226 14:13:49.987891       1 reflector.go:323] Listing and watching *v1.Node from vendor/k8s.io/client-go/informers/factory.go:150
I1226 14:13:49.988619       1 proxier_health.go:146] "Starting healthz HTTP server" address="0.0.0.0:10256"
I1226 14:13:50.017740       1 proxier.go:814] "Not syncing iptables until Services and Endpoints have been received from master"
I1226 14:13:50.017781       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:13:50.017992       1 proxier.go:814] "Not syncing iptables until Services and Endpoints have been received from master"
I1226 14:13:50.018018       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:13:50.083438       1 shared_informer.go:318] Caches are synced for endpoint slice config
I1226 14:13:50.083689       1 config.go:104] "Calling handler.OnEndpointSlicesSynced()"
I1226 14:13:50.083520       1 shared_informer.go:318] Caches are synced for service config
I1226 14:13:50.083923       1 config.go:195] "Calling handler.OnServiceSynced()"
I1226 14:13:50.083753       1 proxier.go:814] "Not syncing iptables until Services and Endpoints have been received from master"
I1226 14:13:50.084036       1 proxier.go:814] "Not syncing iptables until Services and Endpoints have been received from master"
I1226 14:13:50.084248       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="default/kubernetes:https" endpoints=[52.191.32.229:443]
I1226 14:13:50.084293       1 proxier.go:857] "Syncing iptables rules"
I1226 14:13:50.088557       1 shared_informer.go:318] Caches are synced for node config
I1226 14:13:50.088580       1 config.go:322] "Calling handler.OnNodeSynced()"
I1226 14:13:50.177099       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=1 numFilterChains=6 numFilterRules=7 numNATChains=6 numNATRules=10
I1226 14:13:50.217500       1 proxier.go:822] "SyncProxyRules complete" elapsed="133.356323ms"
I1226 14:13:50.217538       1 proxier.go:857] "Syncing iptables rules"
I1226 14:13:50.295679       1 proxier.go:1573] "Reloading service iptables data" numServices=0 numEndpoints=0 numFilterChains=5 numFilterRules=3 numNATChains=4 numNATRules=5
I1226 14:13:50.302347       1 proxier.go:822] "SyncProxyRules complete" elapsed="84.807324ms"
I1226 14:13:50.960004       1 proxier.go:857] "Syncing iptables rules"
I1226 14:13:50.960035       1 proxier.go:857] "Syncing iptables rules"
I1226 14:13:51.015663       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=1 numFilterChains=6 numFilterRules=7 numNATChains=6 numNATRules=10
I1226 14:13:51.017220       1 proxier.go:1573] "Reloading service iptables data" numServices=0 numEndpoints=0 numFilterChains=5 numFilterRules=3 numNATChains=4 numNATRules=5
I1226 14:13:51.047657       1 proxier.go:822] "SyncProxyRules complete" elapsed="87.677227ms"
I1226 14:13:51.047756       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:13:51.075951       1 proxier.go:822] "SyncProxyRules complete" elapsed="115.969513ms"
I1226 14:13:51.075984       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:14:15.547131       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns" endpoints=[10.244.0.3:53]
I1226 14:14:15.547159       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns-tcp" endpoints=[10.244.0.3:53]
I1226 14:14:15.547174       1 proxier.go:857] "Syncing iptables rules"
I1226 14:14:15.551105       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=3 numFilterChains=6 numFilterRules=7 numNATChains=4 numNATRules=6
I1226 14:14:15.566290       1 proxier.go:822] "SyncProxyRules complete" elapsed="19.234855ms"
I1226 14:14:15.566324       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:14:16.522251       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.2:4443]
I1226 14:14:16.522507       1 proxier.go:857] "Syncing iptables rules"
I1226 14:14:16.526628       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=4 numFilterChains=6 numFilterRules=7 numNATChains=4 numNATRules=6
I1226 14:14:16.547684       1 proxier.go:822] "SyncProxyRules complete" elapsed="25.514007ms"
I1226 14:14:16.547714       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:14:16.547875       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.2:4443]
I1226 14:14:16.547911       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.2:4443 10.244.0.4:4443]
I1226 14:14:16.547992       1 proxier.go:857] "Syncing iptables rules"
I1226 14:14:16.551776       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=5 numFilterChains=6 numFilterRules=7 numNATChains=4 numNATRules=6
I1226 14:14:16.579767       1 proxier.go:822] "SyncProxyRules complete" elapsed="32.023358ms"
I1226 14:14:16.579799       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:14:19.539354       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns" endpoints=[10.244.0.3:53]
I1226 14:14:19.539614       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns-tcp" endpoints=[10.244.0.3:53]
I1226 14:14:19.539778       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns" endpoints=[10.244.0.3:53 10.244.0.8:53]
I1226 14:14:19.539875       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns-tcp" endpoints=[10.244.0.3:53 10.244.0.8:53]
I1226 14:14:19.540029       1 proxier.go:857] "Syncing iptables rules"
I1226 14:14:19.548719       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=7 numFilterChains=6 numFilterRules=7 numNATChains=4 numNATRules=6
I1226 14:14:19.563724       1 proxier.go:822] "SyncProxyRules complete" elapsed="24.405115ms"
I1226 14:14:19.563952       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:14:19.564134       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns" endpoints=[10.244.0.3:53 10.244.0.8:53]
I1226 14:14:19.564296       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns-tcp" endpoints=[10.244.0.3:53 10.244.0.8:53]
I1226 14:14:19.567092       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns-tcp" endpoints=[10.244.0.3:53 10.244.0.8:53]
I1226 14:14:19.567240       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns" endpoints=[10.244.0.3:53 10.244.0.8:53]
I1226 14:14:19.567337       1 proxier.go:857] "Syncing iptables rules"
I1226 14:14:19.571187       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=7 numFilterChains=6 numFilterRules=5 numNATChains=8 numNATRules=16
I1226 14:14:19.670236       1 proxier.go:822] "SyncProxyRules complete" elapsed="106.160696ms"
I1226 14:14:19.670505       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:14:22.749431       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.2:4443 10.244.0.4:4443]
I1226 14:14:22.749468       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.2:4443 10.244.0.4:4443]
I1226 14:14:22.749483       1 proxier.go:857] "Syncing iptables rules"
I1226 14:14:22.755252       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=7 numFilterChains=6 numFilterRules=5 numNATChains=4 numNATRules=8
I1226 14:14:22.787959       1 proxier.go:822] "SyncProxyRules complete" elapsed="38.561815ms"
I1226 14:14:22.787986       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:14:23.463405       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns" endpoints=[10.244.0.3:53 10.244.0.8:53]
I1226 14:14:23.463433       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns-tcp" endpoints=[10.244.0.3:53 10.244.0.8:53]
I1226 14:14:23.463458       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns" endpoints=[10.244.0.3:53 10.244.0.8:53]
I1226 14:14:23.463469       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns-tcp" endpoints=[10.244.0.3:53 10.244.0.8:53]
I1226 14:14:23.463485       1 proxier.go:857] "Syncing iptables rules"
I1226 14:14:23.468739       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=7 numFilterChains=6 numFilterRules=5 numNATChains=10 numNATRules=22
I1226 14:14:23.520527       1 proxier.go:822] "SyncProxyRules complete" elapsed="57.19403ms"
I1226 14:14:23.520555       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:14:24.521556       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.2:4443 10.244.0.4:4443]
I1226 14:14:24.521816       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.4:4443]
I1226 14:14:24.521982       1 proxier.go:857] "Syncing iptables rules"
I1226 14:14:24.528200       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=6 numFilterChains=6 numFilterRules=5 numNATChains=4 numNATRules=8
I1226 14:14:24.548804       1 proxier.go:822] "SyncProxyRules complete" elapsed="27.308428ms"
I1226 14:14:24.548827       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:14:25.584507       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.4:4443]
I1226 14:14:25.584800       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.10:4443 10.244.0.4:4443]
I1226 14:14:25.584933       1 proxier.go:857] "Syncing iptables rules"
I1226 14:14:25.591163       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=7 numFilterChains=6 numFilterRules=5 numNATChains=4 numNATRules=8
I1226 14:14:25.611820       1 proxier.go:822] "SyncProxyRules complete" elapsed="27.340427ms"
I1226 14:14:25.611939       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:14:26.612216       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.10:4443 10.244.0.4:4443]
I1226 14:14:26.612462       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.10:4443 10.244.0.4:4443 10.244.0.9:4443]
I1226 14:14:26.612593       1 proxier.go:857] "Syncing iptables rules"
I1226 14:14:26.620552       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=8 numFilterChains=6 numFilterRules=5 numNATChains=4 numNATRules=8
I1226 14:14:26.635950       1 proxier.go:822] "SyncProxyRules complete" elapsed="23.778664ms"
I1226 14:14:26.636162       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:15:23.449251       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.10:4443 10.244.0.4:4443 10.244.0.9:4443]
I1226 14:15:23.449488       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.10:4443 10.244.0.4:4443 10.244.0.9:4443]
I1226 14:15:23.449617       1 proxier.go:857] "Syncing iptables rules"
I1226 14:15:23.456436       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=8 numFilterChains=6 numFilterRules=4 numNATChains=6 numNATRules=13
I1226 14:15:23.471901       1 proxier.go:822] "SyncProxyRules complete" elapsed="22.687772ms"
I1226 14:15:23.471933       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:15:33.095457       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.10:4443 10.244.0.4:4443 10.244.0.9:4443]
I1226 14:15:33.095496       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.10:4443 10.244.0.4:4443 10.244.0.9:4443]
I1226 14:15:33.095512       1 proxier.go:857] "Syncing iptables rules"
I1226 14:15:33.103174       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=8 numFilterChains=6 numFilterRules=4 numNATChains=7 numNATRules=16
I1226 14:15:33.125413       1 proxier.go:822] "SyncProxyRules complete" elapsed="29.993642ms"
I1226 14:15:33.125446       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:15:33.166930       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.10:4443 10.244.0.4:4443 10.244.0.9:4443]
I1226 14:15:33.166967       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.10:4443 10.244.0.4:4443 10.244.0.9:4443]
I1226 14:15:33.166985       1 proxier.go:857] "Syncing iptables rules"
I1226 14:15:33.177789       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=8 numFilterChains=6 numFilterRules=4 numNATChains=7 numNATRules=14
I1226 14:15:33.219922       1 proxier.go:822] "SyncProxyRules complete" elapsed="53.030143ms"
I1226 14:15:33.219959       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:15:34.220224       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.10:4443 10.244.0.4:4443 10.244.0.9:4443]
I1226 14:15:34.220453       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.10:4443 10.244.0.4:4443 10.244.0.9:4443]
I1226 14:15:34.220481       1 proxier.go:857] "Syncing iptables rules"
I1226 14:15:34.225681       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=8 numFilterChains=6 numFilterRules=4 numNATChains=7 numNATRules=16
I1226 14:15:34.247180       1 proxier.go:822] "SyncProxyRules complete" elapsed="27.032267ms"
I1226 14:15:34.247210       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1226 14:15:35.247680       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.10:4443 10.244.0.4:4443 10.244.0.9:4443]
I1226 14:15:35.247722       1 endpointslicecache.go:373] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=[10.244.0.10:4443 10.244.0.9:4443]
I1226 14:15:35.247739       1 proxier.go:857] "Syncing iptables rules"
I1226 14:15:35.252791       1 proxier.go:1573] "Reloading service iptables data" numServices=4 numEndpoints=7 numFilterChains=6 numFilterRules=4 numNATChains=7 numNATRules=16
I1226 14:15:35.272211       1 proxier.go:822] "SyncProxyRules complete" elapsed="24.584811ms"
I1226 14:15:35.272245       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
==== END logs for container kube-proxy of pod kube-system/kube-proxy-jn5rp ====
==== START logs for container metrics-server-vpa of pod kube-system/metrics-server-5955767688-jbkcx ====
ERROR: logging before flag.Parse: I1226 14:14:24.217794       1 pod_nanny.go:70] Invoked by [/pod_nanny --config-dir=/etc/config --cpu=44m --extra-cpu=0.5m --memory=51Mi --extra-memory=4Mi --poll-period=180000 --threshold=5 --deployment=metrics-server --container=metrics-server]
ERROR: logging before flag.Parse: I1226 14:14:24.307318       1 pod_nanny.go:71] Version: 1.8.19
ERROR: logging before flag.Parse: I1226 14:14:24.307352       1 pod_nanny.go:87] Watching namespace: kube-system, pod: metrics-server-5955767688-jbkcx, container: metrics-server.
ERROR: logging before flag.Parse: I1226 14:14:24.307360       1 pod_nanny.go:88] storage: MISSING, extra_storage: 0Gi
ERROR: logging before flag.Parse: I1226 14:14:24.314793       1 pod_nanny.go:195] Failed to read data from config file "/etc/config/NannyConfiguration": open /etc/config/NannyConfiguration: no such file or directory, using default parameters
ERROR: logging before flag.Parse: I1226 14:14:24.315035       1 pod_nanny.go:118] cpu: 44m, extra_cpu: 0.5m, memory: 51Mi, extra_memory: 4Mi
ERROR: logging before flag.Parse: I1226 14:14:24.315293       1 pod_nanny.go:147] Resources: [{Base:{i:{value:44 scale:-3} d:{Dec:<nil>} s:44m Format:DecimalSI} ExtraPerNode:{i:{value:5 scale:-4} d:{Dec:<nil>} s: Format:DecimalSI} Name:cpu} {Base:{i:{value:53477376 scale:0} d:{Dec:<nil>} s:51Mi Format:BinarySI} ExtraPerNode:{i:{value:4194304 scale:0} d:{Dec:<nil>} s:4Mi Format:BinarySI} Name:memory}]
==== END logs for container metrics-server-vpa of pod kube-system/metrics-server-5955767688-jbkcx ====
==== START logs for container metrics-server of pod kube-system/metrics-server-5955767688-jbkcx ====
I1226 14:14:42.307707       1 serving.go:342] Generated self-signed cert (/tmp/apiserver.crt, /tmp/apiserver.key)
I1226 14:14:52.917158       1 requestheader_controller.go:169] Starting RequestHeaderAuthRequestController
I1226 14:14:52.917689       1 shared_informer.go:240] Waiting for caches to sync for RequestHeaderAuthRequestController
I1226 14:14:52.917820       1 configmap_cafile_content.go:201] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I1226 14:14:52.917841       1 shared_informer.go:240] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I1226 14:14:52.918009       1 configmap_cafile_content.go:201] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::requestheader-client-ca-file"
I1226 14:14:52.918027       1 shared_informer.go:240] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::requestheader-client-ca-file
I1226 14:14:52.918773       1 dynamic_serving_content.go:131] "Starting controller" name="serving-cert::/tmp/apiserver.crt::/tmp/apiserver.key"
I1226 14:14:53.007860       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I1226 14:14:53.008159       1 secure_serving.go:267] Serving securely on [::]:4443
W1226 14:14:53.012433       1 shared_informer.go:372] The sharedIndexInformer has started, run more than once is not allowed
I1226 14:14:53.110175       1 shared_informer.go:247] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::requestheader-client-ca-file 
I1226 14:14:53.110528       1 shared_informer.go:247] Caches are synced for RequestHeaderAuthRequestController 
I1226 14:14:53.110822       1 shared_informer.go:247] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file 
==== END logs for container metrics-server of pod kube-system/metrics-server-5955767688-jbkcx ====
==== START logs for container metrics-server-vpa of pod kube-system/metrics-server-5955767688-z8xcm ====
ERROR: logging before flag.Parse: I1226 14:14:24.114139       1 pod_nanny.go:70] Invoked by [/pod_nanny --config-dir=/etc/config --cpu=44m --extra-cpu=0.5m --memory=51Mi --extra-memory=4Mi --poll-period=180000 --threshold=5 --deployment=metrics-server --container=metrics-server]
ERROR: logging before flag.Parse: I1226 14:14:24.115131       1 pod_nanny.go:71] Version: 1.8.19
ERROR: logging before flag.Parse: I1226 14:14:24.115171       1 pod_nanny.go:87] Watching namespace: kube-system, pod: metrics-server-5955767688-z8xcm, container: metrics-server.
ERROR: logging before flag.Parse: I1226 14:14:24.115236       1 pod_nanny.go:88] storage: MISSING, extra_storage: 0Gi
ERROR: logging before flag.Parse: I1226 14:14:24.212781       1 pod_nanny.go:195] Failed to read data from config file "/etc/config/NannyConfiguration": open /etc/config/NannyConfiguration: no such file or directory, using default parameters
ERROR: logging before flag.Parse: I1226 14:14:24.213034       1 pod_nanny.go:118] cpu: 44m, extra_cpu: 0.5m, memory: 51Mi, extra_memory: 4Mi
ERROR: logging before flag.Parse: I1226 14:14:24.213214       1 pod_nanny.go:147] Resources: [{Base:{i:{value:44 scale:-3} d:{Dec:<nil>} s:44m Format:DecimalSI} ExtraPerNode:{i:{value:5 scale:-4} d:{Dec:<nil>} s: Format:DecimalSI} Name:cpu} {Base:{i:{value:53477376 scale:0} d:{Dec:<nil>} s:51Mi Format:BinarySI} ExtraPerNode:{i:{value:4194304 scale:0} d:{Dec:<nil>} s:4Mi Format:BinarySI} Name:memory}]
==== END logs for container metrics-server-vpa of pod kube-system/metrics-server-5955767688-z8xcm ====
==== START logs for container metrics-server of pod kube-system/metrics-server-5955767688-z8xcm ====
I1226 14:14:42.809165       1 serving.go:342] Generated self-signed cert (/tmp/apiserver.crt, /tmp/apiserver.key)
I1226 14:15:01.817260       1 secure_serving.go:267] Serving securely on [::]:4443
I1226 14:15:01.907281       1 requestheader_controller.go:169] Starting RequestHeaderAuthRequestController
I1226 14:15:01.907326       1 shared_informer.go:240] Waiting for caches to sync for RequestHeaderAuthRequestController
W1226 14:15:01.908219       1 shared_informer.go:372] The sharedIndexInformer has started, run more than once is not allowed
I1226 14:15:01.908285       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I1226 14:15:02.007163       1 dynamic_serving_content.go:131] "Starting controller" name="serving-cert::/tmp/apiserver.crt::/tmp/apiserver.key"
I1226 14:15:02.009331       1 configmap_cafile_content.go:201] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::requestheader-client-ca-file"
I1226 14:15:02.009489       1 shared_informer.go:240] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::requestheader-client-ca-file
I1226 14:15:02.009717       1 configmap_cafile_content.go:201] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I1226 14:15:02.009822       1 shared_informer.go:240] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I1226 14:15:02.207281       1 shared_informer.go:247] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file 
I1226 14:15:02.207334       1 shared_informer.go:247] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::requestheader-client-ca-file 
I1226 14:15:02.207358       1 shared_informer.go:247] Caches are synced for RequestHeaderAuthRequestController 
==== END logs for container metrics-server of pod kube-system/metrics-server-5955767688-z8xcm ====
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "3767"
    },
    "items": [
        {
            "metadata": {
                "name": "aks-default-20426481-vmss000000.17a4672dfd7d6aff",
                "namespace": "default",
                "uid": "f119b03a-f136-4c4f-b16e-cf7a4542cb70",
                "resourceVersion": "585",
                "creationTimestamp": "2023-12-26T14:13:32Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-default-20426481-vmss000000",
                "uid": "aks-default-20426481-vmss000000"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node aks-default-20426481-vmss000000 status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:26Z",
            "lastTimestamp": "2023-12-26T14:13:32Z",
            "count": 7,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "aks-default-20426481-vmss000000.17a4672dfd808528",
                "namespace": "default",
                "uid": "91047167-5ae3-4bb0-ab0c-41b2963a4866",
                "resourceVersion": "586",
                "creationTimestamp": "2023-12-26T14:13:32Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-default-20426481-vmss000000",
                "uid": "aks-default-20426481-vmss000000"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node aks-default-20426481-vmss000000 status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:26Z",
            "lastTimestamp": "2023-12-26T14:13:32Z",
            "count": 7,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "aks-default-20426481-vmss000000.17a4672dfd834d48",
                "namespace": "default",
                "uid": "4ccbeb40-8f3f-4efc-9ae9-6560701352a5",
                "resourceVersion": "587",
                "creationTimestamp": "2023-12-26T14:13:32Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-default-20426481-vmss000000",
                "uid": "aks-default-20426481-vmss000000"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node aks-default-20426481-vmss000000 status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:26Z",
            "lastTimestamp": "2023-12-26T14:13:32Z",
            "count": 7,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "aks-default-20426481-vmss000000.17a4672fec12275c",
                "namespace": "default",
                "uid": "12749593-adc1-429d-95d4-f953ddc8249a",
                "resourceVersion": "637",
                "creationTimestamp": "2023-12-26T14:13:34Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-default-20426481-vmss000000",
                "uid": "53367dc9-f890-4712-8d23-366af186481d",
                "apiVersion": "v1"
            },
            "reason": "RegisteredNode",
            "message": "Node aks-default-20426481-vmss000000 event: Registered Node aks-default-20426481-vmss000000 in Controller",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2023-12-26T14:13:34Z",
            "lastTimestamp": "2023-12-26T14:13:34Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "node-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-default-20426481-vmss000000.17a46731e730bbd7",
                "namespace": "default",
                "uid": "f31d7628-f35f-40ee-a2f5-b8afcb629b41",
                "resourceVersion": "753",
                "creationTimestamp": "2023-12-26T14:13:43Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-default-20426481-vmss000000",
                "uid": "aks-default-20426481-vmss000000"
            },
            "reason": "NodeReady",
            "message": "Node aks-default-20426481-vmss000000 status is now: NodeReady",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:13:43Z",
            "lastTimestamp": "2023-12-26T14:13:43Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "aks-default-20426481-vmss000000.17a46733826da0d3",
                "namespace": "default",
                "uid": "e3cc31e9-b5a0-483c-a38a-375380f7dd76",
                "resourceVersion": "842",
                "creationTimestamp": "2023-12-26T14:13:50Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-default-20426481-vmss000000",
                "uid": "aks-default-20426481-vmss000000"
            },
            "reason": "Starting",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Normal",
            "eventTime": "2023-12-26T14:13:49.982104Z",
            "action": "StartKubeProxy",
            "reportingComponent": "kube-proxy",
            "reportingInstance": "kube-proxy-aks-default-20426481-vmss000000"
        },
        {
            "metadata": {
                "name": "aks-default-20426481-vmss000000.17a467525578ed75",
                "namespace": "default",
                "uid": "898450c7-30f0-4f55-88f0-f263b5be9ff2",
                "resourceVersion": "1569",
                "creationTimestamp": "2023-12-26T14:16:02Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-default-20426481-vmss000000",
                "uid": "aks-default-20426481-vmss000000"
            },
            "reason": "ContainerdStart",
            "message": "Starting containerd container runtime...",
            "source": {
                "component": "systemd-monitor",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:16:02Z",
            "lastTimestamp": "2023-12-26T14:16:02Z",
            "count": 2,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-default-20426481-vmss000000.17a46757e6b5313c",
                "namespace": "default",
                "uid": "eb468230-33ef-4fee-807b-5bbc719c2018",
                "resourceVersion": "1666",
                "creationTimestamp": "2023-12-26T14:16:26Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-default-20426481-vmss000000",
                "uid": "aks-default-20426481-vmss000000"
            },
            "reason": "PreemptScheduled",
            "message": "IMDS query failed, exit code: 28\nConnection timed out after 24 seconds.",
            "source": {
                "component": "custom-scheduledevents-consolidated-preempt-plugin-monitor",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:16:26Z",
            "lastTimestamp": "2023-12-26T14:16:26Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-default-20426481-vmss000000.17a4675814050bab",
                "namespace": "default",
                "uid": "a4134e8f-bfc1-4475-82c0-91759621a1e9",
                "resourceVersion": "1669",
                "creationTimestamp": "2023-12-26T14:16:27Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-default-20426481-vmss000000",
                "uid": "aks-default-20426481-vmss000000"
            },
            "reason": "NoVMEventScheduled",
            "message": "Node condition VMEventScheduled is now: Unknown, reason: NoVMEventScheduled, message: \"Timeout when running plugin \\\"/etc/node-problem-detector.d/plugin/check_scheduledevent_consolidated.sh\\\": state - signal: killed. output - \\\"\\\"\"",
            "source": {
                "component": "custom-scheduledevents-consolidated-condition-plugin-monitor",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:16:27Z",
            "lastTimestamp": "2023-12-26T14:16:27Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-default-20426481-vmss000000.17a467594afeaaa3",
                "namespace": "default",
                "uid": "0dc35de5-b35f-4669-9644-e8bd9f889dd2",
                "resourceVersion": "1692",
                "creationTimestamp": "2023-12-26T14:16:32Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-default-20426481-vmss000000",
                "uid": "aks-default-20426481-vmss000000"
            },
            "reason": "NoVMEventScheduled",
            "message": "Node condition VMEventScheduled is now: False, reason: NoVMEventScheduled, message: \"VM has no scheduled event\"",
            "source": {
                "component": "custom-scheduledevents-consolidated-condition-plugin-monitor",
                "host": "aks-default-20426481-vmss000000"
            },
            "firstTimestamp": "2023-12-26T14:16:32Z",
            "lastTimestamp": "2023-12-26T14:16:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-default-20426481-vmss000001.17a467311628eca5",
                "namespace": "default",
                "uid": "8d6f0d70-da13-490b-922c-8ae30158c771",
                "resourceVersion": "712",
                "creationTimestamp": "2023-12-26T14:13:39Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-default-20426481-vmss000001",
                "uid": "e79d6219-bfb3-4392-90aa-7f6a954e3e5e",
                "apiVersion": "v1"
            },
            "reason": "RegisteredNode",
            "message": "Node aks-default-20426481-vmss000001 event: Registered Node aks-default-20426481-vmss000001 in Controller",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2023-12-26T14:13:39Z",
            "lastTimestamp": "2023-12-26T14:13:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "node-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-default-20426481-vmss000001.17a467323941f960",
                "namespace": "default",
                "uid": "ab0f2962-5a19-41c7-932a-8fae51663677",
                "resourceVersion": "774",
                "creationTimestamp": "2023-12-26T14:13:44Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-default-20426481-vmss000001",
                "uid": "aks-default-20426481-vmss000001"
            },
            "reason": "Starting",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Normal",
            "eventTime": "2023-12-26T14:13:44.459539Z",
            "action": "StartKubeProxy",
            "reportingComponent": "kube-proxy",
            "reportingInstance": "kube-proxy-aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "aks-default-20426481-vmss000001.17a4675337ebead4",
                "namespace": "default",
                "uid": "02808864-96af-4e39-bcf3-c3db7f1c1547",
                "resourceVersion": "1587",
                "creationTimestamp": "2023-12-26T14:16:06Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-default-20426481-vmss000001",
                "uid": "aks-default-20426481-vmss000001"
            },
            "reason": "ContainerdStart",
            "message": "Starting containerd container runtime...",
            "source": {
                "component": "systemd-monitor",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:16:06Z",
            "lastTimestamp": "2023-12-26T14:16:06Z",
            "count": 2,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "busybox.17a467b66642b7bd",
                "namespace": "default",
                "uid": "93dcc2aa-df9b-4bc8-aed4-8e5cb4c458b1",
                "resourceVersion": "3261",
                "creationTimestamp": "2023-12-26T14:23:12Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "busybox",
                "uid": "dd15931f-f6b1-4cfa-bda0-29d93a23ef9e",
                "apiVersion": "v1",
                "resourceVersion": "3259"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned default/busybox to aks-default-20426481-vmss000001",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:23:12Z",
            "lastTimestamp": "2023-12-26T14:23:12Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "busybox.17a467b6c5212042",
                "namespace": "default",
                "uid": "b9fac6c4-dada-4f68-831e-73e0f9ca4697",
                "resourceVersion": "3679",
                "creationTimestamp": "2023-12-26T14:23:13Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "busybox",
                "uid": "dd15931f-f6b1-4cfa-bda0-29d93a23ef9e",
                "apiVersion": "v1",
                "resourceVersion": "3260",
                "fieldPath": "spec.containers{busybox}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"busybox\"",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:23:13Z",
            "lastTimestamp": "2023-12-26T14:24:50Z",
            "count": 5,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "busybox.17a467b71cdb128d",
                "namespace": "default",
                "uid": "724044f1-8e3d-40c4-8f9b-ca2ecbc45100",
                "resourceVersion": "3275",
                "creationTimestamp": "2023-12-26T14:23:15Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "busybox",
                "uid": "dd15931f-f6b1-4cfa-bda0-29d93a23ef9e",
                "apiVersion": "v1",
                "resourceVersion": "3260",
                "fieldPath": "spec.containers{busybox}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"busybox\" in 1.471770677s (1.471786478s including waiting)",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:23:15Z",
            "lastTimestamp": "2023-12-26T14:23:15Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "busybox.17a467b7273df114",
                "namespace": "default",
                "uid": "6106b8cf-a6f5-4b39-8a62-25916bdd154a",
                "resourceVersion": "3467",
                "creationTimestamp": "2023-12-26T14:23:15Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "busybox",
                "uid": "dd15931f-f6b1-4cfa-bda0-29d93a23ef9e",
                "apiVersion": "v1",
                "resourceVersion": "3260",
                "fieldPath": "spec.containers{busybox}"
            },
            "reason": "Created",
            "message": "Created container busybox",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:23:15Z",
            "lastTimestamp": "2023-12-26T14:23:59Z",
            "count": 4,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "busybox.17a467b72b97ffac",
                "namespace": "default",
                "uid": "64718ff4-687d-49ce-9cf9-71e77f8bd7e1",
                "resourceVersion": "3468",
                "creationTimestamp": "2023-12-26T14:23:15Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "busybox",
                "uid": "dd15931f-f6b1-4cfa-bda0-29d93a23ef9e",
                "apiVersion": "v1",
                "resourceVersion": "3260",
                "fieldPath": "spec.containers{busybox}"
            },
            "reason": "Started",
            "message": "Started container busybox",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:23:15Z",
            "lastTimestamp": "2023-12-26T14:23:59Z",
            "count": 4,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "busybox.17a467b798cc18a1",
                "namespace": "default",
                "uid": "00c5bafb-6db8-40f7-869c-72695316b118",
                "resourceVersion": "3288",
                "creationTimestamp": "2023-12-26T14:23:17Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "busybox",
                "uid": "dd15931f-f6b1-4cfa-bda0-29d93a23ef9e",
                "apiVersion": "v1",
                "resourceVersion": "3260",
                "fieldPath": "spec.containers{busybox}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"busybox\" in 472.144388ms (472.150388ms including waiting)",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:23:17Z",
            "lastTimestamp": "2023-12-26T14:23:17Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "busybox.17a467b7f44673c7",
                "namespace": "default",
                "uid": "f734fa9f-53fb-4759-8a37-9d618e8d879e",
                "resourceVersion": "3626",
                "creationTimestamp": "2023-12-26T14:23:18Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "busybox",
                "uid": "dd15931f-f6b1-4cfa-bda0-29d93a23ef9e",
                "apiVersion": "v1",
                "resourceVersion": "3260",
                "fieldPath": "spec.containers{busybox}"
            },
            "reason": "BackOff",
            "message": "Back-off restarting failed container busybox in pod busybox_default(dd15931f-f6b1-4cfa-bda0-29d93a23ef9e)",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:23:18Z",
            "lastTimestamp": "2023-12-26T14:24:38Z",
            "count": 8,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "busybox.17a467bac87599d2",
                "namespace": "default",
                "uid": "76d52c3b-a77a-45c8-944d-74105f79445e",
                "resourceVersion": "3353",
                "creationTimestamp": "2023-12-26T14:23:30Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "busybox",
                "uid": "dd15931f-f6b1-4cfa-bda0-29d93a23ef9e",
                "apiVersion": "v1",
                "resourceVersion": "3260",
                "fieldPath": "spec.containers{busybox}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"busybox\" in 340.595102ms (340.602703ms including waiting)",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:23:30Z",
            "lastTimestamp": "2023-12-26T14:23:30Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "busybox.17a467c14f2a05a9",
                "namespace": "default",
                "uid": "80ef8543-dded-4cda-afff-64a8dfb8c4ee",
                "resourceVersion": "3466",
                "creationTimestamp": "2023-12-26T14:23:59Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "busybox",
                "uid": "dd15931f-f6b1-4cfa-bda0-29d93a23ef9e",
                "apiVersion": "v1",
                "resourceVersion": "3260",
                "fieldPath": "spec.containers{busybox}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"busybox\" in 1.370433581s (1.370466583s including waiting)",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:23:59Z",
            "lastTimestamp": "2023-12-26T14:23:59Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "nginx.17a4678b49f5bb5f",
                "namespace": "default",
                "uid": "73db1323-1642-4840-b0fa-f8fc74a46502",
                "resourceVersion": "2531",
                "creationTimestamp": "2023-12-26T14:20:06Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "nginx",
                "uid": "bf78d910-aba1-4b80-bf97-06bf3bcac839",
                "apiVersion": "v1",
                "resourceVersion": "2529"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned default/nginx to aks-default-20426481-vmss000001",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-12-26T14:20:06Z",
            "lastTimestamp": "2023-12-26T14:20:06Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "nginx.17a4678b7b5f656a",
                "namespace": "default",
                "uid": "b2bde80d-9dbf-45c8-94e9-d5e02ad6e497",
                "resourceVersion": "2535",
                "creationTimestamp": "2023-12-26T14:20:07Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "nginx",
                "uid": "bf78d910-aba1-4b80-bf97-06bf3bcac839",
                "apiVersion": "v1",
                "resourceVersion": "2530",
                "fieldPath": "spec.containers{nginx}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"nginx\"",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:20:07Z",
            "lastTimestamp": "2023-12-26T14:20:07Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "nginx.17a4678c7507bb77",
                "namespace": "default",
                "uid": "58e11f51-b4a1-4766-87f1-1e0b2c710e54",
                "resourceVersion": "2553",
                "creationTimestamp": "2023-12-26T14:20:12Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "nginx",
                "uid": "bf78d910-aba1-4b80-bf97-06bf3bcac839",
                "apiVersion": "v1",
                "resourceVersion": "2530",
                "fieldPath": "spec.containers{nginx}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"nginx\" in 4.188532559s (4.188543759s including waiting)",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:20:12Z",
            "lastTimestamp": "2023-12-26T14:20:12Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "nginx.17a4678c77ef1483",
                "namespace": "default",
                "uid": "df42889c-9e90-4eb1-8e3d-e987d311b6e9",
                "resourceVersion": "2554",
                "creationTimestamp": "2023-12-26T14:20:12Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "nginx",
                "uid": "bf78d910-aba1-4b80-bf97-06bf3bcac839",
                "apiVersion": "v1",
                "resourceVersion": "2530",
                "fieldPath": "spec.containers{nginx}"
            },
            "reason": "Created",
            "message": "Created container nginx",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:20:12Z",
            "lastTimestamp": "2023-12-26T14:20:12Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        },
        {
            "metadata": {
                "name": "nginx.17a4678c7dba5a5b",
                "namespace": "default",
                "uid": "bb533ee3-9209-4bc3-8503-a97553489b99",
                "resourceVersion": "2555",
                "creationTimestamp": "2023-12-26T14:20:12Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "nginx",
                "uid": "bf78d910-aba1-4b80-bf97-06bf3bcac839",
                "apiVersion": "v1",
                "resourceVersion": "2530",
                "fieldPath": "spec.containers{nginx}"
            },
            "reason": "Started",
            "message": "Started container nginx",
            "source": {
                "component": "kubelet",
                "host": "aks-default-20426481-vmss000001"
            },
            "firstTimestamp": "2023-12-26T14:20:12Z",
            "lastTimestamp": "2023-12-26T14:20:12Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-default-20426481-vmss000001"
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "3768"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "3769"
    },
    "items": [
        {
            "metadata": {
                "name": "kubernetes",
                "namespace": "default",
                "uid": "dd77248a-2b25-4049-a423-23915f0985d2",
                "resourceVersion": "195",
                "creationTimestamp": "2023-12-26T14:12:48Z",
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 443
                    }
                ],
                "clusterIP": "10.0.0.1",
                "clusterIPs": [
                    "10.0.0.1"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "3769"
    },
    "items": []
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "3769"
    },
    "items": []
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "3770"
    },
    "items": []
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "3771"
    },
    "items": [
        {
            "metadata": {
                "name": "busybox",
                "namespace": "default",
                "uid": "dd15931f-f6b1-4cfa-bda0-29d93a23ef9e",
                "resourceVersion": "3743",
                "creationTimestamp": "2023-12-26T14:23:12Z",
                "labels": {
                    "run": "busybox"
                }
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-api-access-2vc2c",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "busybox",
                        "image": "busybox",
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-api-access-2vc2c",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "Always"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "nodeName": "aks-default-20426481-vmss000001",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:23:12Z"
                    },
                    {
                        "type": "Ready",
                        "status": "False",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:24:52Z",
                        "reason": "ContainersNotReady",
                        "message": "containers with unready status: [busybox]"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "False",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:24:52Z",
                        "reason": "ContainersNotReady",
                        "message": "containers with unready status: [busybox]"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:23:12Z"
                    }
                ],
                "hostIP": "10.224.0.5",
                "podIP": "10.244.1.3",
                "podIPs": [
                    {
                        "ip": "10.244.1.3"
                    }
                ],
                "startTime": "2023-12-26T14:23:12Z",
                "containerStatuses": [
                    {
                        "name": "busybox",
                        "state": {
                            "waiting": {
                                "reason": "CrashLoopBackOff",
                                "message": "back-off 1m20s restarting failed container=busybox pod=busybox_default(dd15931f-f6b1-4cfa-bda0-29d93a23ef9e)"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 0,
                                "reason": "Completed",
                                "startedAt": "2023-12-26T14:24:50Z",
                                "finishedAt": "2023-12-26T14:24:50Z",
                                "containerID": "containerd://b60bf1e0873d6cfd33c61c9ad258009325306c572863a083736af89d1e5b8e2e"
                            }
                        },
                        "ready": false,
                        "restartCount": 4,
                        "image": "docker.io/library/busybox:latest",
                        "imageID": "docker.io/library/busybox@sha256:ba76950ac9eaa407512c9d859cea48114eeff8a6f12ebaa5d32ce79d4a017dd8",
                        "containerID": "containerd://b60bf1e0873d6cfd33c61c9ad258009325306c572863a083736af89d1e5b8e2e",
                        "started": false
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "nginx",
                "namespace": "default",
                "uid": "bf78d910-aba1-4b80-bf97-06bf3bcac839",
                "resourceVersion": "2556",
                "creationTimestamp": "2023-12-26T14:20:06Z",
                "labels": {
                    "run": "nginx"
                }
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-api-access-gght4",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "nginx",
                        "image": "nginx",
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-api-access-gght4",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "Always"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "nodeName": "aks-default-20426481-vmss000001",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:20:06Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:20:12Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:20:12Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-26T14:20:06Z"
                    }
                ],
                "hostIP": "10.224.0.5",
                "podIP": "10.244.1.2",
                "podIPs": [
                    {
                        "ip": "10.244.1.2"
                    }
                ],
                "startTime": "2023-12-26T14:20:06Z",
                "containerStatuses": [
                    {
                        "name": "nginx",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-26T14:20:12Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "docker.io/library/nginx:latest",
                        "imageID": "docker.io/library/nginx@sha256:2bdc49f2f8ae8d8dc50ed00f2ee56d00385c6f8bc8a8b320d0a294d9e3b49026",
                        "containerID": "containerd://f80ac4d66695db8801e6c7b9900bd7f42afaf8f0beb27873d15574247b025c1d",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        }
    ]
}
==== START logs for container busybox of pod default/busybox ====
==== END logs for container busybox of pod default/busybox ====
==== START logs for container nginx of pod default/nginx ====
/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
/docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
/docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
/docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
/docker-entrypoint.sh: Configuration complete; ready for start up
2023/12/26 14:20:12 [notice] 1#1: using the "epoll" event method
2023/12/26 14:20:12 [notice] 1#1: nginx/1.25.3
2023/12/26 14:20:12 [notice] 1#1: built by gcc 12.2.0 (Debian 12.2.0-14) 
2023/12/26 14:20:12 [notice] 1#1: OS: Linux 5.15.0-1052-azure
2023/12/26 14:20:12 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576
2023/12/26 14:20:12 [notice] 1#1: start worker processes
2023/12/26 14:20:12 [notice] 1#1: start worker process 29
2023/12/26 14:20:12 [notice] 1#1: start worker process 30
==== END logs for container nginx of pod default/nginx ====
